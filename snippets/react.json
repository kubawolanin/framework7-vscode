{
    "accordion": [
        {
            "prefix": "f7:accordion",
            "description": "",
            "body": [
                "export default () => (",
                "<Page>",
                "  <Navbar title=\"Accordion\"/>",
                "",
                "  <BlockTitle>List View Accordion</BlockTitle>",
                "  <List accordionList>",
                "    <ListItem accordionItem title=\"Lorem Ipsum\">",
                "      <AccordionContent>",
                "        <Block>",
                "          <p>",
                "            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean elementum id neque nec commodo. Sed vel justo at turpis laoreet pellentesque quis sed lorem. Integer semper arcu nibh, non mollis arcu tempor vel. Sed pharetra tortor vitae est rhoncus, vel congue dui sollicitudin. Donec eu arcu dignissim felis viverra blandit suscipit eget ipsum.",
                "          </p>",
                "        </Block>",
                "      </AccordionContent>",
                "    </ListItem>",
                "    <ListItem accordionItem title=\"Nested List\">",
                "      <AccordionContent>",
                "        <List>",
                "          <ListItem title=\"Item 1\"></ListItem>",
                "          <ListItem title=\"Item 2\"></ListItem>",
                "          <ListItem title=\"Item 3\"></ListItem>",
                "          <ListItem title=\"Item 4\"></ListItem>",
                "        </List>",
                "      </AccordionContent>",
                "    </ListItem>",
                "    <ListItem accordionItem title=\"Integer semper\">",
                "      <AccordionContent>",
                "        <Block>",
                "          <p>",
                "            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean elementum id neque nec commodo. Sed vel justo at turpis laoreet pellentesque quis sed lorem. Integer semper arcu nibh, non mollis arcu tempor vel. Sed pharetra tortor vitae est rhoncus, vel congue dui sollicitudin. Donec eu arcu dignissim felis viverra blandit suscipit eget ipsum.",
                "          </p>",
                "        </Block>",
                "      </AccordionContent>",
                "    </ListItem>",
                "  </List>",
                "",
                "  <BlockTitle>Inset Accordion</BlockTitle>",
                "  <List accordionList inset>",
                "    <ListItem accordionItem title=\"Lorem Ipsum\">",
                "      <AccordionContent>",
                "        <Block>",
                "          <p>",
                "            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean elementum id neque nec commodo. Sed vel justo at turpis laoreet pellentesque quis sed lorem. Integer semper arcu nibh, non mollis arcu tempor vel. Sed pharetra tortor vitae est rhoncus, vel congue dui sollicitudin. Donec eu arcu dignissim felis viverra blandit suscipit eget ipsum.",
                "          </p>",
                "        </Block>",
                "      </AccordionContent>",
                "    </ListItem>",
                "    <ListItem accordionItem title=\"Nested List\">",
                "      <AccordionContent>",
                "        <List>",
                "          <ListItem title=\"Item 1\"></ListItem>",
                "          <ListItem title=\"Item 2\"></ListItem>",
                "          <ListItem title=\"Item 3\"></ListItem>",
                "          <ListItem title=\"Item 4\"></ListItem>",
                "        </List>",
                "      </AccordionContent>",
                "    </ListItem>",
                "    <ListItem accordionItem title=\"Integer semper\">",
                "      <AccordionContent>",
                "        <Block>",
                "          <p>",
                "            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean elementum id neque nec commodo. Sed vel justo at turpis laoreet pellentesque quis sed lorem. Integer semper arcu nibh, non mollis arcu tempor vel. Sed pharetra tortor vitae est rhoncus, vel congue dui sollicitudin. Donec eu arcu dignissim felis viverra blandit suscipit eget ipsum.",
                "          </p>",
                "        </Block>",
                "      </AccordionContent>",
                "    </ListItem>",
                "  </List>",
                "",
                "  <BlockTitle>Custom Collapsible</BlockTitle>",
                "  <Block inner accordionList>",
                "    {Array.from(Array(3).keys()).map(n => (",
                "      <AccordionItem key={n}>",
                "        <AccordionToggle><b>Item {n + 1}</b></AccordionToggle>",
                "        <AccordionContent>Content {n + 1}</AccordionContent>",
                "      </AccordionItem>",
                "    ))}",
                "  </Block>",
                "</Page>",
                ");"
            ]
        }
    ],
    "action-sheet": [
        {
            "prefix": "f7:action-sheet",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor() {",
                "    super();",
                "",
                "    this.state = {",
                "      actionGridOpened: false,",
                "      oneGroupOpened: false",
                "    };",
                "  }",
                "",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Action Sheet\"></Navbar>",
                "        <Block strong>",
                "          <p className=\"row\">",
                "            {/* One group, open by direct accessing instance .open() method */}",
                "            <Button className=\"col\" raised onClick={() => this.refs.actionsOneGroup.open()}>One group</Button>",
                "            {/*  Two groups, open by \"actionsOpen\" attribute */}",
                "            <Button className=\"col\" raised actionsOpen=\"#actions-two-groups\">Two groups</Button>",
                "          </p>",
                "          <p>",
                "            {/* Actions Grid, open by changing actionGridOpened state property */}",
                "            <Button raised onClick={() => this.setActionsGridOpened(true)}>Action Grid</Button>",
                "          </p>",
                "        </Block>",
                "",
                "        <BlockTitle>Action Sheet To Popover</BlockTitle>",
                "        <Block strong>",
                "          <p ref={e => this.buttonToPopoverWrapper = e}>",
                "            Action Sheet can be automatically converted to Popover (for tablets). This button will open Popover on tablets and Action Sheet on phones:",
                "            <Button",
                "              style={{ display: 'inline-block' }}",
                "              className=\"button-to-popover\"",
                "              onClick={this.openActionsPopover.bind(this)}>",
                "                Actions",
                "              </Button>",
                "          </p>",
                "        </Block>",
                "",
                "        {/* One Group */}",
                "        <Actions ref=\"actionsOneGroup\">",
                "          <ActionsGroup>",
                "            <ActionsLabel>Do something</ActionsLabel>",
                "            <ActionsButton bold>Button 1</ActionsButton>",
                "            <ActionsButton>Button 2</ActionsButton>",
                "            <ActionsButton color=\"red\">Cancel</ActionsButton>",
                "          </ActionsGroup>",
                "        </Actions>",
                "",
                "        {/* Two Groups */}",
                "        <Actions id=\"actions-two-groups\">",
                "          <ActionsGroup>",
                "            <ActionsLabel>Do something</ActionsLabel>",
                "            <ActionsButton bold>Button 1</ActionsButton>",
                "            <ActionsButton>Button 2</ActionsButton>",
                "          </ActionsGroup>",
                "          <ActionsGroup>",
                "            <ActionsButton color=\"red\">Cancel</ActionsButton>",
                "          </ActionsGroup>",
                "        </Actions>",
                "",
                "        {/* Grid */}",
                "        <Actions grid={true} opened={this.state.actionGridOpened} onActionsClosed={() => this.setActionsGridOpened(false)}>",
                "          <ActionsGroup>",
                "            <ActionsButton>",
                "              <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-96x96-1.jpg\" width=\"48\"/>",
                "              <span>Button 1</span>",
                "            </ActionsButton>",
                "            <ActionsButton>",
                "              <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-96x96-2.jpg\" width=\"48\"/>",
                "              <span>Button 2</span>",
                "            </ActionsButton>",
                "            <ActionsButton>",
                "              <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-96x96-3.jpg\" width=\"48\"/>",
                "              <span>Button 3</span>",
                "            </ActionsButton>",
                "          </ActionsGroup>",
                "          <ActionsGroup>",
                "            <ActionsButton>",
                "              <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-96x96-4.jpg\" width=\"48\"/>",
                "              <span>Button 4</span>",
                "            </ActionsButton>",
                "            <ActionsButton>",
                "              <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-96x96-5.jpg\" width=\"48\"/>",
                "              <span>Button 5</span>",
                "            </ActionsButton>",
                "            <ActionsButton>",
                "              <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-96x96-6.jpg\" width=\"48\"/>",
                "              <span>Button 6</span>",
                "            </ActionsButton>",
                "          </ActionsGroup>",
                "        </Actions>",
                "",
                "      </Page>",
                "    )",
                "  }",
                "",
                "  componentWillUnmount() {",
                "    if (this.actionsToPopover) {",
                "      this.actionsToPopover.destroy();",
                "    }",
                "  }",
                "",
                "  openActionsPopover() {",
                "    const app = this.$f7;",
                "",
                "    if (!this.actionsToPopover) {",
                "      this.actionsToPopover = app.actions.create({",
                "        buttons: [",
                "          {",
                "            text: 'Do something',",
                "            label: true,",
                "          },",
                "          {",
                "            text: 'Button 1',",
                "            bold: true,",
                "          },",
                "          {",
                "            text: 'Button 2',",
                "          },",
                "          {",
                "            text: 'Cancel',",
                "            color: 'red',",
                "          },",
                "        ],",
                "        // Need to specify popover target",
                "        targetEl: this.buttonToPopoverWrapper.querySelector('.button-to-popover'),",
                "      });",
                "    }",
                "",
                "    // Open",
                "    this.actionsToPopover.open();",
                "  }",
                "",
                "  setOneGroupOpened(oneGroupOpened) {",
                "    this.setState({",
                "      oneGroupOpened",
                "    });",
                "  }",
                "",
                "  setActionsGridOpened(actionGridOpened) {",
                "    this.setState({",
                "      actionGridOpened",
                "    });",
                "  }",
                "}"
            ]
        }
    ],
    "app-layout": [
        {
            "prefix": "f7:app-layout",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'App Layout | Framework7 React Documentation';",
                "",
                "block content",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 App Layout",
                "    p First thing we should do for our App is to create index.html file with app's skeleton.",
                "      <!DOCTYPE html>",
                "      <html>",
                "        <head>",
                "          <!-- Required meta tags-->",
                "          <meta charset=\"utf-8\">",
                "          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui, viewport-fit=cover\">",
                "          <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">",
                "          <!-- Color theme for statusbar -->",
                "          <meta name=\"theme-color\" content=\"#2196f3\">",
                "          <!-- Your app title -->",
                "          <title>My App</title>",
                "          <!-- Path to Framework7 Library CSS Bundle -->",
                "          <link rel=\"stylesheet\" href=\"path/to/framework7.bundle.min.css\">",
                "          <!-- Path to your custom app styles-->",
                "          <link rel=\"stylesheet\" href=\"path/to/my-app.css\">",
                "        </head>",
                "        <body>",
                "          <!-- App Root Element -->",
                "          <div id=\"app\"></div>",
                "",
                "          <script type=\"text/javascript\" src=\"path/to/app.js\"></script>",
                "        </body>",
                "      </html>",
                "    p The <code>&lt;div id=\"app\"&gt;&lt;/div&gt;</code> is where your main app skeleton should be. You can mount its content as a component or (just for example) we can start to write app skeleton right inside of this div:",
                "    h2 Basic Layout",
                "    p Let's look at the very basic app component layout:",
                "      // App.jsx",
                "      import { App, Statusbar, View, Page, Navbar, Toolbar, Link } from 'framework7-react';",
                "",
                "      export default () => (",
                "        // Main Framework7 App component where we pass Framework7 params",
                "        <App params={{ theme: 'auto', name: 'My App', id: 'com.demoapp.test' }}>",
                "",
                "          {/* Status bar overlay for full screen mode (Cordova or PhoneGap) */}",
                "          <Statusbar></Statusbar>",
                "",
                "          {/* Your main view, should have \"main\" prop */}",
                "          <View main>",
                "{/*  Initial Page */}",
                "<Page>",
                "  {/* Top Navbar */}",
                "  <Navbar title=\"Awesome App\"></Navbar>",
                "  {/* Toolbar */}",
                "  <Toolbar bottom>",
                "    <Link>Link 1</Link>",
                "    <Link>Link 2</Link>",
                "  </Toolbar>",
                "  {/* Page Content */}",
                "  <p>Page content goes here</p>",
                "  <Link href=\"/about/\">About App</Link>",
                "</Page>",
                "          </View>",
                "        </App>",
                "      )",
                "",
                "    h2 Advanced Layout",
                "    p Now, let's look on more advanced layout where we will also add side panels with views and popup",
                "      // App.jsx",
                "",
                "      import { App, NavRight, Statusbar, Panel, View, Page, Navbar, Block, Row, Col, Button, Popup, Link } from 'framework7-react';",
                "",
                "      export default () => (",
                "        /* Main Framework7 App component where we pass Framework7 params */",
                "        <App params={{ theme: 'auto', name: 'My App', id: 'com.demoapp.test' }}>",
                "",
                "          {/* Status bar overlay for full screen mode (Cordova or PhoneGap) */}",
                "          <Statusbar></Statusbar>",
                "",
                "          {/* Left Panel with \"cover\" effect */}",
                "          <Panel left cover>",
                "<View>",
                "  <Page>",
                "    <Navbar title=\"Left Panel\"></Navbar>",
                "    <Block>",
                "      <p>Here comes the left panel text</p>",
                "    </Block>",
                "  </Page>",
                "</View>",
                "          </Panel>",
                "",
                "          {/* Right Panel with \"reveal\" effect */}",
                "          <Panel right reveal>",
                "<View>",
                "  <Page>",
                "    <Navbar title=\"Right Panel\"></Navbar>",
                "    <Block>",
                "      <p>Here comes the right panel text</p>",
                "    </Block>",
                "  </Page>",
                "</View>",
                "          </Panel>",
                "",
                "          {/*  Main view */}",
                "          <View main>",
                "<Page>",
                "  <Navbar title=\"Awesome App\"></Navbar>",
                "  {/* Page content */}",
                "  <Block>",
                "    <p>Here comes main view page text</p>",
                "  </Block>",
                "  {/* Buttons to open panels */}",
                "  <Row>",
                "    <Col>",
                "      <Button panelOpen=\"left\">Left Panel</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button panelOpen=\"right\">Right Panel</Button>",
                "    </Col>",
                "  </Row>",
                "  {/* Button to open popup */}",
                "  <Button popupOpen=\"#my-popup\">Open Popup</Button>",
                "</Page>",
                "          </View>",
                "",
                "          {/* Popup. All modals should be outside of Views */}",
                "          <Popup id=\"my-popup\">",
                "<View>",
                "  <Page>",
                "    <Navbar title=\"Popup\">",
                "      {/* Link to close popup */}",
                "      <NavRight>",
                "        <Link popupClose>Close</Link>",
                "      </NavRight>",
                "    </Navbar>",
                "    <Block>",
                "      <p>Here comes popup text</p>",
                "    </Block>",
                "  </Page>",
                "</View>",
                "          </Popup>",
                "        </App>",
                "      )",
                "",
                "    p You can read more about statusbar overlay, views, navbar, toolbar, pages, panels and other components in appropriate sections.",
                "    h2 Initialize App",
                "    p Now when we have basic template, we need to <a href=\"init-app.html\">initialize our app</a> in (for example) <code>my-app.js</code>"
            ]
        }
    ],
    "app": [
        {
            "prefix": "f7:app",
            "description": "p Passing all parameters in <code>params</code> prop",
            "body": [
                "          import AboutPage from './about.jsx';",
                "          import ServicesPage from './services.jsx';",
                "",
                "          const f7params = {",
                "name: 'My App',",
                "id: 'com.myapp.test',",
                "// routes",
                "routes: [",
                "  {",
                "    path: '/about/',",
                "    component: AboutPage,",
                "  },",
                "  {",
                "    path: '/services/',",
                "    component: ServicesPage,",
                "  },",
                "],",
                "// ... other params",
                "          }",
                "          export default () => (",
                "<App params={f7params}>",
                "  ...",
                "</App>",
                "          );",
                "    p Passing routes in separate prop:",
                "          import routes from './routes';",
                "",
                "          const f7params = {",
                "name: 'My App',",
                "id: 'com.myapp.test',",
                "// ... other params",
                "          };",
                "",
                "          export default () => (",
                "<App params={f7params} routes={routes}>",
                "  ...",
                "</App>",
                "          );"
            ]
        }
    ],
    "badge": [
        {
            "prefix": "f7:badge",
            "description": "",
            "body": [
                "export default () => (",
                "  <Page>",
                "    <Navbar sliding title=\"Badge\">",
                "      <NavRight>",
                "        <Link iconOnly>",
                "          <Icon ios=\"f7:person_fill\" md=\"material:person\">",
                "            <Badge color=\"red\">5</Badge>",
                "          </Icon>",
                "        </Link>",
                "      </NavRight>",
                "    </Navbar>",
                "    <Toolbar tabbar labels bottom>",
                "      <Link tabLink=\"#tab-1\" tabLinkActive>",
                "        <Icon className=\"icon-fill\" ios=\"f7:email_fill\" md=\"material:email\">",
                "          <Badge color=\"green\">5</Badge>",
                "        </Icon>",
                "        <span className=\"tabbar-label\">Inbox</span>",
                "      </Link>",
                "      <Link tabLink=\"#tab-2\">",
                "        <Icon ios=\"f7:today\" md=\"material:today\">",
                "          <Badge color=\"red\">7</Badge>",
                "        </Icon>",
                "        <span className=\"tabbar-label\">Calendar</span>",
                "      </Link>",
                "      <Link tabLink=\"#tab-3\">",
                "        <Icon ios=\"f7:cloud\" md=\"material:file_upload\">",
                "          <Badge color=\"red\">1</Badge>",
                "        </Icon>",
                "        <span className=\"tabbar-label\">Upload</span>",
                "      </Link>",
                "    </Toolbar>",
                "",
                "    <List>",
                "      <ListItem title=\"Foo Bar\" badge=\"0\"/>",
                "      <ListItem title=\"Ivan Petrov\" badge=\"CEO\" badgeColor=\"blue\"/>",
                "      <ListItem title=\"John Doe\" badge=\"5\" badgeColor=\"green\"/>",
                "      <ListItem title=\"Jane Doe\" badge=\"NEW\" badgeColor=\"orange\"/>",
                "    </List>",
                "  </Page>",
                ");"
            ]
        }
    ],
    "block": [
        {
            "prefix": "f7:block",
            "description": "",
            "body": [
                "        export default () => (",
                "          <Page>",
                "<Navbar title=\"Content Block\"></Navbar>",
                "<p>This paragraph is outside of content block. Not cool, but useful for any custom elements with custom styling.</p>",
                "",
                "<Block>",
                "  <p>Here comes paragraph within content block. Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "",
                "<Block strong>",
                "  <p>Here comes another text block with additional \"block-strong\" class. Praesent nec imperdiet diam. Maecenas vel lectus porttitor, consectetur magna nec, viverra sem. Aliquam sed risus dolor. Morbi tincidunt ut libero id sodales. Integer blandit varius nisi quis consectetur. </p>",
                "</Block>",
                "",
                "<BlockTitle>Block title</BlockTitle>",
                "<Block>",
                "  <p>Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "",
                "<BlockTitle>Another ultra long content block title</BlockTitle>",
                "<Block strong>",
                "  <p>Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "",
                "<BlockTitle>Inset</BlockTitle>",
                "<Block strong inset>",
                "  <p>Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "",
                "<BlockTitle>Tablet Inset</BlockTitle>",
                "<Block strong tabletInset>",
                "  <p>Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "",
                "<BlockTitle>With Header & Footer</BlockTitle>",
                "<Block>",
                "  <BlockHeader>Block Header</BlockHeader>",
                "  <p>Here comes paragraph within content block. Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "  <BlockFooter>Block Footer</BlockFooter>",
                "</Block>",
                "",
                "<BlockHeader>Block Header</BlockHeader>",
                "<Block>",
                "  <p>Here comes paragraph within content block. Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "<BlockFooter>Block Footer</BlockFooter>",
                "",
                "<Block strong>",
                "  <BlockHeader>Block Header</BlockHeader>",
                "  <p>Here comes paragraph within content block. Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "  <BlockFooter>Block Footer</BlockFooter>",
                "</Block>",
                "",
                "<BlockHeader>Block Header</BlockHeader>",
                "<Block strong>",
                "  <p>Here comes paragraph within content block. Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "<BlockFooter>Block Footer</BlockFooter>",
                "",
                "<BlockTitle large>Block Title Large</BlockTitle>",
                "<Block strong>",
                "  <p>Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "",
                "<BlockTitle medium>Block Title Medium</BlockTitle>",
                "<Block strong>",
                "  <p>Donec et nulla auctor massa pharetra adipiscing ut sit amet sem. Suspendisse molestie velit vitae mattis tincidunt. Ut sit amet quam mollis, vulputate turpis vel, sagittis felis. </p>",
                "</Block>",
                "          </Page>",
                "        );"
            ]
        }
    ],
    "button": [
        {
            "prefix": "f7:button",
            "description": "",
            "body": [
                "<BlockTitle>Usual Buttons</BlockTitle>",
                "<Block>",
                "  <Row>",
                "    <Col>",
                "      <Button>Button</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button>Button</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button round>Round</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Fill Buttons</BlockTitle>",
                "<Block>",
                "  <Row>",
                "    <Col>",
                "      <Button fill>Button</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button fill>Button</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button fill round>Round</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Outline Buttons</BlockTitle>",
                "<Block>",
                "  <Row>",
                "    <Col>",
                "      <Button outline>Button</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button outline>Button</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button outline round>Round</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Raised Buttons</BlockTitle>",
                "<Block>",
                "  <Row tag=\"p\">",
                "    <Col tag=\"span\">",
                "      <Button raised>Button</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button raised fill>Fill</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button raised outline>Outline</Button>",
                "    </Col>",
                "  </Row>",
                "  <Row tag=\"p\">",
                "    <Col tag=\"span\">",
                "      <Button raised round>Round</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button raised fill round>Fill</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button raised outline round>Outline</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Segmented</BlockTitle>",
                "<Block>",
                "  <Segmented raised tag=\"p\">",
                "    <Button>Button</Button>",
                "    <Button>Button</Button>",
                "    <Button active>Active</Button>",
                "  </Segmented>",
                "  <Segmented raised tag=\"p\">",
                "    <Button outline>Outline</Button>",
                "    <Button outline>Outline</Button>",
                "    <Button outline active>Active</Button>",
                "  </Segmented>",
                "  <Segmented raised round tag=\"p\">",
                "    <Button round>Button</Button>",
                "    <Button round>Button</Button>",
                "    <Button round active>Active</Button>",
                "  </Segmented>",
                "  <Segmented raised round tag=\"p\">",
                "    <Button round outline>Outline</Button>",
                "    <Button round outline>Outline</Button>",
                "    <Button round outline active>Active</Button>",
                "  </Segmented>",
                "</Block>",
                "",
                "<BlockTitle>Large Buttons</BlockTitle>",
                "<Block>",
                "  <Row tag=\"p\">",
                "    <Col tag=\"span\">",
                "      <Button large>Button</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button large fill>Fill</Button>",
                "    </Col>",
                "  </Row>",
                "  <Row tag=\"p\">",
                "    <Col tag=\"span\">",
                "      <Button large raised>Raised</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button large raised fill>Raised Fill</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Small Buttons</BlockTitle>",
                "<Block>",
                "  <Row tag=\"p\">",
                "    <Col tag=\"span\">",
                "      <Button large small>Button</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button large small outline>Outline</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button large small fill>Fill</Button>",
                "    </Col>",
                "  </Row>",
                "  <Row tag=\"p\">",
                "    <Col tag=\"span\">",
                "      <Button large small round>Button</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button large small outline round>Outline</Button>",
                "    </Col>",
                "    <Col tag=\"span\">",
                "      <Button large small fill round>Fill</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Color Buttons</BlockTitle>",
                "<Block>",
                "  <Row>",
                "    <Col>",
                "      <Button color=\"red\">Red</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button color=\"green\">Green</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button color=\"blue\">Blue</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Color Fill Buttons</BlockTitle>",
                "<Block>",
                "  <Row>",
                "    <Col>",
                "      <Button fill color=\"red\">Red</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button fill color=\"green\">Green</Button>",
                "    </Col>",
                "    <Col>",
                "      <Button fill color=\"blue\">Blue</Button>",
                "    </Col>",
                "  </Row>",
                "</Block>"
            ]
        }
    ],
    "cards": [
        {
            "prefix": "f7:cards",
            "description": "",
            "body": [
                "        <BlockTitle>Simple Cards</BlockTitle>",
                "        <Card",
                "          content=\"This is a simple card with plain text, but cards can also contain their own header, footer, list view, image, or any other element.\"",
                "        ></Card>",
                "        <Card",
                "          title=\"Card header\"",
                "          content=\"Card with header and footer. Card headers are used to display card titles and footers for additional information or just for custom actions.\"",
                "          footer=\"Card footer\"",
                "        ></Card>",
                "        <Card",
                "          content=\"Another card. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse feugiat sem est, non tincidunt ligula volutpat sit amet. Mauris aliquet magna justo. \"",
                "        ></Card>",
                "",
                "        <BlockTitle>Outline Cards</BlockTitle>",
                "        <Card",
                "          outline",
                "          content=\"This is a simple card with plain text, but cards can also contain their own header, footer, list view, image, or any other element.\"",
                "        ></Card>",
                "        <Card",
                "          outline",
                "          title=\"Card header\"",
                "          content=\"Card with header and footer. Card headers are used to display card titles and footers for additional information or just for custom actions.\"",
                "          footer=\"Card footer\"",
                "        ></Card>",
                "        <Card",
                "          outline",
                "          content=\"Another card. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse feugiat sem est, non tincidunt ligula volutpat sit amet. Mauris aliquet magna justo. \"",
                "        ></Card>",
                "",
                "        <BlockTitle>Styled Cards</BlockTitle>",
                "        <Card className=\"demo-card-header-pic\">",
                "          <CardHeader",
                "className=\"no-border\"",
                "valign=\"bottom\"",
                "style={{ backgroundImage: 'url(https://cdn.framework7.io/placeholder/nature-1000x600-3.jpg)' }}",
                "          >Journey To Mountains</CardHeader>",
                "          <CardContent>",
                "<p className=\"date\">Posted on January 21, 2015</p>",
                "<p>Quisque eget vestibulum nulla. Quisque quis dui quis ex ultricies efficitur vitae non felis. Phasellus quis nibh hendrerit...</p>",
                "          </CardContent>",
                "          <CardFooter>",
                "<Link>Like</Link>",
                "<Link>Read more</Link>",
                "          </CardFooter>",
                "        </Card>",
                "        <Card className=\"demo-card-header-pic\">",
                "          <CardHeader",
                "className=\"no-border\"",
                "valign=\"bottom\"",
                "style={{ backgroundImage: 'url(https://cdn.framework7.io/placeholder/people-1000x600-6.jpg)' }}",
                "          >Journey To Mountains</CardHeader>",
                "          <CardContent>",
                "<p className=\"date\">Posted on January 21, 2015</p>",
                "<p>Quisque eget vestibulum nulla. Quisque quis dui quis ex ultricies efficitur vitae non felis. Phasellus quis nibh hendrerit...</p>",
                "          </CardContent>",
                "          <CardFooter>",
                "<Link>Like</Link>",
                "<Link>Read more</Link>",
                "          </CardFooter>",
                "        </Card>",
                "",
                "        <BlockTitle>Facebook Cards</BlockTitle>",
                "        <Card className=\"demo-facebook-card\">",
                "          <CardHeader className=\"no-border\">",
                "<div className=\"demo-facebook-avatar\"><img src=\"https://cdn.framework7.io/placeholder/people-68x68-1.jpg\" width=\"34\" height=\"34\"/></div>",
                "<div className=\"demo-facebook-name\">John Doe</div>",
                "<div className=\"demo-facebook-date\">Monday at 3:47 PM</div>",
                "          </CardHeader>",
                "          <CardContent padding={false}>",
                "<img src=\"https://cdn.framework7.io/placeholder/nature-1000x700-8.jpg\" width=\"100%\"/>",
                "          </CardContent>",
                "          <CardFooter className=\"no-border\">",
                "<Link>Like</Link>",
                "<Link>Comment</Link>",
                "<Link>Share</Link>",
                "          </CardFooter>",
                "        </Card>",
                "        <Card className=\"demo-facebook-card\">",
                "          <CardHeader className=\"no-border\">",
                "<div className=\"demo-facebook-avatar\"><img src=\"https://cdn.framework7.io/placeholder/people-68x68-1.jpg\" width=\"34\" height=\"34\"/></div>",
                "<div className=\"demo-facebook-name\">John Doe</div>",
                "<div className=\"demo-facebook-date\">Monday at 2:15 PM</div>",
                "          </CardHeader>",
                "          <CardContent>",
                "<p>What a nice photo i took yesterday!</p><img src=\"https://cdn.framework7.io/placeholder/nature-1000x700-8.jpg\" width=\"100%\"/>",
                "<p className=\"likes\">Likes: 112 &nbsp;&nbsp; Comments: 43</p>",
                "          </CardContent>",
                "          <CardFooter className=\"no-border\">",
                "<Link>Like</Link>",
                "<Link>Comment</Link>",
                "<Link>Share</Link>",
                "          </CardFooter>",
                "        </Card>",
                "",
                "        <BlockTitle>Cards With List View</BlockTitle>",
                "        <Card>",
                "          <CardContent padding={false}>",
                "<List>",
                "  <ListItem link=\"#\">Link 1</ListItem>",
                "  <ListItem link=\"#\">Link 2</ListItem>",
                "  <ListItem link=\"#\">Link 3</ListItem>",
                "  <ListItem link=\"#\">Link 4</ListItem>",
                "  <ListItem link=\"#\">Link 5</ListItem>",
                "</List>",
                "          </CardContent>",
                "        </Card>",
                "        <Card title=\"New Releases:\">",
                "          <CardContent padding={false}>",
                "<List medial-list>",
                "  <ListItem",
                "    title=\"Yellow Submarine\"",
                "    subtitle=\"Beatles\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-4.jpg\" width=\"44\"/>",
                "  </ListItem>",
                "  <ListItem",
                "    title=\"Don't Stop Me Now\"",
                "    subtitle=\"Queen\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-5.jpg\" width=\"44\"/>",
                "  </ListItem>",
                "  <ListItem",
                "    title=\"Billie Jean\"",
                "    subtitle=\"Michael Jackson\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-6.jpg\" width=\"44\"/>",
                "  </ListItem>",
                "</List>",
                "          </CardContent>",
                "          <CardFooter>",
                "<span>January 20, 2015</span>",
                "<span>5 comments</span>",
                "          </CardFooter>",
                "        </Card>",
                "",
                "        <BlockTitle>Expandable Cards</BlockTitle>",
                "        <Card expandable>",
                "          <CardContent padding={false}>",
                "<div className=\"bg-color-red\" style={{height: '300px'}}>",
                "  <CardHeader textColor=\"white\" className=\"display-block\">",
                "    Framework7",
                "    <br />",
                "    <small style={{opacity: 0.7}}>Build Mobile Apps</small>",
                "  </CardHeader>",
                "  <Link cardClose color=\"white\" className=\"card-opened-fade-in\" style={{position: 'absolute', right: '15px', top: '15px'}} iconF7=\"close_round_fill\" />",
                "</div>",
                "<div className=\"card-content-padding\">",
                "  <p>Framework7 - is a free and open source HTML mobile framework to develop hybrid mobile apps or web apps with iOS or Android (Material) native look and feel...</p>",
                "</div>",
                "          </CardContent>",
                "        </Card>",
                "",
                "        <Card expandable>",
                "          <CardContent padding={false}>",
                "<div className=\"bg-color-yellow\" style={{height: '300px'}}>",
                "  <CardHeader textColor=\"black\" className=\"display-block\">",
                "    Framework7",
                "    <br/>",
                "    <small style={{opacity: 0.7}}>Build Mobile Apps</small>",
                "  </CardHeader>",
                "  <Link cardClose color=\"black\" className=\"card-opened-fade-in\" style={{position: 'absolute', right: '15px', top: '15px'}} iconF7=\"close_round_fill\" />",
                "</div>",
                "<div className=\"card-content-padding\">",
                "  <p>Framework7 - is a free and open source HTML mobile framework to develop hybrid mobile apps or web apps with iOS or Android (Material) native look and feel...</p>",
                "</div>",
                "          </CardContent>",
                "        </Card>"
            ]
        }
    ],
    "checkbox": [
        {
            "prefix": "f7:checkbox",
            "description": "",
            "body": [
                "<BlockTitle>Inline</BlockTitle>",
                "<Block strong>",
                "  <p>Lorem <Checkbox name=\"checkbox-1\"></Checkbox> ipsum dolor sit amet, consectetur adipisicing elit. Alias beatae illo nihil aut eius commodi sint eveniet aliquid eligendi <Checkbox name=\"checkbox-2\" defaultChecked></Checkbox> ad delectus impedit tempore nemo, enim vel praesentium consequatur nulla mollitia!</p>",
                "</Block>",
                "",
                "<BlockTitle>Checkbox Group</BlockTitle>",
                "<List>",
                "  <ListItem checkbox title=\"Books\" name=\"demo-checkbox\" defaultChecked></ListItem>",
                "  <ListItem checkbox title=\"Movies\" name=\"demo-checkbox\"></ListItem>",
                "  <ListItem checkbox title=\"Food\" name=\"demo-checkbox\"></ListItem>",
                "  <ListItem checkbox title=\"Drinks\" name=\"demo-checkbox\"></ListItem>",
                "</List>",
                "",
                "<BlockTitle>With Media Lists</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    checkbox",
                "    defaultChecked",
                "    name=\"demo-media-checkbox\"",
                "    title=\"Facebook\"",
                "    after=\"17:14\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    checkbox",
                "    name=\"demo-media-checkbox\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"17:11\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    checkbox",
                "    name=\"demo-media-checkbox\"",
                "    title=\"Facebook\"",
                "    after=\"16:48\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    checkbox",
                "    name=\"demo-media-checkbox\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"15:32\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>"
            ]
        }
    ],
    "chips": [
        {
            "prefix": "f7:chips",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor() {",
                "    super();",
                "    this.deleteChipBound = this.deleteChip.bind(this);",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Chips\"></Navbar>",
                "",
                "        <BlockTitle>Chips With Text</BlockTitle>",
                "        <Block strong>",
                "          <Chip text=\"Example Chip\" />",
                "          <Chip text=\"Another Chip\" />",
                "          <Chip text=\"One More Chip\" />",
                "          <Chip text=\"Fourth Chip\" />",
                "          <Chip text=\"Last One\" />",
                "        </Block>",
                "",
                "        <BlockTitle>Outline Chips</BlockTitle>",
                "        <Block strong>",
                "          <Chip outline text=\"Example Chip\" />",
                "          <Chip outline text=\"Another Chip\" />",
                "          <Chip outline text=\"One More Chip\" />",
                "          <Chip outline text=\"Fourth Chip\" />",
                "          <Chip outline text=\"Last One\" />",
                "        </Block>",
                "",
                "        <BlockTitle>Icon Chips</BlockTitle>",
                "        <Block strong>",
                "          <Chip text=\"Add Contact\" mediaBgColor=\"blue\">",
                "            <Icon slot=\"media\" ios=\"f7:add_round\" md=\"material:add_circle\"></Icon>",
                "          </Chip>",
                "          <Chip text=\"London\" mediaBgColor=\"green\">",
                "            <Icon slot=\"media\" ios=\"f7:compass\" md=\"material:location_on\"></Icon>",
                "          </Chip>",
                "          <Chip text=\"John Doe\" mediaBgColor=\"red\">",
                "            <Icon slot=\"media\" ios=\"f7:person\" md=\"material:person\"></Icon>",
                "          </Chip>",
                "        </Block>",
                "",
                "        <BlockTitle>Contact Chips</BlockTitle>",
                "        <Block strong>",
                "          <Chip text=\"Jane Doe\">",
                "            <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-100x100-9.jpg\" />",
                "          </Chip>",
                "          <Chip text=\"John Doe\">",
                "            <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-100x100-3.jpg\" />",
                "          </Chip>",
                "          <Chip text=\"Adam Smith\">",
                "            <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-100x100-7.jpg\" />",
                "          </Chip>",
                "          <Chip text=\"Jennifer\" mediaBgColor=\"pink\" media=\"J\" />",
                "          <Chip text=\"Chris\" mediaBgColor=\"yellow\" mediaTextColor=\"black\" media=\"C\" />",
                "          <Chip text=\"Kate\" mediaBgColor=\"red\" media=\"K\" />",
                "        </Block>",
                "",
                "        <BlockTitle>Deletable Chips / Tags</BlockTitle>",
                "        <Block strong>",
                "          <Chip text=\"Example Chip\" deleteable onClick={ this.deleteChipBound } />",
                "          <Chip text=\"Chris\" media=\"C\" mediaBgColor=\"orange\" textColor=\"black\" deleteable onClick={ this.deleteChipBound } />",
                "          <Chip text=\"Jane Doe\" deleteable onClick={ this.deleteChipBound }>",
                "            <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-100x100-9.jpg\"/>",
                "          </Chip>",
                "          <Chip text=\"One More Chip\" deleteable onClick={ this.deleteChipBound } />",
                "          <Chip text=\"Jennifer\" mediaBgColor=\"pink\" media=\"J\" deleteable onClick={ this.deleteChipBound } />",
                "          <Chip text=\"Adam Smith\" deleteable onClick={ this.deleteChipBound }>",
                "            <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-100x100-7.jpg\"/>",
                "          </Chip>",
                "        </Block>",
                "",
                "        <BlockTitle>Color Chips</BlockTitle>",
                "        <Block strong>",
                "          <Chip text=\"Red Chip\" color=\"red\" />",
                "          <Chip text=\"Green Chip\" color=\"green\" />",
                "          <Chip text=\"Blue Chip\" color=\"blue\" />",
                "          <Chip text=\"Orange Chip\" color=\"orange\" />",
                "          <Chip text=\"Pink Chip\" color=\"pink\" />",
                "          <Chip outline text=\"Red Chip\" color=\"red\" />",
                "          <Chip outline text=\"Green Chip\" color=\"green\" />",
                "          <Chip outline text=\"Blue Chip\" color=\"blue\" />",
                "          <Chip outline text=\"Orange Chip\" color=\"orange\" />",
                "          <Chip outline text=\"Pink Chip\" color=\"pink\" />",
                "        </Block>",
                "      </Page>",
                "    )",
                "  }",
                "  deleteChip(e) {",
                "    const $$ = this.$$;",
                "    const app = this.$f7;",
                "    const target = e.target;",
                "    app.dialog.confirm('Do you want to delete this tiny demo Chip?', () => {",
                "      $$(target).parents('.chip').remove();",
                "    });",
                "  }",
                "}"
            ]
        }
    ],
    "colors": [
        {
            "prefix": "f7:colors",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'Color Properties | Framework7 React Documentation';",
                "",
                "block content",
                "  -",
                "    var colors = {",
                "      red: '#ff3b30',",
                "      green: '#4cd964',",
                "      blue: '#2196f3',",
                "      pink: '#ff2d55',",
                "      yellow: '#ffcc00',",
                "      orange: '#ff9500',",
                "      purple: '#9c27b0',",
                "      deeppurple: '#673ab7',",
                "      lightblue: '#5ac8fa',",
                "      teal: '#009688',",
                "      lime: '#cddc39',",
                "      deeporange: '#ff6b22',",
                "      gray: '#8e8e93',",
                "      white: '#ffffff',",
                "      black: '#000000',",
                "    };",
                "  include ../_docs-demo-device",
                "",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 Color Properties",
                "    ul.docs-index",
                "    .with-device",
                "      h2(data-device-preview=\"../docs-demos/core/color-themes.html\") Color Properties",
                "      p <b>All Framework7-React components</b> supports same set of color properties that allow to set separate element colors and color themes:",
                "",
                "      table.params-table",
                "        thead",
                "          tr",
                "th Prop",
                "th Type",
                "th Default",
                "th Description",
                "        tbody",
                "          tr",
                "td color",
                "td string",
                "td",
                "td Single element color. One of the default colors.",
                "          tr",
                "td colorTheme",
                "td string",
                "td",
                "td Applies color theme to the element. It should be some parent element as this will have visual effect on all supported children elements, e.g. view, page, navbar, toolbar, list, etc. One of the default colors.",
                "          tr",
                "td textColor",
                "td string",
                "td",
                "td Sets element's text color. One of the default colors.",
                "          tr",
                "td bgColor",
                "td string",
                "td",
                "td Sets element's background color. One of the default colors.",
                "          tr",
                "td borderTheme",
                "td string",
                "td",
                "td Sets element's borders color. One of the default colors.",
                "          tr",
                "td rippleColor",
                "td string",
                "td",
                "td Sets element ripple wave color. One of the default colors.",
                "          tr",
                "td themeDark",
                "td boolean",
                "td false",
                "td Enables dark layout theme on element. It should be some parent element as this will have visual effect on all supported children elements, e.g. view, page, navbar, toolbar, list, etc.",
                "      p For example:",
                "        <!-- Button color -->",
                "        <Button color=\"red\">Red Button</Button>",
                "",
                "        <!-- Link color -->",
                "        <Link color=\"green\">Green Link</Link>",
                "",
                "        <!-- Page color theme -->",
                "        <Page colorTheme=\"orange\">",
                "          ...",
                "        </Page>",
                "",
                "        <!-- Panel with dark theme -->",
                "        <Panel themeDark>",
                "          ...",
                "        </Panel>",
                "",
                "      h2 Supported Colors",
                "      table",
                "        tbody",
                "          each color, key in colors",
                "tr",
                "  td",
                "    b=key",
                "  td",
                "    div.color-example(style=`background-color: ${color}`)",
                "    div",
                "      b=color"
            ]
        }
    ],
    "contacts-list": [
        {
            "prefix": "f7:contacts-list",
            "description": "",
            "body": [
                "export default () => (",
                "  <Page>",
                "    <Navbar title=\"Contacts List\"></Navbar>",
                "    <List contactsList>",
                "      <ListGroup>",
                "        <ListItem title=\"A\" groupTitle></ListItem>",
                "        <ListItem title=\"Aaron \"></ListItem>",
                "        <ListItem title=\"Abbie\"></ListItem>",
                "        <ListItem title=\"Adam\"></ListItem>",
                "        <ListItem title=\"Adele\"></ListItem>",
                "        <ListItem title=\"Agatha\"></ListItem>",
                "        <ListItem title=\"Agnes\"></ListItem>",
                "        <ListItem title=\"Albert\"></ListItem>",
                "        <ListItem title=\"Alexander\"></ListItem>",
                "      </ListGroup>",
                "      <ListGroup>",
                "        <ListItem title=\"B\" groupTitle></ListItem>",
                "        <ListItem title=\"Bailey\"></ListItem>",
                "        <ListItem title=\"Barclay\"></ListItem>",
                "        <ListItem title=\"Bartolo\"></ListItem>",
                "        <ListItem title=\"Bellamy\"></ListItem>",
                "        <ListItem title=\"Belle\"></ListItem>",
                "        <ListItem title=\"Benjamin\"></ListItem>",
                "      </ListGroup>",
                "      <ListGroup>",
                "        <ListItem title=\"C\" groupTitle></ListItem>",
                "        <ListItem title=\"Caiden\"></ListItem>",
                "        <ListItem title=\"Calvin\"></ListItem>",
                "        <ListItem title=\"Candy\"></ListItem>",
                "        <ListItem title=\"Carl\"></ListItem>",
                "        <ListItem title=\"Cherilyn\"></ListItem>",
                "        <ListItem title=\"Chester\"></ListItem>",
                "        <ListItem title=\"Chloe\"></ListItem>",
                "      </ListGroup>",
                "      <ListGroup>",
                "        <ListItem title=\"V\" groupTitle></ListItem>",
                "        <ListItem title=\"Vladimir\"></ListItem>",
                "      </ListGroup>",
                "    </List>",
                "  </Page>",
                ");"
            ]
        }
    ],
    "floating-action-button": [
        {
            "prefix": "f7:floating-action-button",
            "description": "",
            "body": [
                "export default () => (",
                "  <Page>",
                "    <Navbar title=\"Floating Action Button\" />",
                "",
                "    {/* Toolbar FAB Morph Target */}",
                "    <Toolbar bottom className=\"fab-morph-target\">",
                "      <Link>Link 1</Link>",
                "      <Link>Link 2</Link>",
                "      <Link>Link 3</Link>",
                "    </Toolbar>",
                "",
                "    {/* FAB Left Top (Yellow) */}",
                "    <Fab position=\"left-top\" slot=\"fixed\" color=\"yellow\">",
                "      <Icon ios=\"f7:add\" md=\"material:add\"></Icon>",
                "      <Icon ios=\"f7:close\" md=\"material:close\"></Icon>",
                "      <FabButtons position=\"bottom\">",
                "        <FabButton>1</FabButton>",
                "        <FabButton>2</FabButton>",
                "        <FabButton>3</FabButton>",
                "      </FabButtons>",
                "    </Fab>",
                "",
                "    {/* FAB Right Top (Pink) */}",
                "    <Fab position=\"right-top\" slot=\"fixed\" color=\"pink\">",
                "      <Icon ios=\"f7:add\" md=\"material:add\"></Icon>",
                "      <Icon ios=\"f7:close\" md=\"material:close\"></Icon>",
                "      <FabButtons position=\"left\">",
                "        <FabButton>1</FabButton>",
                "        <FabButton>2</FabButton>",
                "        <FabButton>3</FabButton>",
                "      </FabButtons>",
                "    </Fab>",
                "",
                "    {/* FAB Center (Green) */}",
                "    <Fab position=\"center-center\" slot=\"fixed\" color=\"green\">",
                "      <Icon ios=\"f7:add\" md=\"material:add\"></Icon>",
                "      <Icon ios=\"f7:close\" md=\"material:close\"></Icon>",
                "      <FabButtons position=\"center\">",
                "        <FabButton>1</FabButton>",
                "        <FabButton>2</FabButton>",
                "        <FabButton>3</FabButton>",
                "        <FabButton>4</FabButton>",
                "      </FabButtons>",
                "    </Fab>",
                "",
                "    {/* FAB Left Bottom (Blue) */}",
                "    {/* Will morph to Toolbar */}",
                "    <Fab position=\"left-bottom\" slot=\"fixed\" morphTo=\".toolbar.fab-morph-target\">",
                "      <Icon ios=\"f7:add\" md=\"material:add\"></Icon>",
                "      <Icon ios=\"f7:close\" md=\"material:close\"></Icon>",
                "    </Fab>",
                "",
                "    {/* FAB Right Bottom (Orange) */}",
                "    <Fab position=\"right-bottom\" slot=\"fixed\" color=\"orange\">",
                "      <Icon ios=\"f7:add\" md=\"material:add\"></Icon>",
                "      <Icon ios=\"f7:close\" md=\"material:close\"></Icon>",
                "      <FabButtons position=\"top\">",
                "        <FabButton label=\"Action 1\">1</FabButton>",
                "        <FabButton label=\"Action 2\">2</FabButton>",
                "      </FabButtons>",
                "    </Fab>",
                "",
                "    {/* Extended FAB Center Bottom (Red) */}",
                "    <Fab position=\"center-bottom\" slot=\"fixed\" text=\"Create\" color=\"red\">",
                "      <Icon ios=\"f7:add\" md=\"material:add\"></Icon>",
                "    </Fab>",
                "",
                "    <Block>",
                "      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quia, quo rem beatae, delectus eligendi est saepe molestias ... voluptatibus eligendi.</p>",
                "    </Block>",
                "  </Page>",
                ")"
            ]
        }
    ],
    "gauge": [
        {
            "prefix": "f7:gauge",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor() {",
                "    super();",
                "",
                "    this.state = {",
                "      gaugeValue: 0.5,",
                "    };",
                "  }",
                "",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Gauge\"></Navbar>",
                "        <Block strong>",
                "          <p>Framework7 comes with Gauge component. It produces nice looking fully responsive SVG gauges.</p>",
                "        </Block>",
                "        <Block strong className=\"text-align-center\">",
                "          <Gauge",
                "            type=\"circle\"",
                "            value={this.state.gaugeValue}",
                "            size={250}",
                "            borderColor=\"#2196f3\"",
                "            borderWidth={10}",
                "            valueText={`${this.state.gaugeValue * 100}%`}",
                "            valueFontSize={41}",
                "            valueTextColor=\"#2196f3\"",
                "            labelText=\"amount of something\"",
                "          />",
                "          <Segmented tag=\"p\" raised>",
                "            <Button onClick={() => this.setState({ gaugeValue: 0 })}>0%</Button>",
                "            <Button onClick={() => this.setState({ gaugeValue: 0.25 })}>25%</Button>",
                "            <Button onClick={() => this.setState({ gaugeValue: 0.5 })}>50%</Button>",
                "            <Button onClick={() => this.setState({ gaugeValue: 0.75 })}>75%</Button>",
                "            <Button onClick={() => this.setState({ gaugeValue: 1 })}>100%</Button>",
                "          </Segmented>",
                "        </Block>",
                "",
                "        <BlockTitle>Circle Gauges</BlockTitle>",
                "        <Block strong>",
                "          <Row>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"circle\"",
                "                value={0.44}",
                "                valueText=\"44%\"",
                "                valueTextColor=\"#ff9800\"",
                "                borderColor=\"#ff9800\"",
                "              />",
                "            </Col>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"circle\"",
                "                value={0.12}",
                "                valueText=\"$120\"",
                "                valueTextColor=\"#4caf50\"",
                "                borderColor=\"#4caf50\"",
                "                labelText=\"of $1000 budget\"",
                "                labelTextColor=\"#f44336\"",
                "                labelFontWeight={700}",
                "              />",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "",
                "        <BlockTitle>Semicircle Gauges</BlockTitle>",
                "        <Block strong>",
                "          <Row>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"semicircle\"",
                "                value={0.3}",
                "                valueText=\"30%\"",
                "                valueTextColor=\"#f44336\"",
                "                borderColor=\"#f44336\"",
                "              />",
                "            </Col>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"semicircle\"",
                "                value={0.5}",
                "                valueText=\"30kg\"",
                "                valueTextColor=\"#e91e63\"",
                "                borderColor=\"#e91e63\"",
                "                labelText=\"of 60kg total\"",
                "                labelTextColor=\"#333\"",
                "              />",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "",
                "        <BlockTitle>Customization</BlockTitle>",
                "        <Block strong>",
                "          <Row>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"circle\"",
                "                value={0.35}",
                "                valueText=\"35%\"",
                "                valueTextColor=\"#4caf50\"",
                "                valueFontSize={51}",
                "                valueFontWeight={700}",
                "                borderWidth={20}",
                "                borderColor=\"#4caf50\"",
                "                borderBgColor=\"#ffeb3b\"",
                "                bgColor=\"#ffeb3b\"",
                "              />",
                "            </Col>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"circle\"",
                "                value={0.67}",
                "                valueText=\"$670\"",
                "                valueTextColor=\"#000\"",
                "                borderColor=\"#ff9800\"",
                "                labelText=\"of $1000 spent\"",
                "                labelTextColor=\"#4caf50\"",
                "                labelFontWeight={800}",
                "                labelFontSize={12}",
                "                borderWidth={30}",
                "              />",
                "            </Col>",
                "          </Row>",
                "          <br />",
                "          <Row>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"semicircle\"",
                "                value={0.5}",
                "                valueText=\"50%\"",
                "                valueTextColor=\"#ffeb3b\"",
                "                valueFontSize={41}",
                "                valueFontWeight={700}",
                "                borderWidth={10}",
                "                borderColor=\"#ffeb3b\"",
                "                borderBgColor=\"transparent\"",
                "              />",
                "            </Col>",
                "            <Col className=\"text-align-center\">",
                "              <Gauge",
                "                type=\"semicircle\"",
                "                value={0.77}",
                "                borderColor=\"#ff9800\"",
                "                labelText=\"$770 spent so far\"",
                "                labelTextColor=\"#ff9800\"",
                "                labelFontWeight={800}",
                "                labelFontSize={12}",
                "                borderWidth={10}",
                "              />",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "      </Page>",
                "    )",
                "  }",
                "}"
            ]
        }
    ],
    "grid": [
        {
            "prefix": "f7:grid",
            "description": "",
            "body": [
                "<Block>",
                "  <p>Columns within a row are automatically set to have equal width. Otherwise you can define your column with pourcentage of screen you want.</p>",
                "</Block>",
                "",
                "<BlockTitle>Columns with gap</BlockTitle>",
                "<Block>",
                "  <Row>",
                "    <Col>50% (.col)</Col>",
                "    <Col>50% (.col)</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col>25% (.col)</Col>",
                "    <Col>25% (.col)</Col>",
                "    <Col>25% (.col)</Col>",
                "    <Col>25% (.col)</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col>33% (.col)</Col>",
                "    <Col>33% (.col)</Col>",
                "    <Col>33% (.col)</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col width=\"33\">33% (.col-33)</Col>",
                "    <Col width=\"66\">66% (.col-66)</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col width=\"25\">25% (.col-25)</Col>",
                "    <Col width=\"25\">25% (.col-25)</Col>",
                "    <Col width=\"50\">50% (.col-50)</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col width=\"75\">75% (.col-75)</Col>",
                "    <Col width=\"25\">25% (.col-25)</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col width=\"80\">80% (.col-80)</Col>",
                "    <Col width=\"20\">20% (.col-20)</Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>No gap between columns</BlockTitle>",
                "<Block>",
                "  <Row noGap>",
                "    <Col>50% (.col)</Col>",
                "    <Col>50% (.col)</Col>",
                "  </Row>",
                "  <Row noGap>",
                "    <Col>25% (.col)</Col>",
                "    <Col>25% (.col)</Col>",
                "    <Col>25% (.col)</Col>",
                "    <Col>25% (.col)</Col>",
                "  </Row>",
                "  <Row noGap>",
                "    <Col>33% (.col)</Col>",
                "    <Col>33% (.col)</Col>",
                "    <Col>33% (.col)</Col>",
                "  </Row>",
                "  <Row noGap>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "    <Col>20% (.col)</Col>",
                "  </Row>",
                "  <Row noGap>",
                "    <Col width=\"33\">33% (.col-33)</Col>",
                "    <Col width=\"66\">66% (.col-66)</Col>",
                "  </Row>",
                "  <Row noGap>",
                "    <Col width=\"25\">25% (.col-25)</Col>",
                "    <Col width=\"25\">25% (.col-25)</Col>",
                "    <Col width=\"50\">50% (.col-50)</Col>",
                "  </Row>",
                "  <Row noGap>",
                "    <Col width=\"75\">75% (.col-75)</Col>",
                "    <Col width=\"25\">25% (.col-25)</Col>",
                "  </Row>",
                "  <Row noGap>",
                "    <Col width=\"80\">80% (.col-80)</Col>",
                "    <Col width=\"20\">20% (.col-20)</Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Nested</BlockTitle>",
                "<Block>",
                "  <Row>",
                "    <Col>50% (.col)",
                "      <Row>",
                "        <Col>50% (.col)</Col>",
                "        <Col>50% (.col)</Col>",
                "      </Row>",
                "    </Col>",
                "    <Col>50% (.col)",
                "      <Row>",
                "        <Col width=\"33\">33% (.col-33)</Col>",
                "        <Col width=\"66\">66% (.col-66)</Col>",
                "      </Row>",
                "    </Col>",
                "  </Row>",
                "</Block>",
                "",
                "<BlockTitle>Responsive Grid</BlockTitle>",
                "<Block>",
                "  <p>Grid cells have different size on Phone/Tablet</p>",
                "  <Row>",
                "    <Col width=\"100\" tabletWidth=\"50\">.col-100.tablet-50</Col>",
                "    <Col width=\"100\" tabletWidth=\"50\">.col-100.tablet-50</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col width=\"50\" tabletWidth=\"25\">.col-50.tablet-25</Col>",
                "    <Col width=\"50\" tabletWidth=\"25\">.col-50.tablet-25</Col>",
                "    <Col width=\"50\" tabletWidth=\"25\">.col-50.tablet-25</Col>",
                "    <Col width=\"50\" tabletWidth=\"25\">.col-50.tablet-25</Col>",
                "  </Row>",
                "  <Row>",
                "    <Col width=\"100\" tabletWidth=\"40\">.col-100.tablet-40</Col>",
                "    <Col width=\"50\" tabletWidth=\"60\">.col-50.tablet-60</Col>",
                "    <Col width=\"50\" tabletWidth=\"66\">.col-50.tablet-66</Col>",
                "    <Col width=\"100\" tabletWidth=\"33\">.col-100.tablet-33</Col>",
                "  </Row>",
                "</Block>"
            ]
        }
    ],
    "icon": [
        {
            "prefix": "f7:icon",
            "description": "",
            "body": [
                "          {/*  Default back icon */}",
                "          &lt;Icon icon=\"icon-back\"&gt;&lt;/Icon&gt;",
                "",
                "          {/*  Some custom icon */}",
                "          &lt;Icon icon=\"icon-home\"&gt;&lt;/Icon&gt;",
                "",
                "          {/*  F7 Icons font icon */}",
                "          &lt;Icon f7=\"home\"&gt;&lt;/Icon&gt;",
                "",
                "          {/*  Material Icons font icon */}",
                "          &lt;Icon material=\"home\"&gt;&lt;/Icon&gt;",
                "",
                "          {/*  Font Awesome icons font icon */}",
                "          &lt;Icon fa=\"home\"&gt;&lt;/Icon&gt;",
                "",
                "          {/*  Ionicons icons font icon */}",
                "          &lt;Icon ion=\"home\"&gt;&lt;/Icon&gt;",
                "",
                "          {/*  F7 icons font icon with custom size and color */}",
                "          &lt;Icon f7=\"home\" size=\"44px\" color=\"blue\"&gt;&lt;/Icon&gt;",
                "",
                "          {/*  Conditional icon */}",
                "          &lt;Icon ios=\"f7:home\" md=\"material:home\"&gt;&lt;/Icon&gt;"
            ]
        }
    ],
    "index": [
        {
            "prefix": "f7:index",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'Framework7 React';",
                "",
                "block content",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    h1 Framework7 React",
                "    p Bring components-syntax, structured data and data bindings to Framework7 with power and simplicity of React.js",
                "      <App>",
                "",
                "        <Statusbar />",
                "",
                "        <Panel left cover themeDark>",
                "          <Navbar title=\"Left Panel\" />",
                "          <Block>Left panel content</Block>",
                "        </Panel>",
                "",
                "        <Panel right reveal>",
                "          <Navbar title=\"Right Panel\" />",
                "          <Block>Right panel content</Block>",
                "        </Panel>",
                "",
                "        <View main>",
                "          <Page>",
                "<Navbar title=\"My App\" />",
                "<Block>",
                "  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris eleifend, elit vitae scelerisque vulputate, tortor velit tempus dui, et luctus tellus justo nec velit. Duis scelerisque in tellus et pretium. Ut faucibus fringilla risus, ut dapibus nunc vehicula sit amet. Donec posuere nunc non fermentum commodo.</p>",
                "</Block>",
                "<Block>",
                "  <Segmented>",
                "    <Button panelOpen=\"left\">Left Panel</Button>",
                "    <Button panelOpen=\"right\">Right Panel</Button>",
                "  </Segmented>",
                "</Block>",
                "<List>",
                "  {",
                "    [1, 2, 3].map(n => (",
                "      <ListItem",
                "        key={n}",
                "        title={`Item ${n}`}",
                "      />",
                "    ))",
                "  }",
                "</List>",
                "          </Page>",
                "        </View>",
                "",
                "      </App>",
                "    p",
                "      a(href=\"introduction.html\").button Get Started"
            ]
        }
    ],
    "init-app": [
        {
            "prefix": "f7:init-app",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'Initialize App | Framework7 React Documentation';",
                "",
                "block content",
                "",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 Initialize App",
                "    ul.docs-index",
                "    p After we have our <a href=\"app-layout.html\">app layout</a> now we need to mount React components and initialize the app. You can read about all possible Framework7 initialization parameters in appropriate <a href=\"../docs/app.html#app-parameters\">Framework7 App Parameters</a> section.",
                "",
                "    p We have the following HTML structure in our index file:",
                "      <!-- index.html -->",
                "",
                "      <!DOCTYPE html>",
                "      <html>",
                "        <head>",
                "          <!-- ... metas and styles ... -->",
                "          <link rel=\"stylesheet\" href=\"path/to/framework7.bundle.min.css\">",
                "        </head>",
                "        <body>",
                "          <!-- App Root Element -->",
                "          <div id=\"app\"></div>",
                "          <script type=\"text/javascript\" src=\"path/to/app.js\"></script>",
                "        </body>",
                "      </html>",
                "    p In addition, if you're using Create React App, Webpack or Browserify, you might typically have a root-level app.js or index.js file that mounts your root app component:",
                "      // app.js",
                "",
                "      // Import React",
                "      import React from  'react';",
                "",
                "      // Import ReactDOM",
                "      import ReactDOM from  'react-dom';",
                "",
                "      // Import F7 Bundle",
                "      import Framework7 from 'framework7/framework7.esm.bundle.js';",
                "",
                "      // Import F7-React Plugin",
                "      import Framework7React from 'framework7-react';",
                "",
                "      // Init F7-React Plugin",
                "      Framework7.use(Framework7React);",
                "",
                "      // Import Main App component",
                "      import App from './App.jsx';",
                "",
                "      // Mount React App",
                "      ReactDOM.render(",
                "        React.createElement(App),",
                "        document.getElementById('app')",
                "      )",
                "    p Your root App.jsx component will typically have a top-level Framework7App component. This component is used to configure your app:",
                "      // App.jsx",
                "",
                "      import { App, View, Page, Navbar, Toolbar, Link } from 'framework7-react';",
                "      import routes from './routes.js';",
                "",
                "      const f7params = {",
                "        // Array with app routes",
                "        routes,",
                "        // App Name",
                "        name: 'My App',",
                "        // App id",
                "        id: 'com.myapp.test',",
                "        // ...",
                "      };",
                "",
                "      export default () => (",
                "        // Main Framework7 App component where we pass Framework7 params",
                "        <App params={f7params}>",
                "          <Statusbar />",
                "",
                "          {/* initial page is specified in routes.js */}",
                "          <View main url=\"/\" />",
                "        </App>",
                "      )",
                "",
                "    p In the examples above:",
                "    ul",
                "      li we pass <a href=\"../docs/init-app.html\">Framework7 parameters</a> to the <code>App</code> main Framework7 app component in its <code><b>params</b></code> property;",
                "      li root element passed to ReactDOM.render (<code>document.getElementById('app')</code>) will be used as Framework7 root element",
                "    p We also must specify array with routes (if we have navigation between pages in the app). Check out information about <a href=\"react-component-extensions.html\">React Component Extensions</a>, router and routes in the <a href=\"navigation-router.html\">Navigation Router</a> section."
            ]
        }
    ],
    "inputs": [
        {
            "prefix": "f7:inputs",
            "description": "",
            "body": [
                "<BlockTitle>Full Layout / Inline Labels</BlockTitle>",
                "<List inlineLabels noHairlinesMd>",
                "  <ListInput",
                "    label=\"Name\"",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Password\"",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"E-mail\"",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"URL\"",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Phone\"",
                "    type=\"tel\"",
                "    placeholder=\"Your phone number\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Gender\"",
                "    type=\"select\"",
                "    defaultValue=\"Male\"",
                "    placeholder=\"Please choose...\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "    <option value=\"Male\">Male</option>",
                "    <option value=\"Female\">Female</option>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Birthday\"",
                "    type=\"date\"",
                "    defaultValue=\"2014-04-30\"",
                "    placeholder=\"Please choose...\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Date time\"",
                "    type=\"datetime-local\"",
                "    placeholder=\"Please choose...\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Range\"",
                "    input={false}",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "    <Range slot=\"input\" value={50} min={0} max={100} step={1}/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Textarea\"",
                "    type=\"textarea\"",
                "    placeholder=\"Bio\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Resizable\"",
                "    type=\"textarea\"",
                "    resizable",
                "    placeholder=\"Bio\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "</List>",
                "",
                "<BlockTitle>Full Layout / Stacked Labels</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    label=\"Name\"",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Password\"",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"E-mail\"",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"URL\"",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Phone\"",
                "    type=\"tel\"",
                "    placeholder=\"Your phone number\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Gender\"",
                "    type=\"select\"",
                "    defaultValue=\"Male\"",
                "    placeholder=\"Please choose...\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "    <option value=\"Male\">Male</option>",
                "    <option value=\"Female\">Female</option>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Birthday\"",
                "    type=\"date\"",
                "    defaultValue=\"2014-04-30\"",
                "    placeholder=\"Please choose...\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Date time\"",
                "    type=\"datetime-local\"",
                "    placeholder=\"Please choose...\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Range\"",
                "    input={false}",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "    <Range slot=\"input\" value={50} min={0} max={100} step={1}/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Textarea\"",
                "    type=\"textarea\"",
                "    placeholder=\"Bio\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Resizable\"",
                "    type=\"textarea\"",
                "    resizable",
                "    placeholder=\"Bio\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "</List>",
                "",
                "<BlockTitle>Floating Labels</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    label=\"Name\"",
                "    floatingLabel",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Password\"",
                "    floatingLabel",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"E-mail\"",
                "    floatingLabel",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"URL\"",
                "    floatingLabel",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Phone\"",
                "    floatingLabel",
                "    type=\"tel\"",
                "    placeholder=\"Your phone number\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Resizable\"",
                "    floatingLabel",
                "    type=\"textarea\"",
                "    resizable",
                "    placeholder=\"Bio\"",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "</List>",
                "",
                "<BlockTitle>Floating Labels + Outline Inputs</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    outline",
                "    label=\"Name\"",
                "    floatingLabel",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\" />",
                "  </ListInput>",
                "  <ListInput",
                "    outline",
                "    label=\"Password\"",
                "    floatingLabel",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\" />",
                "  </ListInput>",
                "  <ListInput",
                "    outline",
                "    label=\"E-mail\"",
                "    floatingLabel",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\" />",
                "  </ListInput>",
                "  <ListInput",
                "    outline",
                "    label=\"URL\"",
                "    floatingLabel",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\" />",
                "  </ListInput>",
                "  <ListInput",
                "    outline",
                "    label=\"Phone\"",
                "    floatingLabel",
                "    type=\"tel\"",
                "    placeholder=\"Your phone number\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\" />",
                "  </ListInput>",
                "  <ListInput",
                "    outline",
                "    label=\"Bio\"",
                "    floatingLabel",
                "    type=\"textarea\"",
                "    resizable",
                "    placeholder=\"Bio\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\" />",
                "  </ListInput>",
                "</List>",
                "",
                "<BlockTitle>Validation + Additional Info</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    label=\"Name\"",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    info=\"Default validation\"",
                "    required",
                "    validate",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Fruit\"",
                "    type=\"text\"",
                "    placeholder=\"Type 'apple' or 'banana'\"",
                "    required",
                "    validate",
                "    pattern=\"apple|banana\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "    <span slot=\"info\">Pattern validation (<b>apple|banana</b>)</span>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"E-mail\"",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    info=\"Default e-mail validation\"",
                "    required",
                "    validate",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"URL\"",
                "    type=\"url\"",
                "    placeholder=\"Your URL\"",
                "    info=\"Default URL validation\"",
                "    required",
                "    validate",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    label=\"Number\"",
                "    type=\"text\"",
                "    placeholder=\"Enter number\"",
                "    info=\"With custom error message\"",
                "    errorMessage=\"Only numbers please!\"",
                "    required",
                "    validate",
                "    pattern=\"[0-9]*\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "</List>",
                "",
                "<BlockTitle>Icon + Input</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "  <ListInput",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  >",
                "    <Icon icon=\"demo-list-icon\" slot=\"media\"/>",
                "  </ListInput>",
                "",
                "</List>",
                "",
                "<BlockTitle>Label + Input</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    label=\"Name\"",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    label=\"Password\"",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    label=\"E-mail\"",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    label=\"URL\"",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  />",
                "</List>",
                "",
                "<BlockTitle>Only Inputs</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  />",
                "</List>",
                "",
                "<BlockTitle>Inputs + Additional Info</BlockTitle>",
                "<List noHairlinesMd>",
                "  <ListInput",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    info=\"Full name please\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    info=\"8 characters minimum\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    info=\"Your work e-mail address\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    info=\"Your website URL\"",
                "    clearButton",
                "  />",
                "</List>",
                "",
                "<BlockTitle>Only Inputs Inset</BlockTitle>",
                "<List inset>",
                "  <ListInput",
                "    type=\"text\"",
                "    placeholder=\"Your name\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"password\"",
                "    placeholder=\"Your password\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"email\"",
                "    placeholder=\"Your e-mail\"",
                "    clearButton",
                "  />",
                "",
                "  <ListInput",
                "    type=\"url\"",
                "    placeholder=\"URL\"",
                "    clearButton",
                "  />",
                "</List>"
            ]
        }
    ],
    "installation": [
        {
            "prefix": "f7:installation",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'Installation | Framework7 React Documentation';",
                "",
                "block content",
                "",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 Installation",
                "    ul.docs-index",
                "",
                "    h2 Framework7 CLI",
                "    p The most recommended way to start with new Framework7 app is to use <a href=\"/cli/\">Framework7 CLI</a>, it provides most complete amount of combinations with different templates, target devices/platforms, frameworks and some of best practices.",
                "",
                "    h2 Ready To Use Templates",
                "    p You can also check the #[a(href=\"/templates/\") starter app templates and tools] section to strat straight away from some pre-setup app.",
                "",
                "    h2 Manual Installation"
            ]
        },
        {
            "prefix": "f7:installation",
            "description": "1. Install Framework7",
            "body": [
                "    p First of all we need to <a href=\"../docs/installation.html\">install Framework7</a> library itself."
            ]
        },
        {
            "prefix": "f7:installation",
            "description": "2. Install React",
            "body": [
                "    p Read about how to install React on the official <a href=\"https://reactjs.org/docs/getting-started.html\" target=\"_blank\">React Installation Guide</a>."
            ]
        },
        {
            "prefix": "f7:installation",
            "description": "3. Install Framework7-React Plugin",
            "body": [
                "    p Now we need the Framework7-React plugin for React, we can do it with two ways:",
                "    ul",
                "      li",
                "        p",
                "          b Download From GitHub Repository",
                "        p We can download required Framework7-React files from <a href=\"https://github.com/framework7io/framework7/releases\">Framework7 GitHub repository</a>.",
                "      li",
                "        p",
                "          b Install From NPM",
                "        p We can also install Framework7-React from NPM:",
                "          $ npm install framework7-react"
            ]
        }
    ],
    "introduction": [
        {
            "prefix": "f7:introduction",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'Introduction | Framework7 React Documentation';",
                "",
                "block content",
                "",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 Introduction to Framework7 React",
                "    .important-note",
                "      p It is highly recommended for you to be familiar with basics of both Framework7 and React.js before getting started.",
                "    p Framework7 React combines power and simplicity of great <a href=\"https://reactjs.org/\">React.js</a> framework with flexibility and UI of Framework7 mobile framework to build mobile apps in even more easy and quick way.",
                "    p Framework7 React helps to keep data and content in more structured way and use data-bindings and simplify layout difference for iOS and Material themes (or handle this difference easier).",
                "    p Framework7 React plugin provides a set of almost all Framework7 elements and components with integration of Framework7 Router to render pages in the \"React-way\".",
                "    .important-note",
                "      p This documentation provides reference for Framework7 React components (their usage examples and properties). For their appearance and how do they work it is recommended to check <a href=\"../docs/\">Framework7 Core Documentation</a>."
            ]
        }
    ],
    "kitchen-sink": [
        {
            "prefix": "f7:kitchen-sink",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'Framework7-React Kitchen Sink | Framework7 React Documentation';",
                "",
                "block content",
                "  include ../_docs-demo-device",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 Kitchen Sink",
                "    ul.docs-index",
                "    .with-device(data-device-preview=\"../kitchen-sink/react/index.html?theme=ios\")",
                "      p Framework7-React Kitchen Sink is a great place to get started, it has a lot of examples for all Framework7-React components and covers most of aspects.",
                "      p It is recommended to use it as a reference during development.",
                "      h2 Source Code",
                "      p React Kitchen Sink source code is located at <a href=\"https://github.com/framework7io/framework7/tree/master/kitchen-sink/react\" target=\"_blank\">GitHub repository</a>",
                "      h2 Running Locally",
                "      p To run Framework7-React Kitchen Sink locally we need:",
                "      ol",
                "        li",
                "          p Download and unzip <a href=\"https://github.com/framework7io/framework7/\" target=\"_blank\">Framework7 GitHub repository</a> to a local folder",
                "        li",
                "          p Install <a href=\"http://nodejs.org/\" target=\"_blank\">Node.js</a> (if not installed)",
                "        li",
                "          p Install Gulp (if not installed) by executing the following command in terminal:",
                "$ npm install --global gulp",
                "        li",
                "          p Now, we need to install required dependencies. Go to the folder with downloaded and unzipped Framework7 repository and execute in terminal:",
                "$ npm install",
                "        li",
                "          p We are ready to launch Framework7-React Kitchen Sink, just execute in terminal:",
                "$ npm run react:prod",
                "          p That command will launch Kitchen Sink with production (released) version of Framework7. To use latest development version in Kitchen Sink, use the following command instead:",
                "$ npm run react:dev"
            ]
        }
    ],
    "link": [
        {
            "prefix": "f7:link",
            "description": "Navigation Link",
            "body": [
                "          <Link href=\"/about/\">About</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "Back Navigation Link",
            "body": [
                "          <Link back>Back</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "With Router Parameters",
            "body": [
                "          <Link href=\"/about/\" animate={false} ignoreCache={true}>About</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "External Link",
            "body": [
                "          <Link href=\"http://google.com\" external>Google</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "Tab Link",
            "body": [
                "          {/* Tabs  */}",
                "          <Tabs>",
                "<Tab id=\"tab-1\" tabActive>Tab 1</Tab>",
                "<Tab id=\"tab-1\">Tab 2</Tab>",
                "          </Tabs>",
                "          {/* Switch Between Tabs  */}",
                "          <Link tabLink=\"#tab-1\" tabLinkActive>Show Tab 1</Link>",
                "          <Link tabLink=\"#tab-2\">Show Tab 2</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "Routable Tabs",
            "body": [
                "          {/* Tabs  */}",
                "          <Tabs>",
                "<Tab id=\"tab-1\"></Tab>",
                "<Tab id=\"tab-2\"></Tab>",
                "          </Tabs>",
                "          {/* Switch Between Tabs  */}",
                "          <Link tabLink routeTabId=\"tab-1\" href=\"/tabs/\">Show Tab 1</Link>",
                "          <Link tabLink routeTabId=\"tab-2\" href=\"/tabs/tab-2/\">Show Tab 2</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "Open And Close Panel",
            "body": [
                "          <Link panelOpen=\"left\">Open Left Panel</Link>",
                "          <Link panelClose>Close Panel</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "Open and Close Popup",
            "body": [
                "          <Link popupOpen=\"#my-popup\">Open Popup</Link>",
                "          <Link popupClose=\"#my-popup\">Close Popup</Link>"
            ]
        },
        {
            "prefix": "f7:link",
            "description": "With Icon & Color",
            "body": [
                "          <Link iconF7=\"home\" text=\"Home\" color=\"red\"></Link>"
            ]
        }
    ],
    "list-button": [
        {
            "prefix": "f7:list-button",
            "description": "",
            "body": [
                "<List>",
                "  <ListButton title=\"List Button 1\" />",
                "  <ListButton title=\"List Button 2\" />",
                "  <ListButton title=\"List Button 3\" />",
                "</List>",
                "",
                "<List inset>",
                "  <ListButton title=\"List Button 1\" />",
                "  <ListButton title=\"List Button 2\" />",
                "  <ListButton title=\"List Button 3\" />",
                "</List>",
                "",
                "<List inset>",
                "  <ListButton title=\"Red List Button\" color=\"red\" />",
                "  <ListButton title=\"Green List Button\" color=\"green\" />",
                "  <ListButton title=\"Orange List Button\" color=\"orange\" />",
                "</List>",
                "      .device-spacer"
            ]
        }
    ],
    "list-index": [
        {
            "prefix": "f7:list-index",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"List Index\"></Navbar>",
                "        <ListIndex",
                "          indexes=\"auto\"",
                "          listEl=\".list.contacts-list\"",
                "          scrollList={true}",
                "          label={true}",
                "          onListIndexSelect={this.onIndexSelect.bind(this)}",
                "        ></ListIndex>",
                "        <List contactsList>",
                "          <ListGroup>",
                "            <ListItem title=\"A\" groupTitle></ListItem>",
                "            <ListItem title=\"Aaron\"></ListItem>",
                "            <ListItem title=\"Adam\"></ListItem>",
                "            <ListItem title=\"Aiden\"></ListItem>",
                "            <ListItem title=\"Albert\"></ListItem>",
                "            <ListItem title=\"Alex\"></ListItem>",
                "            <ListItem title=\"Alexander\"></ListItem>",
                "            <ListItem title=\"Alfie\"></ListItem>",
                "            <ListItem title=\"Archie\"></ListItem>",
                "            <ListItem title=\"Arthur\"></ListItem>",
                "            <ListItem title=\"Austin\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"B\" groupTitle></ListItem>",
                "            <ListItem title=\"Benjamin\"></ListItem>",
                "            <ListItem title=\"Blake\"></ListItem>",
                "            <ListItem title=\"Bobby\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"C\" groupTitle></ListItem>",
                "            <ListItem title=\"Caleb\"></ListItem>",
                "            <ListItem title=\"Callum\"></ListItem>",
                "            <ListItem title=\"Cameron\"></ListItem>",
                "            <ListItem title=\"Charles\"></ListItem>",
                "            <ListItem title=\"Charlie\"></ListItem>",
                "            <ListItem title=\"Connor\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"D\" groupTitle></ListItem>",
                "            <ListItem title=\"Daniel\"></ListItem>",
                "            <ListItem title=\"David\"></ListItem>",
                "            <ListItem title=\"Dexter\"></ListItem>",
                "            <ListItem title=\"Dylan\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"E\" groupTitle></ListItem>",
                "            <ListItem title=\"Edward\"></ListItem>",
                "            <ListItem title=\"Elijah\"></ListItem>",
                "            <ListItem title=\"Elliot\"></ListItem>",
                "            <ListItem title=\"Elliott\"></ListItem>",
                "            <ListItem title=\"Ethan\"></ListItem>",
                "            <ListItem title=\"Evan\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"F\" groupTitle></ListItem>",
                "            <ListItem title=\"Felix\"></ListItem>",
                "            <ListItem title=\"Finlay\"></ListItem>",
                "            <ListItem title=\"Finley\"></ListItem>",
                "            <ListItem title=\"Frankie\"></ListItem>",
                "            <ListItem title=\"Freddie\"></ListItem>",
                "            <ListItem title=\"Frederick\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"G\" groupTitle></ListItem>",
                "            <ListItem title=\"Gabriel\"></ListItem>",
                "            <ListItem title=\"George\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"H\" groupTitle></ListItem>",
                "            <ListItem title=\"Harley\"></ListItem>",
                "            <ListItem title=\"Harrison\"></ListItem>",
                "            <ListItem title=\"Harry\"></ListItem>",
                "            <ListItem title=\"Harvey\"></ListItem>",
                "            <ListItem title=\"Henry\"></ListItem>",
                "            <ListItem title=\"Hugo\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"I\" groupTitle></ListItem>",
                "            <ListItem title=\"Ibrahim\"></ListItem>",
                "            <ListItem title=\"Isaac\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"J\" groupTitle></ListItem>",
                "            <ListItem title=\"Jack\"></ListItem>",
                "            <ListItem title=\"Jacob\"></ListItem>",
                "            <ListItem title=\"Jake\"></ListItem>",
                "            <ListItem title=\"James\"></ListItem>",
                "            <ListItem title=\"Jamie\"></ListItem>",
                "            <ListItem title=\"Jayden\"></ListItem>",
                "            <ListItem title=\"Jenson\"></ListItem>",
                "            <ListItem title=\"Joseph\"></ListItem>",
                "            <ListItem title=\"Joshua\"></ListItem>",
                "            <ListItem title=\"Jude\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"K\" groupTitle></ListItem>",
                "            <ListItem title=\"Kai\"></ListItem>",
                "            <ListItem title=\"Kian\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"L\" groupTitle></ListItem>",
                "            <ListItem title=\"Leo\"></ListItem>",
                "            <ListItem title=\"Leon\"></ListItem>",
                "            <ListItem title=\"Lewis\"></ListItem>",
                "            <ListItem title=\"Liam\"></ListItem>",
                "            <ListItem title=\"Logan\"></ListItem>",
                "            <ListItem title=\"Louie\"></ListItem>",
                "            <ListItem title=\"Louis\"></ListItem>",
                "            <ListItem title=\"Luca\"></ListItem>",
                "            <ListItem title=\"Lucas\"></ListItem>",
                "            <ListItem title=\"Luke\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"M\" groupTitle></ListItem>",
                "            <ListItem title=\"Mason\"></ListItem>",
                "            <ListItem title=\"Matthew\"></ListItem>",
                "            <ListItem title=\"Max\"></ListItem>",
                "            <ListItem title=\"Michael\"></ListItem>",
                "            <ListItem title=\"Mohammad\"></ListItem>",
                "            <ListItem title=\"Mohammed\"></ListItem>",
                "            <ListItem title=\"Muhammad\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"N\" groupTitle></ListItem>",
                "            <ListItem title=\"Nathan\"></ListItem>",
                "            <ListItem title=\"Noah\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"O\" groupTitle></ListItem>",
                "            <ListItem title=\"Oliver\"></ListItem>",
                "            <ListItem title=\"Ollie\"></ListItem>",
                "            <ListItem title=\"Oscar\"></ListItem>",
                "            <ListItem title=\"Owen\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"R\" groupTitle></ListItem>",
                "            <ListItem title=\"Reuben\"></ListItem>",
                "            <ListItem title=\"Riley\"></ListItem>",
                "            <ListItem title=\"Robert\"></ListItem>",
                "            <ListItem title=\"Ronnie\"></ListItem>",
                "            <ListItem title=\"Rory\"></ListItem>",
                "            <ListItem title=\"Ryan\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"S\" groupTitle></ListItem>",
                "            <ListItem title=\"Samuel\"></ListItem>",
                "            <ListItem title=\"Sebastian\"></ListItem>",
                "            <ListItem title=\"Seth\"></ListItem>",
                "            <ListItem title=\"Sonny\"></ListItem>",
                "            <ListItem title=\"Stanley\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"T\" groupTitle></ListItem>",
                "            <ListItem title=\"Teddy\"></ListItem>",
                "            <ListItem title=\"Theo\"></ListItem>",
                "            <ListItem title=\"Theodore\"></ListItem>",
                "            <ListItem title=\"Thomas\"></ListItem>",
                "            <ListItem title=\"Toby\"></ListItem>",
                "            <ListItem title=\"Tommy\"></ListItem>",
                "            <ListItem title=\"Tyler\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"W\" groupTitle></ListItem>",
                "            <ListItem title=\"William\"></ListItem>",
                "          </ListGroup>",
                "          <ListGroup>",
                "            <ListItem title=\"Z\" groupTitle></ListItem>",
                "            <ListItem title=\"Zachary\"></ListItem>",
                "          </ListGroup>",
                "        </List>",
                "      </Page>",
                "    )",
                "  }",
                "  onIndexSelect(itemContent) {",
                "    console.log(itemContent);",
                "  }",
                "}"
            ]
        }
    ],
    "list-item": [
        {
            "prefix": "f7:list-item",
            "description": "Simple List",
            "body": [
                "<BlockTitle>Simple List</BlockTitle>",
                "<List simple-list>",
                "  <ListItem title=\"Item 1\"></ListItem>",
                "  <ListItem title=\"Item 2\"></ListItem>",
                "  <ListItem title=\"Item 3\"></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Simple List Links",
            "body": [
                "<BlockTitle>Simple Links List</BlockTitle>",
                "<List>",
                "  <ListItem title=\"Link 1\" link=\"#\"></ListItem>",
                "  <ListItem title=\"Link 2\" link=\"#\"></ListItem>",
                "  <ListItem title=\"Link 3\" link=\"#\"></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Data list, with icons",
            "body": [
                "<BlockTitle>Data list, with icons</BlockTitle>",
                "<List>",
                "  <ListItem title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"John Doe\" badge=\"5\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"Jenna Smith\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Links",
            "body": [
                "<BlockTitle>Links</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"John Doe\" after=\"Cleaner\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Jenna Smith\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Links, Header, Footer",
            "body": [
                "<BlockTitle>Links, Header, Footer</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" header=\"Name\" title=\"John Doe\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" header=\"Phone\" title=\"+7 90 111-22-3344\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" header=\"Email\" title=\"john@doe\" footer=\"Home\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" header=\"Email\" title=\"john@framework7\" footer=\"Work\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Links, no icons",
            "body": [
                "<BlockTitle>Links, no icons</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\"></ListItem>",
                "  <ListItem link=\"#\" title=\"John Doe\"></ListItem>",
                "  <ListItem divider title=\"Divider Here\"></ListItem>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\"></ListItem>",
                "  <ListItem link=\"#\" title=\"Jenna Smith\"></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Grouped with sticky titles",
            "body": [
                "<BlockTitle>Grouped with sticky titles</BlockTitle>",
                "<List>",
                "  <ListGroup>",
                "    <ListItem title=\"A\" groupTitle></ListItem>",
                "    <ListItem title=\"Aaron \"></ListItem>",
                "    <ListItem title=\"Abbie\"></ListItem>",
                "    <ListItem title=\"Adam\"></ListItem>",
                "  </ListGroup>",
                "  <ListGroup>",
                "    <ListItem title=\"B\" groupTitle></ListItem>",
                "    <ListItem title=\"Bailey\"></ListItem>",
                "    <ListItem title=\"Barclay\"></ListItem>",
                "    <ListItem title=\"Bartolo\"></ListItem>",
                "  </ListGroup>",
                "  <ListGroup>",
                "    <ListItem title=\"C\" groupTitle></ListItem>",
                "    <ListItem title=\"Caiden\"></ListItem>",
                "    <ListItem title=\"Calvin\"></ListItem>",
                "    <ListItem title=\"Candy\"></ListItem>",
                "  </ListGroup>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Mixed and nested",
            "body": [
                "<BlockTitle>Mixed and nested</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Two icons here\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"No icons here\"></ListItem>",
                "  <li>",
                "    <ul>",
                "      <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "      </ListItem>",
                "      <ListItem link=\"#\" title=\"Two icons here\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "      </ListItem>",
                "      <ListItem title=\"No icons here\"></ListItem>",
                "      <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "      </ListItem>",
                "      <ListItem title=\"With toggle\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "        <Toggle slot=\"after\"></Toggle>",
                "      </ListItem>",
                "    </ul>",
                "  </li>",
                "  <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"With toggle\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Toggle slot=\"after\"></Toggle>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Mixed, inset",
            "body": [
                "<BlockTitle>Mixed, inset</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Two icons here\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"With toggle\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Toggle slot=\"after\"></Toggle>",
                "  </ListItem>",
                "  <BlockFooter>",
                "    <p>Here comes some useful information about list above</p>",
                "  </BlockFooter>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Tablet inset",
            "body": [
                "<BlockTitle>Tablet inset</BlockTitle>",
                "<List tabletInset>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Two icons here\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <BlockFooter>",
                "    <p>This list block will look like \"inset\" only on tablets (iPad)</p>",
                "  </BlockFooter>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Media Lists",
            "body": [
                "<BlockTitle>Media Lists</BlockTitle>",
                "<Block>",
                "  <p>Media Lists are almost the same as Data Lists, but with a more flexible layout for visualization of more complex data, like products, services, userc, etc.</p>",
                "</Block>",
                "<BlockTitle>Songs</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Yellow Submarine\"",
                "    after=\"$15\"",
                "    subtitle=\"Beatles\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-1.jpg\" width=\"80\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Don't Stop Me Now\"",
                "    after=\"$22\"",
                "    subtitle=\"Queen\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-2.jpg\" width=\"80\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Billie Jean\"",
                "    after=\"$16\"",
                "    subtitle=\"Michael Jackson\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-3.jpg\" width=\"80\" />",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Mail App",
            "body": [
                "<BlockTitle>Mail App</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Facebook\"",
                "    after=\"17:14\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"17:11\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Facebook\"",
                "    after=\"16:48\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"15:32\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Something more simple",
            "body": [
                "<BlockTitle>Something more simple</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    title=\"Yellow Submarine\"",
                "    subtitle=\"Beatles\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-1.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Don't Stop Me Now\"",
                "    subtitle=\"Queen\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-2.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    title=\"Billie Jean\"",
                "    subtitle=\"Michael Jackson\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-3.jpg\" width=\"44\" />",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-item",
            "description": "Inset",
            "body": [
                "<BlockTitle>Inset</BlockTitle>",
                "<List mediaList inset>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Yellow Submarine\"",
                "    subtitle=\"Beatles\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-4.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Don't Stop Me Now\"",
                "    subtitle=\"Queen\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-5.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Billie Jean\"",
                "    subtitle=\"Michael Jackson\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-6.jpg\" width=\"44\" />",
                "  </ListItem>",
                "</List>"
            ]
        }
    ],
    "list-view": [
        {
            "prefix": "f7:list-view",
            "description": "Simple List",
            "body": [
                "<BlockTitle>Simple List</BlockTitle>",
                "<List simple-list>",
                "  <ListItem title=\"Item 1\"></ListItem>",
                "  <ListItem title=\"Item 2\"></ListItem>",
                "  <ListItem title=\"Item 3\"></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Simple List Links",
            "body": [
                "<BlockTitle>Simple Links List</BlockTitle>",
                "<List>",
                "  <ListItem title=\"Link 1\" link=\"#\"></ListItem>",
                "  <ListItem title=\"Link 2\" link=\"#\"></ListItem>",
                "  <ListItem title=\"Link 3\" link=\"#\"></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Data list, with icons",
            "body": [
                "<BlockTitle>Data list, with icons</BlockTitle>",
                "<List>",
                "  <ListItem title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"John Doe\" badge=\"5\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"Jenna Smith\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Links",
            "body": [
                "<BlockTitle>Links</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"John Doe\" after=\"Cleaner\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Jenna Smith\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Links, Header, Footer",
            "body": [
                "<BlockTitle>Links, Header, Footer</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" header=\"Name\" title=\"John Doe\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" header=\"Phone\" title=\"+7 90 111-22-3344\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" header=\"Email\" title=\"john@doe\" footer=\"Home\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" header=\"Email\" title=\"john@framework7\" footer=\"Work\" after=\"Edit\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Links, no icons",
            "body": [
                "<BlockTitle>Links, no icons</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\"></ListItem>",
                "  <ListItem link=\"#\" title=\"John Doe\"></ListItem>",
                "  <ListItem divider title=\"Divider Here\"></ListItem>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\"></ListItem>",
                "  <ListItem link=\"#\" title=\"Jenna Smith\"></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Grouped with sticky titles",
            "body": [
                "<BlockTitle>Grouped with sticky titles</BlockTitle>",
                "<List>",
                "  <ListGroup>",
                "    <ListItem title=\"A\" groupTitle></ListItem>",
                "    <ListItem title=\"Aaron \"></ListItem>",
                "    <ListItem title=\"Abbie\"></ListItem>",
                "    <ListItem title=\"Adam\"></ListItem>",
                "  </ListGroup>",
                "  <ListGroup>",
                "    <ListItem title=\"B\" groupTitle></ListItem>",
                "    <ListItem title=\"Bailey\"></ListItem>",
                "    <ListItem title=\"Barclay\"></ListItem>",
                "    <ListItem title=\"Bartolo\"></ListItem>",
                "  </ListGroup>",
                "  <ListGroup>",
                "    <ListItem title=\"C\" groupTitle></ListItem>",
                "    <ListItem title=\"Caiden\"></ListItem>",
                "    <ListItem title=\"Calvin\"></ListItem>",
                "    <ListItem title=\"Candy\"></ListItem>",
                "  </ListGroup>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Mixed and nested",
            "body": [
                "<BlockTitle>Mixed and nested</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Two icons here\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"No icons here\"></ListItem>",
                "  <li>",
                "    <ul>",
                "      <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "      </ListItem>",
                "      <ListItem link=\"#\" title=\"Two icons here\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "      </ListItem>",
                "      <ListItem title=\"No icons here\"></ListItem>",
                "      <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "      </ListItem>",
                "      <ListItem title=\"With toggle\">",
                "        <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "        <Toggle slot=\"after\"></Toggle>",
                "      </ListItem>",
                "    </ul>",
                "  </li>",
                "  <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"With toggle\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Toggle slot=\"after\"></Toggle>",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Mixed, inset",
            "body": [
                "<BlockTitle>Mixed, inset</BlockTitle>",
                "<List>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Two icons here\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem title=\"With toggle\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Toggle slot=\"after\"></Toggle>",
                "  </ListItem>",
                "  <BlockFooter>",
                "    <p>Here comes some useful information about list above</p>",
                "  </BlockFooter>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Tablet inset",
            "body": [
                "<BlockTitle>Tablet inset</BlockTitle>",
                "<List tabletInset>",
                "  <ListItem link=\"#\" title=\"Ivan Petrov\" after=\"CEO\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Two icons here\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <ListItem link=\"#\" title=\"Ultra long text goes here, no, it is really really long\">",
                "    <Icon slot=\"media\" icon=\"demo-list-icon\"></Icon>",
                "  </ListItem>",
                "  <BlockFooter>",
                "    <p>This list block will look like \"inset\" only on tablets (iPad)</p>",
                "  </BlockFooter>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Media Lists",
            "body": [
                "<BlockTitle>Media Lists</BlockTitle>",
                "<Block>",
                "  <p>Media Lists are almost the same as Data Lists, but with a more flexible layout for visualization of more complex data, like products, services, userc, etc.</p>",
                "</Block>",
                "<BlockTitle>Songs</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Yellow Submarine\"",
                "    after=\"$15\"",
                "    subtitle=\"Beatles\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-1.jpg\" width=\"80\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Don't Stop Me Now\"",
                "    after=\"$22\"",
                "    subtitle=\"Queen\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-2.jpg\" width=\"80\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Billie Jean\"",
                "    after=\"$16\"",
                "    subtitle=\"Michael Jackson\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  >",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-3.jpg\" width=\"80\" />",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Mail App",
            "body": [
                "<BlockTitle>Mail App</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Facebook\"",
                "    after=\"17:14\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"17:11\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Facebook\"",
                "    after=\"16:48\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"15:32\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Something more simple",
            "body": [
                "<BlockTitle>Something more simple</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    title=\"Yellow Submarine\"",
                "    subtitle=\"Beatles\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-1.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Don't Stop Me Now\"",
                "    subtitle=\"Queen\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-2.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    title=\"Billie Jean\"",
                "    subtitle=\"Michael Jackson\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-3.jpg\" width=\"44\" />",
                "  </ListItem>",
                "</List>"
            ]
        },
        {
            "prefix": "f7:list-view",
            "description": "Inset",
            "body": [
                "<BlockTitle>Inset</BlockTitle>",
                "<List mediaList inset>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Yellow Submarine\"",
                "    subtitle=\"Beatles\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-4.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Don't Stop Me Now\"",
                "    subtitle=\"Queen\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-5.jpg\" width=\"44\" />",
                "  </ListItem>",
                "  <ListItem",
                "    link=\"#\"",
                "    title=\"Billie Jean\"",
                "    subtitle=\"Michael Jackson\">",
                "    <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/fashion-88x88-6.jpg\" width=\"44\" />",
                "  </ListItem>",
                "</List>"
            ]
        }
    ],
    "login-screen": [
        {
            "prefix": "f7:login-screen",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      loginScreenOpened: false,",
                "      username: '',",
                "      password: '',",
                "    };",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Login Screen\"></Navbar>",
                "        <Block>",
                "          <p>Framework7 comes with ready to use Login Screen layout. It could be used inside of page or inside of popup (Embedded) or as a standalone overlay:</p>",
                "        </Block>",
                "",
                "        <List>",
                "          <ListItem link=\"/login-screen-page/\" title=\"As Separate Page\"></ListItem>",
                "        </List>",
                "",
                "        <Block>",
                "          <Button raised large fill loginScreenOpen=\".demo-login-screen\">As Overlay</Button>",
                "        </Block>",
                "",
                "        <Block>",
                "          <Button raised large fill onClick={() => {this.setState({loginScreenOpened : true})}}>Open Via Prop Change</Button>",
                "        </Block>",
                "",
                "        <LoginScreen className=\"demo-login-screen\" opened={this.state.loginScreenOpened} onLoginScreenClosed={() => {this.setState({loginScreenOpened : false})}}>",
                "          <Page loginScreen>",
                "            <LoginScreenTitle>Framework7</LoginScreenTitle>",
                "            <List form>",
                "              <ListInput",
                "                label=\"Username\"",
                "                type=\"text\"",
                "                placeholder=\"Your username\"",
                "                value={this.state.username}",
                "                onInput={(e) => {",
                "                  this.setState({ username: e.target.value});",
                "                }}",
                "              />",
                "              <ListInput",
                "                label=\"Password\"",
                "                type=\"password\"",
                "                placeholder=\"Your password\"",
                "                value={this.state.password}",
                "                onInput={(e) => {",
                "                  this.setState({ password: e.target.value});",
                "                }}",
                "              />",
                "            </List>",
                "            <List>",
                "              <ListButton onClick={this.signIn.bind(this)}>Sign In</ListButton>",
                "              <BlockFooter>Some text about login information.<br />Lorem ipsum dolor sit amet, consectetur adipiscing elit.</BlockFooter>",
                "            </List>",
                "          </Page>",
                "        </LoginScreen>",
                "      </Page>",
                "    )",
                "  }",
                "  signIn() {",
                "    const self = this;",
                "    const app = self.$f7;",
                "",
                "    app.dialog.alert(`Username: ${self.state.username}<br>Password: ${self.state.password}`, () => {",
                "      app.loginScreen.close();",
                "    });",
                "  }",
                "};"
            ]
        },
        {
            "prefix": "f7:login-screen",
            "description": "Separate Login Screen Page",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      username: '',",
                "      password: '',",
                "    };",
                "  }",
                "",
                "  render() {",
                "    return (",
                "      <Page noToolbar noNavbar noSwipeback loginScreen>",
                "        <LoginScreenTitle>Framework7</LoginScreenTitle>",
                "        <List form>",
                "          <ListInput",
                "            label=\"Username\"",
                "            type=\"text\"",
                "            placeholder=\"Your username\"",
                "            value={this.state.username}",
                "            onInput={(e) => {",
                "              this.setState({ username: e.target.value});",
                "            }}",
                "          />",
                "          <ListInput",
                "            label=\"Password\"",
                "            type=\"password\"",
                "            placeholder=\"Your password\"",
                "            value={this.state.password}",
                "            onInput={(e) => {",
                "              this.setState({ password: e.target.value});",
                "            }}",
                "          />",
                "        </List>",
                "        <List>",
                "          <ListButton onClick={this.signIn.bind(this)}>Sign In</ListButton>",
                "          <BlockFooter>Some text about login information.<br />Lorem ipsum dolor sit amet, consectetur adipiscing elit.</BlockFooter>",
                "        </List>",
                "      </Page>",
                "    )",
                "  }",
                "  signIn() {",
                "    const self = this;",
                "    const app = self.$f7;",
                "    const router = self.$f7router;",
                "    app.dialog.alert(`Username: ${self.state.username}<br>Password: ${self.state.password}`, () => {",
                "      router.back();",
                "    });",
                "  }",
                "}"
            ]
        }
    ],
    "menu": [
        {
            "prefix": "f7:menu",
            "description": "Plain Links",
            "body": [
                "        <Menu>",
                "          <MenuItem href=\"#\" text=\"Item 1\" />",
                "          <MenuItem href=\"#\" text=\"Item 2\" />",
                "          <MenuItem href=\"#\" iconF7=\"edit\" />",
                "          <MenuItem href=\"#\" iconF7=\"share\" />",
                "        </Menu>"
            ]
        },
        {
            "prefix": "f7:menu",
            "description": "Dropdowns",
            "body": [
                "        <Menu>",
                "          <MenuItem text=\"Left\" dropdown>",
                "<MenuDropdown left>",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 1\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 2\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 3\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 4\" />",
                "  <MenuDropdownItem divider />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 5\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 6\" />",
                "</MenuDropdown>",
                "          </MenuItem>",
                "",
                "          <MenuItem text=\"Center\" dropdown>",
                "<MenuDropdown center contentHeight=\"200px\">",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 1\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 2\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 3\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 4\" />",
                "  <MenuDropdownItem divider />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 5\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 6\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 7\" />",
                "  <MenuDropdownItem divider />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 8\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 9\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 10\" />",
                "</MenuDropdown>",
                "          </MenuItem>",
                "",
                "          <MenuItem text=\"Right\" dropdown>",
                "<MenuDropdown right>",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 1\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 2\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 3\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 4\" />",
                "  <MenuDropdownItem divider />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 5\" />",
                "  <MenuDropdownItem href=\"#\" text=\"Menu Item 6\" />",
                "</MenuDropdown>",
                "          </MenuItem>",
                "",
                "          <MenuItem style={{marginLeft: 'auto'}} iconF7=\"share\" dropdown>",
                "<MenuDropdown right>",
                "  <MenuDropdownItem href=\"#\">",
                "    <span>Share on Facebook</span>",
                "    <Icon className=\"margin-left\" f7=\"logo_facebook\" />",
                "  </MenuDropdownItem>",
                "  <MenuDropdownItem href=\"#\">",
                "    <span>Share on Twitter</span>",
                "    <Icon className=\"margin-left\" f7=\"logo_twitter\" />",
                "  </MenuDropdownItem>",
                "</MenuDropdown>",
                "          </MenuItem>",
                "",
                "          <MenuItem href=\"#\" iconF7=\"edit\" />",
                "        </Menu>"
            ]
        }
    ],
    "messagebar": [
        {
            "prefix": "f7:messagebar",
            "description": "p Here is how the full example of Messages page where it can be used together with <a href=\"messages.html\">Messages</a>:",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      attachments: [],",
                "      sheetVisible: false,",
                "      typingMessage: null,",
                "      messagesData: [",
                "        {",
                "          type: 'sent',",
                "          text: 'Hi, Kate',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          text: 'How are you?',",
                "        },",
                "        {",
                "          name: 'Kate',",
                "          type: 'received',",
                "          text: 'Hi, I am good!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Blue Ninja',",
                "          type: 'received',",
                "          text: 'Hi there, I am also fine, thanks! And how are you?',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          text: 'Hey, Blue Ninja! Glad to see you ;)',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          text: 'Hey, look, cutest kitten ever!',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          image: 'https://cdn.framework7.io/placeholder/cats-200x260-4.jpg',",
                "",
                "        },",
                "        {",
                "          name: 'Kate',",
                "          type: 'received',",
                "          text: 'Nice!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Kate',",
                "          type: 'received',",
                "          text: 'Like it very much!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Blue Ninja',",
                "          type: 'received',",
                "          text: 'Awesome!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',",
                "        },",
                "      ],",
                "      images: [",
                "        'https://cdn.framework7.io/placeholder/cats-300x300-1.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-200x300-2.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-400x300-3.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x150-4.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-150x300-5.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x300-6.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x300-7.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-200x300-8.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-400x300-9.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x150-10.jpg',",
                "      ],",
                "      people: [",
                "        {",
                "          name: 'Kate Johnson',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Blue Ninja',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',",
                "        },",
                "      ],",
                "      answers: [",
                "        'Yes!',",
                "        'No',",
                "        'Hm...',",
                "        'I am not sure',",
                "        'And what about you?',",
                "        'May be ;)',",
                "        'Lorem ipsum dolor sit amet, consectetur',",
                "        'What?',",
                "        'Are you sure?',",
                "        'Of course',",
                "        'Need to think about it',",
                "        'Amazing!!!',",
                "      ],",
                "      responseInProgress: false,",
                "    }",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Messsages\"></Navbar>",
                "",
                "        <Messagebar",
                "          placeholder={this.placeholder}",
                "          ref={(el) => {this.messagebarComponent = el}}",
                "          attachmentsVisible={this.attachmentsVisible}",
                "          sheetVisible={this.state.sheetVisible}",
                "        >",
                "          <Link",
                "            iconIos=\"f7:camera_fill\"",
                "            iconMd=\"material:camera_alt\"",
                "            slot=\"inner-start\"",
                "            onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}",
                "          ></Link>",
                "          <Link",
                "            iconIos=\"f7:arrow_up_fill\"",
                "            iconMd=\"material:send\"",
                "            slot=\"inner-end\"",
                "            onClick={this.sendMessage.bind(this)}",
                "          ></Link>",
                "          <MessagebarAttachments>",
                "            {this.state.attachments.map((image, index) => (",
                "              <MessagebarAttachment",
                "                key={index}",
                "                image={image}",
                "                onAttachmentDelete={() => this.deleteAttachment(image)}",
                "              ></MessagebarAttachment>",
                "            ))}",
                "          </MessagebarAttachments>",
                "          <MessagebarSheet>",
                "            {this.state.images.map((image, index) => (",
                "              <MessagebarSheetImage",
                "                key={index}",
                "                image={image}",
                "                checked={this.state.attachments.indexOf(image) >= 0}",
                "                onChange={this.handleAttachment.bind(this)}",
                "              ></MessagebarSheetImage>",
                "            ))}",
                "          </MessagebarSheet>",
                "        </Messagebar>",
                "",
                "        <Messages ref={(el) => {this.messagesComponent = el}}>",
                "          <MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>",
                "",
                "          {this.state.messagesData.map((message, index) => (",
                "            <Message",
                "              key={index}",
                "              type={message.type}",
                "              image={message.image}",
                "              name={message.name}",
                "              avatar={message.avatar}",
                "              first={this.isFirstMessage(message, index)}",
                "              last={this.isLastMessage(message, index)}",
                "              tail={this.isTailMessage(message, index)}",
                "            >",
                "              {message.text && (",
                "                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.text}} />",
                "              )}",
                "            </Message>",
                "          ))}",
                "          {this.state.typingMessage && (",
                "            <Message",
                "              type=\"received\"",
                "              typing={true}",
                "              first={true}",
                "              last={true}",
                "              tail={true}",
                "              header={`${this.state.typingMessage.name} is typing`}",
                "              avatar={this.state.typingMessage.avatar}",
                "            ></Message>",
                "          )}",
                "        </Messages>",
                "      </Page>",
                "    )",
                "  }",
                "",
                "  get attachmentsVisible() {",
                "    const self = this;",
                "    return self.state.attachments.length > 0;",
                "  }",
                "  get placeholder() {",
                "    const self = this;",
                "    return self.state.attachments.length > 0 ? 'Add comment or Send' : 'Message';",
                "  }",
                "  componentDidMount() {",
                "    const self = this;",
                "    self.$f7ready(() => {",
                "      self.messagebar = self.messagebarComponent.f7Messagebar;",
                "      self.messages = self.messagesComponent.f7Messages;",
                "    });",
                "  }",
                "  isFirstMessage(message, index) {",
                "    const self = this;",
                "    const previousMessage = self.state.messagesData[index - 1];",
                "    if (message.isTitle) return false;",
                "    if (!previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name) return true;",
                "    return false;",
                "  }",
                "  isLastMessage(message, index) {",
                "    const self = this;",
                "    const nextMessage = self.state.messagesData[index + 1];",
                "    if (message.isTitle) return false;",
                "    if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;",
                "    return false;",
                "  }",
                "  isTailMessage(message, index) {",
                "    const self = this;",
                "    const nextMessage = self.state.messagesData[index + 1];",
                "    if (message.isTitle) return false;",
                "    if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;",
                "    return false;",
                "  }",
                "  deleteAttachment(image) {",
                "    const self = this;",
                "    const attachments = self.state.attachments;",
                "    const index = attachments.indexOf(image);",
                "    attachments.splice(index, 1);",
                "    self.setState({ attachments });",
                "  }",
                "  handleAttachment(e) {",
                "    const self = this;",
                "    const attachments = self.state.attachments;",
                "    const index = self.$$(e.target).parents('label.checkbox').index();",
                "    const image = self.state.images[index];",
                "    if (e.target.checked) {",
                "      // Add to attachments",
                "      attachments.unshift(image);",
                "    } else {",
                "      // Remove from attachments",
                "      attachments.splice(attachments.indexOf(image), 1);",
                "    }",
                "    self.setState({ attachments });",
                "  }",
                "  sendMessage() {",
                "    const self = this;",
                "    const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();",
                "    const messagesToSend = [];",
                "    self.state.attachments.forEach((attachment) => {",
                "      messagesToSend.push({",
                "        image: attachment,",
                "      });",
                "    });",
                "    if (text.trim().length) {",
                "      messagesToSend.push({",
                "        text,",
                "      });",
                "    }",
                "    if (messagesToSend.length === 0) {",
                "      return;",
                "    }",
                "",
                "    self.setState({",
                "      // Reset attachments",
                "      attachments: [],",
                "      // Hide sheet",
                "      sheetVisible: false,",
                "      // Send message",
                "      messagesData: [...self.state.messagesData, ...messagesToSend],",
                "    });",
                "    self.messagebar.clear();",
                "",
                "    // Focus area",
                "    if (text.length) self.messagebar.focus();",
                "",
                "    // Mock response",
                "    if (self.state.responseInProgress) return;",
                "    self.setState({",
                "      responseInProgress: true,",
                "    })",
                "    setTimeout(() => {",
                "      const answer = self.state.answers[Math.floor(Math.random() * self.state.answers.length)];",
                "      const person = self.state.people[Math.floor(Math.random() * self.state.people.length)];",
                "      self.setState({",
                "        typingMessage: {",
                "          name: person.name,",
                "          avatar: person.avatar,",
                "        },",
                "      });",
                "      setTimeout(() => {",
                "        self.setState({",
                "          messagesData: [...self.state.messagesData, {",
                "            text: answer,",
                "            type: 'received',",
                "            name: person.name,",
                "            avatar: person.avatar,",
                "          }],",
                "          typingMessage: null,",
                "          responseInProgress: false,",
                "        });",
                "      }, 4000);",
                "    }, 1000);",
                "  }",
                "};"
            ]
        }
    ],
    "messages": [
        {
            "prefix": "f7:messages",
            "description": "p Here is how the full example of Messages page where it can be used together with <a href=\"messagebar.html\">Messagebar</a>:",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      attachments: [],",
                "      sheetVisible: false,",
                "      typingMessage: null,",
                "      messagesData: [",
                "        {",
                "          type: 'sent',",
                "          text: 'Hi, Kate',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          text: 'How are you?',",
                "        },",
                "        {",
                "          name: 'Kate',",
                "          type: 'received',",
                "          text: 'Hi, I am good!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Blue Ninja',",
                "          type: 'received',",
                "          text: 'Hi there, I am also fine, thanks! And how are you?',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          text: 'Hey, Blue Ninja! Glad to see you ;)',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          text: 'Hey, look, cutest kitten ever!',",
                "        },",
                "        {",
                "          type: 'sent',",
                "          image: 'https://cdn.framework7.io/placeholder/cats-200x260-4.jpg',",
                "",
                "        },",
                "        {",
                "          name: 'Kate',",
                "          type: 'received',",
                "          text: 'Nice!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Kate',",
                "          type: 'received',",
                "          text: 'Like it very much!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Blue Ninja',",
                "          type: 'received',",
                "          text: 'Awesome!',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',",
                "        },",
                "      ],",
                "      images: [",
                "        'https://cdn.framework7.io/placeholder/cats-300x300-1.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-200x300-2.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-400x300-3.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x150-4.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-150x300-5.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x300-6.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x300-7.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-200x300-8.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-400x300-9.jpg',",
                "        'https://cdn.framework7.io/placeholder/cats-300x150-10.jpg',",
                "      ],",
                "      people: [",
                "        {",
                "          name: 'Kate Johnson',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-9.jpg',",
                "        },",
                "        {",
                "          name: 'Blue Ninja',",
                "          avatar: 'https://cdn.framework7.io/placeholder/people-100x100-7.jpg',",
                "        },",
                "      ],",
                "      answers: [",
                "        'Yes!',",
                "        'No',",
                "        'Hm...',",
                "        'I am not sure',",
                "        'And what about you?',",
                "        'May be ;)',",
                "        'Lorem ipsum dolor sit amet, consectetur',",
                "        'What?',",
                "        'Are you sure?',",
                "        'Of course',",
                "        'Need to think about it',",
                "        'Amazing!!!',",
                "      ],",
                "      responseInProgress: false,",
                "    }",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Messsages\"></Navbar>",
                "",
                "        <Messagebar",
                "          placeholder={this.placeholder}",
                "          ref={(el) => {this.messagebarComponent = el}}",
                "          attachmentsVisible={this.attachmentsVisible}",
                "          sheetVisible={this.state.sheetVisible}",
                "        >",
                "          <Link",
                "            iconIos=\"f7:camera_fill\"",
                "            iconMd=\"material:camera_alt\"",
                "            slot=\"inner-start\"",
                "            onClick={() => {this.setState({sheetVisible: !this.state.sheetVisible})}}",
                "          ></Link>",
                "          <Link",
                "            iconIos=\"f7:arrow_up_fill\"",
                "            iconMd=\"material:send\"",
                "            slot=\"inner-end\"",
                "            onClick={this.sendMessage.bind(this)}",
                "          ></Link>",
                "          <MessagebarAttachments>",
                "            {this.state.attachments.map((image, index) => (",
                "              <MessagebarAttachment",
                "                key={index}",
                "                image={image}",
                "                onAttachmentDelete={() => this.deleteAttachment(image)}",
                "              ></MessagebarAttachment>",
                "            ))}",
                "          </MessagebarAttachments>",
                "          <MessagebarSheet>",
                "            {this.state.images.map((image, index) => (",
                "              <MessagebarSheetImage",
                "                key={index}",
                "                image={image}",
                "                checked={this.state.attachments.indexOf(image) >= 0}",
                "                onChange={this.handleAttachment.bind(this)}",
                "              ></MessagebarSheetImage>",
                "            ))}",
                "          </MessagebarSheet>",
                "        </Messagebar>",
                "",
                "        <Messages ref={(el) => {this.messagesComponent = el}}>",
                "          <MessagesTitle><b>Sunday, Feb 9,</b> 12:58</MessagesTitle>",
                "",
                "          {this.state.messagesData.map((message, index) => (",
                "            <Message",
                "              key={index}",
                "              type={message.type}",
                "              image={message.image}",
                "              name={message.name}",
                "              avatar={message.avatar}",
                "              first={this.isFirstMessage(message, index)}",
                "              last={this.isLastMessage(message, index)}",
                "              tail={this.isTailMessage(message, index)}",
                "            >",
                "              {message.text && (",
                "                <span slot=\"text\" dangerouslySetInnerHTML={{__html: message.text}} />",
                "              )}",
                "            </Message>",
                "          ))}",
                "          {this.state.typingMessage && (",
                "            <Message",
                "              type=\"received\"",
                "              typing={true}",
                "              first={true}",
                "              last={true}",
                "              tail={true}",
                "              header={`${this.state.typingMessage.name} is typing`}",
                "              avatar={this.state.typingMessage.avatar}",
                "            ></Message>",
                "          )}",
                "        </Messages>",
                "      </Page>",
                "    )",
                "  }",
                "",
                "  get attachmentsVisible() {",
                "    const self = this;",
                "    return self.state.attachments.length > 0;",
                "  }",
                "  get placeholder() {",
                "    const self = this;",
                "    return self.state.attachments.length > 0 ? 'Add comment or Send' : 'Message';",
                "  }",
                "  componentDidMount() {",
                "    const self = this;",
                "    self.$f7ready(() => {",
                "      self.messagebar = self.messagebarComponent.f7Messagebar;",
                "      self.messages = self.messagesComponent.f7Messages;",
                "    });",
                "  }",
                "  isFirstMessage(message, index) {",
                "    const self = this;",
                "    const previousMessage = self.state.messagesData[index - 1];",
                "    if (message.isTitle) return false;",
                "    if (!previousMessage || previousMessage.type !== message.type || previousMessage.name !== message.name) return true;",
                "    return false;",
                "  }",
                "  isLastMessage(message, index) {",
                "    const self = this;",
                "    const nextMessage = self.state.messagesData[index + 1];",
                "    if (message.isTitle) return false;",
                "    if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;",
                "    return false;",
                "  }",
                "  isTailMessage(message, index) {",
                "    const self = this;",
                "    const nextMessage = self.state.messagesData[index + 1];",
                "    if (message.isTitle) return false;",
                "    if (!nextMessage || nextMessage.type !== message.type || nextMessage.name !== message.name) return true;",
                "    return false;",
                "  }",
                "  deleteAttachment(image) {",
                "    const self = this;",
                "    const attachments = self.state.attachments;",
                "    const index = attachments.indexOf(image);",
                "    attachments.splice(index, 1);",
                "    self.setState({ attachments });",
                "  }",
                "  handleAttachment(e) {",
                "    const self = this;",
                "    const attachments = self.state.attachments;",
                "    const index = self.$$(e.target).parents('label.checkbox').index();",
                "    const image = self.state.images[index];",
                "    if (e.target.checked) {",
                "      // Add to attachments",
                "      attachments.unshift(image);",
                "    } else {",
                "      // Remove from attachments",
                "      attachments.splice(attachments.indexOf(image), 1);",
                "    }",
                "    self.setState({ attachments });",
                "  }",
                "  sendMessage() {",
                "    const self = this;",
                "    const text = self.messagebar.getValue().replace(/\\n/g, '<br>').trim();",
                "    const messagesToSend = [];",
                "    self.state.attachments.forEach((attachment) => {",
                "      messagesToSend.push({",
                "        image: attachment,",
                "      });",
                "    });",
                "    if (text.trim().length) {",
                "      messagesToSend.push({",
                "        text,",
                "      });",
                "    }",
                "    if (messagesToSend.length === 0) {",
                "      return;",
                "    }",
                "",
                "    self.setState({",
                "      // Reset attachments",
                "      attachments: [],",
                "      // Hide sheet",
                "      sheetVisible: false,",
                "      // Send message",
                "      messagesData: [...self.state.messagesData, ...messagesToSend],",
                "    });",
                "    self.messagebar.clear();",
                "",
                "    // Focus area",
                "    if (text.length) self.messagebar.focus();",
                "",
                "    // Mock response",
                "    if (self.state.responseInProgress) return;",
                "    self.setState({",
                "      responseInProgress: true,",
                "    })",
                "    setTimeout(() => {",
                "      const answer = self.state.answers[Math.floor(Math.random() * self.state.answers.length)];",
                "      const person = self.state.people[Math.floor(Math.random() * self.state.people.length)];",
                "      self.setState({",
                "        typingMessage: {",
                "          name: person.name,",
                "          avatar: person.avatar,",
                "        },",
                "      });",
                "      setTimeout(() => {",
                "        self.setState({",
                "          messagesData: [...self.state.messagesData, {",
                "            text: answer,",
                "            type: 'received',",
                "            name: person.name,",
                "            avatar: person.avatar,",
                "          }],",
                "          typingMessage: null,",
                "          responseInProgress: false,",
                "        });",
                "      }, 4000);",
                "    }, 1000);",
                "  }",
                "};"
            ]
        }
    ],
    "navbar": [
        {
            "prefix": "f7:navbar",
            "description": "Minimal layout",
            "body": [
                "          <Navbar title=\"My App\"></Navbar>"
            ]
        },
        {
            "prefix": "f7:navbar",
            "description": "Minimal layout with back link",
            "body": [
                "          <Navbar title=\"My App\" backLink=\"Back\"></Navbar>"
            ]
        },
        {
            "prefix": "f7:navbar",
            "description": "Without \"sliding\" transition effect (affects iOS theme only)",
            "body": [
                "          <Navbar title=\"My App\" backLink=\"Back\" sliding=\"{false}\"></Navbar>"
            ]
        },
        {
            "prefix": "f7:navbar",
            "description": "With additional right link to open right panel",
            "body": [
                "      <Navbar title=\"My App\" backLink=\"Back\">",
                "        <NavRight>",
                "          <Link icon=\"icon-bars\" panelOpen=\"right\"></Link>",
                "        </NavRight>",
                "      </Navbar>",
                "",
                "      {/* or */}",
                "",
                "      <Navbar title=\"My App\" backLink=\"Back\">",
                "        <Link slot=\"nav-right\" icon=\"icon-bars\" panelOpen=\"right\"></Link>",
                "      </Navbar>"
            ]
        },
        {
            "prefix": "f7:navbar",
            "description": "With large title",
            "body": [
                "      <Navbar title=\"My App\" backLink=\"Back\" large></Navbar>",
                "",
                "      {/* with different large title text */}",
                "",
                "      <Navbar title=\"My App\" backLink=\"Back\" large titleLarge=\"Large Title\"></Navbar>"
            ]
        },
        {
            "prefix": "f7:navbar",
            "description": "All three parts",
            "body": [
                "      <Navbar>",
                "        <NavLeft backLink=\"Back\"></NavLeft>",
                "        <NavTitle>My App</NavTitle>",
                "        <NavRight>",
                "          <Link icon=\"icon-bars\" panelOpen=\"right\"></Link>",
                "        </NavRight>",
                "      </Navbar>"
            ]
        },
        {
            "prefix": "f7:navbar",
            "description": "Full custom layout",
            "body": [
                "      <Navbar>",
                "        <NavLeft>",
                "          <Link>Left Link</Link>",
                "        </NavLeft>",
                "        <NavTitle>My App</NavTitle>",
                "        <NavRight>",
                "          <Link>Right Link</Link>",
                "        </NavRight>",
                "      </Navbar>"
            ]
        }
    ],
    "navigation-router": [
        {
            "prefix": "f7:navigation-router",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var activeLink = 'react';",
                "  - var title = 'Navigation Router | Framework7 React Documentation';",
                "",
                "block content",
                "",
                "  .docs-nav",
                "    include ../_docs-menu-react",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 Navigation Router",
                "    ul.docs-index",
                "    p Framework7-React as Framework7 itself comes with powerful and flexible router. And to make it work we must specify <a href=\"../docs/routes.html\">Routes</a>.",
                "    p The only difference in Framework7-React is that in React.js we are already composing our application with React components, so we need to map our Pages (React components) to the routes. It can be done by passing React component in <code>component</code> property of the route. Here's a basic example:",
                "          // App.jsx",
                "",
                "          // Import pages components",
                "          import HomePage from 'home.jsx';",
                "          import AboutPage from 'about.jsx';",
                "          import LoginPage from 'login.jsx';",
                "",
                "          /*",
                "Now we need to map components to routes.",
                "We need to pass them along with the F7 app parameters to <App> component",
                "          */",
                "",
                "          const f7params = {",
                "name: 'My App',",
                "id: 'com.myapp.test',",
                "// specify routes for app",
                "routes: [",
                "  {",
                "    path: '/',",
                "    component: HomePage,",
                "  },",
                "  {",
                "    path: '/about/',",
                "    component: AboutPage,",
                "  },",
                "  {",
                "    path: '/login/',",
                "    component: LoginPage,",
                "  },",
                "],",
                "          };",
                "",
                "          export default () => (",
                "<App params={f7params}>",
                "  {/* Current View/Router, initial page will be loaded from home.jsx component */}",
                "  <View main url=\"/\" />",
                "</App>",
                "          )",
                "",
                "          // home.jsx",
                "          export default () => (",
                "<Page name=\"home\">",
                "  <Navbar title=\"Home Page\" />",
                "  ...",
                "  <Link href=\"/about/\">About Page</Link>",
                "  <Link href=\"/login/\">Login Page</Link>",
                "</Page>",
                "          )",
                "          // about.jsx",
                "          export default () => (",
                "<Page name=\"about\">",
                "  <Navbar title=\"About\" />",
                "  {/* Page content */}",
                "  ...",
                "</Page>",
                "          )",
                "          // login.jsx",
                "          export default () => (",
                "<Page name=\"login\">",
                "  <Navbar title=\"Login\" />",
                "  {/* Page content */}",
                "  ...",
                "</Page>",
                "          )",
                "",
                "    .important-note",
                "      p Check the full <a href=\"../docs/routes.html\">Routes Documentation</a> to know about all possible routes options, how to use <a href=\"../docs/routes.html#nested-routes\">Nested Routes</a>, <a href=\"../docs/routes.html#routable-tabs\">Routable Tabs</a> and <a href=\"../docs/routes.html#routable-modals\">Routable Modals</a>.",
                "",
                "    h2 Pass Props To Components",
                "    p It is possible to pass component props to React components loaded by router. There are few ways to do it.",
                "    p First of all, all route params will be automatically passed as props to component, e.g.",
                "      // route with params",
                "      {",
                "        path: '/blog/:postId/comments/:commentId/',",
                "        component: BlogPost,",
                "      }",
                "    p So if we navigate by <code>/blog/45/comments/122/</code> URL, then the following data will be passed to props:",
                "      {",
                "        postId: '45',",
                "        commentId: '122',",
                "      }",
                "    p Another option is to specify props in route's <code>options</code>:",
                "      {",
                "        path: '/some-page/',",
                "        component: SomeComponent,",
                "        options: {",
                "          props: {",
                "foo: 'bar',",
                "bar: true,",
                "          },",
                "        },",
                "      }",
                "    p And finally, props can be passed dynamically to route component when we navigate with API:",
                "      this.$f7router.navigate('/some-page/', {",
                "        props: {",
                "          foo: 'bar',",
                "          bar: true,",
                "        }",
                "      })",
                "",
                "    h2 Async Lazy Components",
                "    p With Webpack it is possible to load page components on demand, it is possible with F7's async route, for example:",
                "          {",
                "path: '/about/',",
                "async(routeTo, routeFrom, resolve, reject) {",
                "  // dynamic import component; returns promise",
                "  const reactComponent = () => import('./pages/about.jsx');",
                "  // resolve promise",
                "  reactComponent().then((rc) => {",
                "    // resolve with component",
                "    resolve({ component: rc.default })",
                "  });",
                "} ,",
                "          },",
                "",
                "    h2 Router API",
                "    p To access router instance and use <a href=\"../docs/view.html#router-api-methods-properties\">Router API</a> you can use special <b>$f7router</b> property of component:",
                "          <Link onClick={() => this.$f7router.navigate('/about/')}>About</Link>",
                "          <Link onClick={() => this.$f7router.back()}>Go Back</Link>",
                "    .important-note",
                "      p Please note, that <code>$f7route</code> and <code>$f7router</code> component properties are only available inside of custom page components that you load according to routes. In parent components (like in View, or where you init your React app instance) and in child components they are not accessible. So in this case use access to initialized <a href=\"view.html#access-to-view-instance\">View Instance</a>, e.g. <code>$f7.views.main.router</code>"
            ]
        }
    ],
    "package": [
        {
            "prefix": "f7:package",
            "description": "../_docs-template",
            "body": [
                "",
                "block vars",
                "  - var title = 'Framework7 React Package Structure | Framework7 Documentation';",
                "",
                "block content",
                "  .docs-nav",
                "    include ../_docs-menu",
                "  .docs-content",
                "    +improveDocsLink",
                "    h1 Framework7 React Package Structure",
                "    ul.docs-index",
                "    h2 Package",
                "    p Framework7 React package contains the following files and folders:",
                "      framework7-react/",
                "          components/",
                "  accordion-content.js",
                "  accordion-item.js",
                "  accordion-toggle.js",
                "  accordion.js",
                "  actions-button.js",
                "  actions-group.js",
                "  actions-label.js",
                "  actions.js",
                "  app.js",
                "  ...",
                "          framework7-react.bundle.js",
                "          framework7-react.bundle.min.js",
                "          framework7-react.esm.js",
                "",
                "    h2 Browser Script (UMD)",
                "    p #[code framework7-react.bundle.js] is so called #[a(href=\"https://github.com/umdjs/umd\", target=\"_blank\") UMD]-format JavaScript intended to be used directly in browser (e.g. with #[code &lt;script src=\"...\"&gt;]) or with libraries like Require.js. It already contains all Framework7-React components registered.",
                "    p It is not recommended to use this version for production, just for development and testing.",
                "",
                "    h2 Components",
                "    p All React components are located in #[code components/] folder. These components are ES modules.",
                "      import App from 'framework7-react/components/app.js';",
                "      import Navbar from 'framework7-react/components/navbar.js';",
                "",
                "    p Or they can be imported using named import from main file",
                "      import { App, Navbar } from 'framework7-react';",
                "",
                "    h2 ES Module",
                "    p Framework7 React plugin can be imported as an ES-next module:",
                "      // Import Framework7 Core",
                "      import Framework7 from 'framework7';",
                "      /*",
                "      Or import bundle with all components:",
                "      import Framework7 from 'framework7/framework7.esm.bundle.js';",
                "      */",
                "",
                "      // Import Framework7 React",
                "      import Framework7React from 'framework7-react';",
                "",
                "      // Init plugin",
                "      Framework7.use(Framework7React)",
                "",
                "    .important-note",
                "      p",
                "        b By default it exports only Framework7-React plugin without any components. To import components separately, we need to use named import:",
                "        import { App, Navbar } from 'framework7-react';",
                "",
                "    h2 ES-Next",
                "    p Note, that Framework7 and Framework7-React ES modules are in ES-next syntax, so don't forget to enable/configure your Babel/Buble to transpile them as well, as well as <code>template7</code>, <code>dom7</code> and <code>ssr-window</code> modules that used as dependencies."
            ]
        }
    ],
    "page": [
        {
            "prefix": "f7:page",
            "description": "h3(data-device-preview=\"../docs-demos/react/infinite-scroll.html\") Infinite Scroll",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      items: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],",
                "      allowInfinite: true,",
                "      showPreloader: true,",
                "    };",
                "  }",
                "  render() {",
                "    return (",
                "      <Page",
                "        infinite",
                "        infiniteDistance={50}",
                "        infinitePreloader={this.state.showPreloader}",
                "        onInfinite={this.loadMore.bind(this)}",
                "      >",
                "        <Navbar title=\"Infinite Scroll\"></Navbar>",
                "        <BlockTitle>Scroll bottom</BlockTitle>",
                "        <List>",
                "          {this.state.items.map((item, index) => (",
                "            <ListItem title={`Item ${item}`} key={index}></ListItem>",
                "          ))}",
                "        </List>",
                "      </Page>",
                "    )",
                "  }",
                "  loadMore() {",
                "    const self = this;",
                "    if (!self.state.allowInfinite) return;",
                "    self.setState({ allowInfinite: false });",
                "",
                "    setTimeout(() => {",
                "      const items = self.state.items;",
                "      if (items.length >= 200) {",
                "        self.setState({ showPreloader: false });",
                "        return;",
                "      }",
                "",
                "      const itemsLength = items.length;",
                "",
                "      for (let i = 1; i <= 20; i += 1) {",
                "        items.push(itemsLength + i);",
                "      }",
                "",
                "      self.setState({",
                "        items,",
                "        allowInfinite: true,",
                "      });",
                "    }, 1000);",
                "  }",
                "};",
                "      h3(data-device-preview=\"../docs-demos/react/pull-to-refresh.html\") Pull To Refresh",
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      items: [",
                "        {",
                "          title: 'Yellow Submarine',",
                "          author: 'Beatles',",
                "          cover: 'https://cdn.framework7.io/placeholder/abstract-88x88-1.jpg',",
                "        },",
                "        {",
                "          title: 'Don\\'t Stop Me Now',",
                "          author: 'Queen',",
                "          cover: 'https://cdn.framework7.io/placeholder/abstract-88x88-2.jpg',",
                "        },",
                "        {",
                "          title: 'Billie Jean',",
                "          author: 'Michael Jackson',",
                "          cover: 'https://cdn.framework7.io/placeholder/abstract-88x88-3.jpg',",
                "        },",
                "      ],",
                "      songs: ['Yellow Submarine', 'Don\\'t Stop Me Now', 'Billie Jean', 'Californication'],",
                "      authors: ['Beatles', 'Queen', 'Michael Jackson', 'Red Hot Chili Peppers'],",
                "    }",
                "  }",
                "  render() {",
                "    return (",
                "      <Page ptr onPtrRefresh={this.loadMore.bind(this)}>",
                "        <Navbar title=\"Pull To Refresh\"></Navbar>",
                "        <List mediaList>",
                "          {this.state.items.map((item, index) => (",
                "            <ListItem",
                "              key={index}",
                "              title={item.title}",
                "              subtitle={item.author}",
                "            >",
                "              <img slot=\"media\" src={item.cover} width=\"44\" />",
                "            </ListItem>",
                "          ))}",
                "          <BlockFooter>",
                "            <p>Just pull page down to let the magic happen.<br />Note that pull-to-refresh feature is optimised for touch and native scrolling so it may not work on desktop browser.</p>",
                "          </BlockFooter>",
                "        </List>",
                "      </Page>",
                "    );",
                "  }",
                "  loadMore(event, done) {",
                "    const self = this;",
                "    setTimeout(() => {",
                "      const { items, songs, authors } = self.state;",
                "      const picURL = `https://cdn.framework7.io/placeholder/abstract-88x88-${Math.round(Math.random() * 10)}.jpg`;",
                "      const song = songs[Math.floor(Math.random() * songs.length)];",
                "      const author = authors[Math.floor(Math.random() * authors.length)];",
                "      items.push({",
                "        title: song,",
                "        author,",
                "        img: picURL,",
                "      });",
                "      self.setState({ items });",
                "",
                "      done();",
                "    }, 1000);",
                "  }",
                "}"
            ]
        }
    ],
    "panel": [
        {
            "prefix": "f7:panel",
            "description": "",
            "body": [
                "<App>",
                "  {/* Left Panel with Reveal effect */}",
                "  <Panel left reveal>",
                "    <View>",
                "      <Page>",
                "        <Block>Left panel content</Block>",
                "      </Page>",
                "    </View>",
                "  </Panel>",
                "",
                "  {/* Right Panel with Cover effect and dark layout theme */}",
                "  <Panel right themeDark>",
                "    <View>",
                "      <Page>",
                "        <Block>Right panel content</Block>",
                "      </Page>",
                "    </View>",
                "  </Panel>",
                "",
                "  {/* Main view */}",
                "  <View main>",
                "    <Page>",
                "      <Navbar title=\"Panel\"></Navbar>",
                "",
                "      <Block className=\"row\">",
                "        <Col>",
                "          <Button raised panelOpen=\"left\">Open left panel</Button>",
                "        </Col>",
                "        <Col>",
                "          <Button raised panelOpen=\"right\">Open right panel</Button>",
                "        </Col>",
                "      </Block>",
                "    </Page>",
                "  </View>",
                "</App>"
            ]
        }
    ],
    "photo-browser": [
        {
            "prefix": "f7:photo-browser",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "    this.state = {",
                "      photos: [",
                "        {",
                "          url: 'img/beach.jpg',",
                "          caption: 'Amazing beach in Goa, India',",
                "        },",
                "        'http://placekitten.com/1024/1024',",
                "        'img/lock.jpg',",
                "        {",
                "          url: 'img/monkey.jpg',",
                "          caption: 'I met this monkey in Chinese mountains',",
                "        },",
                "        {",
                "          url: 'img/mountains.jpg',",
                "          caption: 'Beautiful mountains in Zhangjiajie, China',",
                "        },",
                "      ],",
                "    }",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Photo Browser\"></Navbar>",
                "",
                "        <Block>",
                "          <p>Photo Browser could be opened in a three ways - as a Standalone component (Popup modification), in Popup, and as separate Page:</p>",
                "          <Row>",
                "            <Col>",
                "              <PhotoBrowser",
                "                photos={this.state.photos}",
                "                ref={(el) => {this.standalone = el}}",
                "              />",
                "              <Button raised onClick={() => this.standalone.open()}>Standalone</Button>",
                "            </Col>",
                "            <Col>",
                "              <PhotoBrowser",
                "                photos={this.state.photos}",
                "                type=\"popup\"",
                "                ref={(el) => {this.popup = el}}",
                "              />",
                "              <Button raised onClick={() => this.popup.open()}>Popup</Button>",
                "            </Col>",
                "            <Col>",
                "              <PhotoBrowser",
                "                photos={this.state.photos}",
                "                type=\"page\"",
                "                backLinkText=\"Back\"",
                "                ref={(el) => {this.page = el}}",
                "              />",
                "              <Button raised onClick={() => this.page.open()}>Page</Button>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "",
                "        <Block>",
                "          <p>Photo Browser suppots 2 default themes - default Light (like in previous examples) and Dark theme. Here is a Dark theme examples:</p>",
                "          <Row>",
                "            <Col>",
                "              <PhotoBrowser",
                "                photos={this.state.photos}",
                "                theme=\"dark\"",
                "                ref={(el) => {this.standaloneDark = el}}",
                "              />",
                "              <Button raised onClick={() => this.standaloneDark.open()}>Standalone</Button>",
                "            </Col>",
                "            <Col>",
                "              <PhotoBrowser",
                "                photos={this.state.photos}",
                "                theme=\"dark\"",
                "                type=\"popup\"",
                "                ref={(el) => {this.popupDark = el}}",
                "              />",
                "              <Button raised onClick={() => this.popupDark.open()}>Popup</Button>",
                "            </Col>",
                "            <Col>",
                "              <PhotoBrowser",
                "                photos={this.state.photos}",
                "                theme=\"dark\"",
                "                type=\"page\"",
                "                backLinkText=\"Back\"",
                "                ref={(el) => {this.pageDark = el}}",
                "              />",
                "              <Button raised onClick={() => this.pageDark.open()}>Page</Button>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "      </Page>",
                "    );",
                "  }",
                "};"
            ]
        }
    ],
    "popover": [
        {
            "prefix": "f7:popover",
            "description": "",
            "body": [
                "export default () => (",
                "  <Page>",
                "    <Navbar title=\"Popover\"></Navbar>",
                "    <Toolbar bottom>",
                "      <Link>Dummy Link</Link>",
                "      <Link popoverOpen=\".popover-menu\">Open Popover</Link>",
                "    </Toolbar>",
                "",
                "    <Block>",
                "      <p><Button raised popoverOpen=\".popover-menu\">Open popover on me</Button></p>",
                "      <p>Mauris fermentum neque et luctus venenatis. Vivamus a sem rhoncus, ornare tellus eu, euismod mauris. In porta turpis at semper convallis. Duis adipiscing leo eu nulla lacinia, quis rhoncus metus condimentum. Etiam nec malesuada nibh. Maecenas quis lacinia nisl, vel posuere dolor. Vestibulum condimentum, nisl ac vulputate egestas, neque enim dignissim elit, rhoncus volutpat magna enim a est. Aenean sit amet ligula neque. Cras suscipit rutrum enim. Nam a odio facilisis, elementum tellus non, <Link popoverOpen=\".popover-menu\">popover</Link> tortor. Pellentesque felis eros, dictum vitae lacinia quis, lobortis vitae ipsum. Cras vehicula bibendum lorem quis imperdiet.</p>",
                "      <p>In hac habitasse platea dictumst. Etiam varius, ante vel ornare facilisis, velit massa rutrum dolor, ac porta magna magna lacinia nunc. Curabitur <Link popoverOpen=\".popover-menu\">popover!</Link> cursus laoreet. Aenean vel tempus augue. Pellentesque in imperdiet nibh. Mauris rhoncus nulla id sem suscipit volutpat. Pellentesque ac arcu in nisi viverra pulvinar. Nullam nulla orci, bibendum sed ligula non, ullamcorper iaculis mi. In hac habitasse platea dictumst. Praesent varius at nisl eu luctus. Cras aliquet porta est. Quisque elementum quis dui et consectetur. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed sed laoreet purus. Pellentesque eget ante ante.</p>",
                "      <p>Duis et ultricies nibh. Sed facilisis turpis urna, ac imperdiet erat venenatis eu. Proin sit amet faucibus tortor, et varius sem. Etiam vitae lacinia neque. Aliquam nisi purus, interdum in arcu sed, ultrices rutrum arcu. Nulla mi turpis, consectetur vel enim quis, facilisis viverra dui. Aliquam quis convallis tortor, quis semper ligula. Morbi ullamcorper <Link popoverOpen=\".popover-menu\">one more popover</Link> massa at accumsan. Etiam purus odio, posuere in ligula vitae, viverra ultricies justo. Vestibulum nec interdum nisi. Aenean ac consectetur velit, non malesuada magna. Sed pharetra vehicula augue, vel venenatis lectus gravida eget. Curabitur lacus tellus, venenatis eu arcu in, interdum auctor nunc. Nunc non metus neque. Suspendisse viverra lectus sed risus aliquet, vel accumsan dolor feugiat.</p>",
                "    </Block>",
                "    <Popover className=\"popover-menu\">",
                "      <List>",
                "        <ListItem link=\"#\" popoverClose title=\"Dialog\" />",
                "        <ListItem link=\"#\" popoverClose title=\"Tabs\" />",
                "        <ListItem link=\"#\" popoverClose title=\"Side Panels\" />",
                "        <ListItem link=\"#\" popoverClose title=\"List View\" />",
                "        <ListItem link=\"#\" popoverClose title=\"Form Inputs\" />",
                "      </List>",
                "    </Popover>",
                "  </Page>",
                ");"
            ]
        }
    ],
    "popup": [
        {
            "prefix": "f7:popup",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      popupOpened: false,",
                "    }",
                "  }",
                "  render() {",
                "    return (",
                "      <Page onPageBeforeRemove={this.onPageBeforeRemove.bind(this)}>",
                "        <Navbar title=\"Popup\"></Navbar>",
                "        <Block>",
                "          <p>Popup is a modal window with any HTML content that pops up over App's main content. Popup as all other overlays is part of so called \"Temporary Views\".</p>",
                "          <p>",
                "            <Button raised popupOpen=\".demo-popup\">Open Popup</Button>",
                "          </p>",
                "          <p>",
                "            <Button raised onClick={() => this.setState({ popupOpened : true })}>Open Via Prop Change</Button>",
                "          </p>",
                "          <p>",
                "            <Button raised onClick={this.createPopup.bind(this)}>Create Dynamic Popup</Button>",
                "          </p>",
                "        </Block>",
                "        <Popup className=\"demo-popup\" opened={this.state.popupOpened} onPopupClosed={() => this.setState({popupOpened : false})}>",
                "          <Page>",
                "            <Navbar title=\"Popup Title\">",
                "              <NavRight>",
                "                <Link popupClose>Close</Link>",
                "              </NavRight>",
                "            </Navbar>",
                "            <Block>",
                "              <p>Here comes popup. You can put here anything, even independent view with its own navigation. Also not, that by default popup looks a bit different on iPhone/iPod and iPad, on iPhone it is fullscreen.</p>",
                "              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse faucibus mauris leo, eu bibendum neque congue non. Ut leo mauris, eleifend eu commodo a, egestas ac urna. Maecenas in lacus faucibus, viverra ipsum pulvinar, molestie arcu. Etiam lacinia venenatis dignissim. Suspendisse non nisl semper tellus malesuada suscipit eu et eros. Nulla eu enim quis quam elementum vulputate. Mauris ornare consequat nunc viverra pellentesque. Aenean semper eu massa sit amet aliquam. Integer et neque sed libero mollis elementum at vitae ligula. Vestibulum pharetra sed libero sed porttitor. Suspendisse a faucibus lectus.</p>",
                "              <p>Duis ut mauris sollicitudin, venenatis nisi sed, luctus ligula. Phasellus blandit nisl ut lorem semper pharetra. Nullam tortor nibh, suscipit in consequat vel, feugiat sed quam. Nam risus libero, auctor vel tristique ac, malesuada ut ante. Sed molestie, est in eleifend sagittis, leo tortor ullamcorper erat, at vulputate eros sapien nec libero. Mauris dapibus laoreet nibh quis bibendum. Fusce dolor sem, suscipit in iaculis id, pharetra at urna. Pellentesque tempor congue massa quis faucibus. Vestibulum nunc eros, convallis blandit dui sit amet, gravida adipiscing libero.</p>",
                "            </Block>",
                "          </Page>",
                "        </Popup>",
                "      </Page>",
                "    )",
                "  }",
                "  createPopup() {",
                "    const self = this;",
                "    // Create popup",
                "    if (!self.popup) {",
                "      self.popup = self.$f7.popup.create({",
                "        content: `",
                "          <div class=\"popup\">",
                "            <div class=\"page\">",
                "              <div class=\"navbar\">",
                "                <div class=\"navbar-inner\">",
                "                  <div class=\"title\">Dynamic Popup</div>",
                "                  <div class=\"right\"><a href=\"#\" class=\"link popup-close\">Close</a></div>",
                "                </div>",
                "              </div>",
                "              <div class=\"page-content\">",
                "                <div class=\"block\">",
                "                  <p>This popup was created dynamically</p>",
                "                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse faucibus mauris leo, eu bibendum neque congue non. Ut leo mauris, eleifend eu commodo a, egestas ac urna. Maecenas in lacus faucibus, viverra ipsum pulvinar, molestie arcu. Etiam lacinia venenatis dignissim. Suspendisse non nisl semper tellus malesuada suscipit eu et eros. Nulla eu enim quis quam elementum vulputate. Mauris ornare consequat nunc viverra pellentesque. Aenean semper eu massa sit amet aliquam. Integer et neque sed libero mollis elementum at vitae ligula. Vestibulum pharetra sed libero sed porttitor. Suspendisse a faucibus lectus.</p>",
                "                </div>",
                "              </div>",
                "            </div>",
                "          </div>",
                "        `.trim(),",
                "      });",
                "    }",
                "    // Open it",
                "    self.popup.open();",
                "  }",
                "  onPageBeforeRemove() {",
                "    const self = this;",
                "    // Destroy popup when page removed",
                "    if (self.popup) self.popup.destroy();",
                "  }",
                "};"
            ]
        }
    ],
    "preloader": [
        {
            "prefix": "f7:preloader",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Preloader\"></Navbar>",
                "        <Block>",
                "          <p>How about an activity indicator? Framework 7 has a nice one. The F7 Preloader is made with SVG and animated with CSS so it can be easily resized.</p>",
                "        </Block>",
                "",
                "        <BlockTitle>Default</BlockTitle>",
                "        <Block className=\"row demo-preloaders align-items-stretch text-align-center\">",
                "          <Col>",
                "            <Preloader></Preloader>",
                "          </Col>",
                "          <Col style={{background: '#000'}}>",
                "            <Preloader color=\"white\"></Preloader>",
                "          </Col>",
                "          <Col>",
                "            <Preloader size={42}></Preloader>",
                "          </Col>",
                "          <Col style={{background: '#000'}}>",
                "            <Preloader size={42} color=\"white\"></Preloader>",
                "          </Col>",
                "        </Block>",
                "",
                "        <BlockTitle>Color Preloaders</BlockTitle>",
                "        <Block className=\"row text-align-center\">",
                "          <Col>",
                "            <Preloader color=\"red\"></Preloader>",
                "          </Col>",
                "          <Col>",
                "            <Preloader color=\"green\"></Preloader>",
                "          </Col>",
                "          <Col>",
                "            <Preloader color=\"orange\"></Preloader>",
                "          </Col>",
                "          <Col>",
                "            <Preloader color=\"blue\"></Preloader>",
                "          </Col>",
                "        </Block>",
                "",
                "        <BlockTitle>Multi-color (MD-theme only)</BlockTitle>",
                "        <Block className=\"text-align-center\">",
                "          <Preloader color=\"multi\"></Preloader>",
                "        </Block>",
                "",
                "        <BlockTitle>Preloader Modals</BlockTitle>",
                "        <Block>",
                "          <p>With <b>app.preloader.show()</b> you can show small overlay with preloader indicator.</p>",
                "          <p>",
                "            <a className=\"button button-raised\" onClick={this.openIndicator.bind(this)}>Open Small Indicator</a>",
                "          </p>",
                "          <p>With <b>app.dialog.preloader()</b> you can show dialog modal with preloader indicator.</p>",
                "          <p>",
                "            <a className=\"button button-raised\" onClick={this.openDialog.bind(this)}>Open Dialog Preloader</a>",
                "          </p>",
                "          <p>With <b>app.dialog.preloader('My text...')</b> you can show dialog preloader modal with custom title.</p>",
                "          <p>",
                "            <a className=\"button button-raised\" onClick={this.openCustomDialog.bind(this)}>Open Dialog Preloader</a>",
                "          </p>",
                "        </Block>",
                "      </Page>",
                "    );",
                "  }",
                "",
                "  openIndicator() {",
                "    const self = this;",
                "    self.$f7.preloader.show();",
                "    setTimeout(() => {",
                "      self.$f7.preloader.hide();",
                "    }, 2000);",
                "  }",
                "  openDialog() {",
                "    const self = this;",
                "    self.$f7.dialog.preloader();",
                "    setTimeout(() => {",
                "      self.$f7.dialog.close();",
                "    }, 2000);",
                "  }",
                "  openCustomDialog() {",
                "    const self = this;",
                "    self.$f7.dialog.preloader('My text...');",
                "    setTimeout(() => {",
                "      self.$f7.dialog.close();",
                "    }, 2000);",
                "  }",
                "};"
            ]
        }
    ],
    "progressbar": [
        {
            "prefix": "f7:progressbar",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.setInlineProgress = this.setInlineProgress.bind(this);",
                "    this.showInfinite = this.showInfinite.bind(this);",
                "    this.showDeterminate = this.showDeterminate.bind(this);",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Progress Bar\"></Navbar>",
                "        <Block>",
                "          <p>In addition to <a href=\"/preloader/\">Preloader</a>, Framework7 also comes with fancy animated determinate and infinite/indeterminate progress bars to indicate some activity.</p>",
                "        </Block>",
                "        <BlockTitle>Determinate Progress Bar</BlockTitle>",
                "        <Block strong>",
                "          <p>When progress bar is determinate it indicates how long an operation will take when the percentage complete is detectable.</p>",
                "          <p>Inline determinate progress bar:</p>",
                "          <div>",
                "            <p><Progressbar progress={10} id=\"demo-inline-progressbar\"></Progressbar></p>",
                "            <Segmented raised>",
                "              <Button onClick={()=>{this.setInlineProgress(10)}}>10%</Button>",
                "              <Button onClick={()=>{this.setInlineProgress(30)}}>30%</Button>",
                "              <Button onClick={()=>{this.setInlineProgress(50)}}>50%</Button>",
                "              <Button onClick={()=>{this.setInlineProgress(100)}}>100%</Button>",
                "            </Segmented>",
                "          </div>",
                "          <div>",
                "            <p>Inline determinate load & hide:</p>",
                "            <p id=\"demo-determinate-container\"></p>",
                "            <p>",
                "              <Button raised onClick={()=>{this.showDeterminate(true)}}>Start Loading</Button>",
                "            </p>",
                "          </div>",
                "          <div>",
                "            <p>Overlay with determinate progress bar on top of the app:</p>",
                "            <p>",
                "              <Button raised onClick={()=>{this.showDeterminate(false)}}>Start Loading</Button>",
                "            </p>",
                "          </div>",
                "        </Block>",
                "        <BlockTitle>Infinite Progress Bar</BlockTitle>",
                "        <Block strong>",
                "          <p>When progress bar is infinite/indeterminate it requests that the user wait while something finishes when it’s not necessary to indicate how long it will take.</p>",
                "          <p>Inline infinite progress bar</p>",
                "          <p>",
                "            <Progressbar infinite></Progressbar>",
                "          </p>",
                "          <p>Multi-color infinite progress bar</p>",
                "          <p>",
                "            <Progressbar infinite color=\"multi\"></Progressbar>",
                "          </p>",
                "          <div>",
                "            <p>Overlay with infinite progress bar on top of the app</p>",
                "            <p id=\"demo-infinite-container\"></p>",
                "            <p>",
                "              <Button raised onClick={()=>{this.showInfinite(false)}}>Start Loading</Button>",
                "            </p>",
                "          </div>",
                "          <div>",
                "            <p>Overlay with infinite multi-color progress bar on top of the app</p>",
                "            <p>",
                "              <Button raised onClick={()=>{this.showInfinite(true)}}>Start Loading</Button>",
                "            </p>",
                "          </div>",
                "        </Block>",
                "        <BlockTitle>Colors</BlockTitle>",
                "        <List simpleList>",
                "          <ListItem>",
                "            <Progressbar color=\"blue\" progress={10}></Progressbar>",
                "          </ListItem>",
                "          <ListItem>",
                "            <Progressbar color=\"red\" progress={20}></Progressbar>",
                "          </ListItem>",
                "          <ListItem>",
                "            <Progressbar color=\"pink\" progress={30}></Progressbar>",
                "          </ListItem>",
                "          <ListItem>",
                "            <Progressbar color=\"green\" progress={80}></Progressbar>",
                "          </ListItem>",
                "          <ListItem>",
                "            <Progressbar color=\"yellow\" progress={90}></Progressbar>",
                "          </ListItem>",
                "          <ListItem>",
                "            <Progressbar color=\"orange\" progress={100}></Progressbar>",
                "          </ListItem>",
                "        </List>",
                "      </Page>",
                "    );",
                "  }",
                "  setInlineProgress(value) {",
                "    const self = this;",
                "    const app = self.$f7;",
                "    app.progressbar.set('#demo-inline-progressbar', value);",
                "  }",
                "  showDeterminate(inline) {",
                "    const self = this;",
                "    const app = self.$f7;",
                "    if (self.determinateLoading) return;",
                "    self.determinateLoading = true;",
                "    let progressBarEl;",
                "    if (inline) {",
                "      progressBarEl = app.progressbar.show('#demo-determinate-container', 0);",
                "    } else {",
                "      progressBarEl = app.progressbar.show(0, app.theme === 'md' ? 'yellow' : 'blue');",
                "    }",
                "    let progress = 0;",
                "    function simulateLoading() {",
                "      setTimeout(() => {",
                "        const progressBefore = progress;",
                "        progress += Math.random() * 20;",
                "        app.progressbar.set(progressBarEl, progress);",
                "        if (progressBefore < 100) {",
                "          simulateLoading(); // keep \"loading\"",
                "        } else {",
                "          self.determinateLoading = false;",
                "          app.progressbar.hide(progressBarEl); // hide",
                "        }",
                "      }, Math.random() * 200 + 200);",
                "    }",
                "    simulateLoading();",
                "  }",
                "  showInfinite(multiColor) {",
                "    const self = this;",
                "    const app = self.$f7;",
                "    if (self.infiniteLoading) return;",
                "    self.infiniteLoading = true;",
                "    if (multiColor) {",
                "      app.progressbar.show('multi');",
                "    } else {",
                "      app.progressbar.show(app.theme === 'md' ? 'yellow' : 'blue');",
                "    }",
                "    setTimeout(() => {",
                "      self.infiniteLoading = false;",
                "      app.progressbar.hide();",
                "    }, 3000);",
                "  }",
                "};"
            ]
        }
    ],
    "radio": [
        {
            "prefix": "f7:radio",
            "description": "",
            "body": [
                "<BlockTitle>Inline</BlockTitle>",
                "<Block strong>",
                "  <p>Lorem <Radio name=\"demo-radio-inline\" value=\"inline-1\"/> ipsum dolor sit amet, consectetur adipisicing elit. Alias beatae illo nihil aut eius commodi sint eveniet aliquid eligendi <Radio name=\"demo-radio-inline\" value=\"inline-2\" defaultChecked /> ad delectus impedit tempore nemo, enim vel praesentium consequatur nulla mollitia!</p>",
                "</Block>",
                "",
                "<BlockTitle>Radio Group</BlockTitle>",
                "<List>",
                "  <ListItem radio title=\"Books\" name=\"demo-radio\" value=\"Books\" defaultChecked></ListItem>",
                "  <ListItem radio title=\"Movies\" value=\"Movies\" name=\"demo-radio\"></ListItem>",
                "  <ListItem radio title=\"Food\" value=\"Food\" name=\"demo-radio\"></ListItem>",
                "  <ListItem radio title=\"Drinks\" value=\"Drinks\" name=\"demo-radio\"></ListItem>",
                "</List>",
                "",
                "",
                "<BlockTitle>With Media Lists</BlockTitle>",
                "<List mediaList>",
                "  <ListItem",
                "    radio",
                "    defaultChecked",
                "    name=\"demo-media-radio\"",
                "    value=\"1\"",
                "    title=\"Facebook\"",
                "    after=\"17:14\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    radio",
                "    name=\"demo-media-radio\"",
                "    value=\"2\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"17:11\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    radio",
                "    name=\"demo-media-radio\"",
                "    value=\"3\"",
                "    title=\"Facebook\"",
                "    after=\"16:48\"",
                "    subtitle=\"New messages from John Doe\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "  <ListItem",
                "    radio",
                "    name=\"demo-media-radio\"",
                "    value=\"4\"",
                "    title=\"John Doe (via Twitter)\"",
                "    after=\"15:32\"",
                "    subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "  ></ListItem>",
                "</List>"
            ]
        }
    ],
    "range-slider": [
        {
            "prefix": "f7:range-slider",
            "description": "",
            "body": [
                "        export default class extends React.Component {",
                "          constructor(props) {",
                "super(props);",
                "",
                "this.state = {",
                "  priceMin: 200,",
                "  priceMax: 400,",
                "}",
                "          }",
                "          render() {",
                "return (",
                "  <Page>",
                "    <Navbar title=\"Range Slider\"></Navbar>",
                "",
                "    <BlockTitle>Volume</BlockTitle>",
                "    <List simpleList>",
                "      <ListItem>",
                "        <ListItemCell className=\"width-auto flex-shrink-0\">",
                "          <Icon ios=\"f7:volume_mute_fill\" md=\"material:volume_mute\"></Icon>",
                "        </ListItemCell>",
                "        <ListItemCell className=\"flex-shrink-3\">",
                "          <Range",
                "            min={0}",
                "            max={100}",
                "            step={1}",
                "            value={10}",
                "          ></Range>",
                "        </ListItemCell>",
                "        <ListItemCell className=\"width-auto flex-shrink-0\">",
                "          <Icon ios=\"f7:volume_fill\" md=\"material:volume_up\"></Icon>",
                "        </ListItemCell>",
                "      </ListItem>",
                "    </List>",
                "",
                "    <BlockTitle>Brightness</BlockTitle>",
                "    <List simpleList>",
                "      <ListItem>",
                "        <ListItemCell className=\"width-auto flex-shrink-0\">",
                "          <Icon ios=\"f7:circle\" md=\"material:brightness_low\"></Icon>",
                "        </ListItemCell>",
                "        <ListItemCell className=\"flex-shrink-3\">",
                "          <Range",
                "            min={0}",
                "            max={100}",
                "            step={1}",
                "            value={50}",
                "            label={true}",
                "            color=\"orange\"",
                "          ></Range>",
                "        </ListItemCell>",
                "        <ListItemCell className=\"width-auto flex-shrink-0\">",
                "          <Icon ios=\"f7:circle_half\" md=\"material:brightness_high\"></Icon>",
                "        </ListItemCell>",
                "      </ListItem>",
                "    </List>",
                "",
                "    <BlockTitle className=\"display-flex justify-content-space-between\">Price Filter <span>${this.state.priceMin} - ${this.state.priceMax}</span></BlockTitle>",
                "    <List simpleList>",
                "      <ListItem>",
                "        <ListItemCell className=\"width-auto flex-shrink-0\">",
                "          <Icon ios=\"f7:money_dollar_round\" md=\"material:attach_money\"></Icon>",
                "        </ListItemCell>",
                "        <ListItemCell className=\"flex-shrink-3\">",
                "          <Range",
                "            min={0}",
                "            max={500}",
                "            step={1}",
                "            value={[this.state.priceMin, this.state.priceMax]}",
                "            label={true}",
                "            dual={true}",
                "            color=\"green\"",
                "            onRangeChange={this.onPriceChange.bind(this)}",
                "          ></Range>",
                "        </ListItemCell>",
                "        <ListItemCell className=\"width-auto flex-shrink-0\">",
                "          <Icon ios=\"f7:money_dollar_round_fill\" md=\"material:monetization_on\"></Icon>",
                "        </ListItemCell>",
                "      </ListItem>",
                "    </List>",
                "",
                "    <BlockTitle>With Scale</BlockTitle>",
                "    <Block strong>",
                "      <Range",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={5}",
                "        value={25}",
                "        scale={true}",
                "        scaleSteps={5}",
                "        scaleSubSteps={4}",
                "      />",
                "    </Block>",
                "",
                "    <BlockTitle>Vertical</BlockTitle>",
                "    <Block strong className=\"display-flex justify-content-center\">",
                "      <Range",
                "        className=\"margin-right\"",
                "        style={{height: '160px'}}",
                "        vertical={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={25}",
                "      />",
                "      <Range",
                "        className=\"margin-horizontal\"",
                "        style={{height: '160px'}}",
                "        vertical={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={50}",
                "      />",
                "      <Range",
                "        className=\"margin-horizontal\"",
                "        style={{height: '160px'}}",
                "        vertical={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={75}",
                "      />",
                "      <Range",
                "        className=\"margin-left\"",
                "        style={{height: '160px'}}",
                "        dual={true}",
                "        vertical={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={[25, 75]}",
                "      />",
                "    </Block>",
                "",
                "    <BlockTitle>Vertical Reversed</BlockTitle>",
                "    <Block strong className=\"display-flex justify-content-center\">",
                "      <Range",
                "        className=\"margin-right\"",
                "        color=\"red\"",
                "        style={{height: '160px'}}",
                "        vertical={true}",
                "        verticalReversed={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={25}",
                "      />",
                "      <Range",
                "        className=\"margin-horizontal\"",
                "        color=\"red\"",
                "        style={{height: '160px'}}",
                "        vertical={true}",
                "        verticalReversed={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={50}",
                "      />",
                "      <Range",
                "        className=\"margin-horizontal\"",
                "        color=\"red\"",
                "        style={{height: '160px'}}",
                "        vertical={true}",
                "        verticalReversed={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={75}",
                "      />",
                "      <Range",
                "        className=\"margin-left\"",
                "        color=\"red\"",
                "        style={{height: '160px'}}",
                "        dual={true}",
                "        vertical={true}",
                "        verticalReversed={true}",
                "        min={0}",
                "        max={100}",
                "        label={true}",
                "        step={1}",
                "        value={[25, 75]}",
                "      />",
                "    </Block>",
                "  </Page>",
                ")",
                "          }",
                "          onPriceChange(values) {",
                "this.setState({",
                "  priceMin: values[0],",
                "  priceMax: values[1],",
                "});",
                "          }",
                "        }"
            ]
        }
    ],
    "searchbar": [
        {
            "prefix": "f7:searchbar",
            "description": "(data-device-preview=\"../docs-demos/react/searchbar.html\") Usual Searchbar",
            "body": [
                "export default () => (",
                "  <Page>",
                "    <Navbar title=\"Searchbar\">",
                "      <Subnavbar inner={false}>",
                "        <Searchbar",
                "          searchContainer=\".search-list\"",
                "          searchIn=\".item-title\"",
                "        ></Searchbar>",
                "      </Subnavbar>",
                "    </Navbar>",
                "    <List className=\"searchbar-not-found\">",
                "      <ListItem title=\"Nothing found\" />",
                "    </List>",
                "    <List className=\"search-list searchbar-found\">",
                "      <ListItem title=\"Acura\" />",
                "      <ListItem title=\"Audi\" />",
                "      <ListItem title=\"BMW\" />",
                "      <ListItem title=\"Cadillac \" />",
                "      <ListItem title=\"Chevrolet \" />",
                "      <ListItem title=\"Chrysler \" />",
                "      <ListItem title=\"Dodge \" />",
                "      <ListItem title=\"Ferrari \" />",
                "      <ListItem title=\"Ford \" />",
                "      <ListItem title=\"GMC \" />",
                "      <ListItem title=\"Honda\" />",
                "      <ListItem title=\"Hummer\" />",
                "      <ListItem title=\"Hyundai\" />",
                "      <ListItem title=\"Infiniti \" />",
                "      <ListItem title=\"Isuzu \" />",
                "      <ListItem title=\"Jaguar \" />",
                "      <ListItem title=\"Jeep \" />",
                "      <ListItem title=\"Kia\" />",
                "      <ListItem title=\"Lamborghini \" />",
                "      <ListItem title=\"Land Rover\" />",
                "      <ListItem title=\"Lexus \" />",
                "      <ListItem title=\"Lincoln \" />",
                "      <ListItem title=\"Lotus \" />",
                "      <ListItem title=\"Mazda\" />",
                "      <ListItem title=\"Mercedes-Benz\" />",
                "      <ListItem title=\"Mercury \" />",
                "      <ListItem title=\"Mitsubishi\" />",
                "      <ListItem title=\"Nissan \" />",
                "      <ListItem title=\"Oldsmobile \" />",
                "      <ListItem title=\"Peugeot \" />",
                "      <ListItem title=\"Pontiac \" />",
                "      <ListItem title=\"Porsche\" />",
                "      <ListItem title=\"Regal\" />",
                "      <ListItem title=\"Saab \" />",
                "      <ListItem title=\"Saturn \" />",
                "      <ListItem title=\"Subaru \" />",
                "      <ListItem title=\"Suzuki \" />",
                "      <ListItem title=\"Toyota\" />",
                "      <ListItem title=\"Volkswagen\" />",
                "      <ListItem title=\"Volvo\" />",
                "    </List>",
                "  </Page>",
                ");"
            ]
        },
        {
            "prefix": "f7:searchbar",
            "description": "(data-device-preview=\"../docs-demos/react/searchbar-expandable.html\") Expandable Searchbar",
            "body": [
                "export default () => (",
                "  <Page>",
                "    <Navbar title=\"Searchbar\">",
                "      <NavRight>",
                "        <Link searchbarEnable=\".searchbar-demo\" iconIos=\"f7:search_strong\" iconMd=\"material:search\"></Link>",
                "      </NavRight>",
                "      <Searchbar",
                "        className=\"searchbar-demo\"",
                "        expandable",
                "        searchContainer=\".search-list\"",
                "        searchIn=\".item-title\"",
                "      ></Searchbar>",
                "    </Navbar>",
                "    <List className=\"searchbar-not-found\">",
                "      <ListItem title=\"Nothing found\" />",
                "    </List>",
                "    <List className=\"search-list searchbar-found\">",
                "      <ListItem title=\"Acura\" />",
                "      <ListItem title=\"Audi\" />",
                "      <ListItem title=\"BMW\" />",
                "      <ListItem title=\"Cadillac \" />",
                "      <ListItem title=\"Chevrolet \" />",
                "      <ListItem title=\"Chrysler \" />",
                "      <ListItem title=\"Dodge \" />",
                "      <ListItem title=\"Ferrari \" />",
                "      <ListItem title=\"Ford \" />",
                "      <ListItem title=\"GMC \" />",
                "      <ListItem title=\"Honda\" />",
                "      <ListItem title=\"Hummer\" />",
                "      <ListItem title=\"Hyundai\" />",
                "      <ListItem title=\"Infiniti \" />",
                "      <ListItem title=\"Isuzu \" />",
                "      <ListItem title=\"Jaguar \" />",
                "      <ListItem title=\"Jeep \" />",
                "      <ListItem title=\"Kia\" />",
                "      <ListItem title=\"Lamborghini \" />",
                "      <ListItem title=\"Land Rover\" />",
                "      <ListItem title=\"Lexus \" />",
                "      <ListItem title=\"Lincoln \" />",
                "      <ListItem title=\"Lotus \" />",
                "      <ListItem title=\"Mazda\" />",
                "      <ListItem title=\"Mercedes-Benz\" />",
                "      <ListItem title=\"Mercury \" />",
                "      <ListItem title=\"Mitsubishi\" />",
                "      <ListItem title=\"Nissan \" />",
                "      <ListItem title=\"Oldsmobile \" />",
                "      <ListItem title=\"Peugeot \" />",
                "      <ListItem title=\"Pontiac \" />",
                "      <ListItem title=\"Porsche\" />",
                "      <ListItem title=\"Regal\" />",
                "      <ListItem title=\"Saab \" />",
                "      <ListItem title=\"Saturn \" />",
                "      <ListItem title=\"Subaru \" />",
                "      <ListItem title=\"Suzuki \" />",
                "      <ListItem title=\"Toyota\" />",
                "      <ListItem title=\"Volkswagen\" />",
                "      <ListItem title=\"Volvo\" />",
                "    </List>",
                "  </Page>",
                ");"
            ]
        }
    ],
    "sheet-modal": [
        {
            "prefix": "f7:sheet-modal",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      sheetOpened: false,",
                "    };",
                "  }",
                "  render() {",
                "    return (",
                "      <Page onPageBeforeOut={this.onPageBeforeOut.bind(this)} onPageBeforeRemove={this.onPageBeforeRemove.bind(this)}>",
                "        <Navbar title=\"Sheet Modal\"></Navbar>",
                "",
                "        <Block>",
                "          <Row tag=\"p\">",
                "            <Button className=\"col\" raised sheetOpen=\".demo-sheet\">Open Sheet</Button>",
                "            <Button className=\"col\" raised onClick={this.createSheet.bind(this)}>Create Dynamic Sheet</Button>",
                "          </Row>",
                "          <p>",
                "            <Button className=\"col\" raised onClick={() => {this.setState({sheetOpened: true})}}>Open Via Prop Change</Button>",
                "          </p>",
                "        </Block>",
                "",
                "        <Sheet className=\"demo-sheet\" opened={this.state.sheetOpened} onSheetClosed={() => {this.setState({sheetOpened: false})}}>",
                "          <Toolbar>",
                "            <div className=\"left\"></div>",
                "            <div className=\"right\">",
                "              <Link sheetClose>Close</Link>",
                "            </div>",
                "          </Toolbar>",
                "          {/*  Scrollable sheet content */}",
                "          <PageContent>",
                "            <Block>",
                "              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae ducimus dolorum ipsa aliquid accusamus perferendis laboriosam delectus numquam minima animi, libero illo in tempora harum sequi corporis alias ex adipisci.</p>",
                "              <p>Sunt magni enim saepe quasi aspernatur delectus consectetur fugiat necessitatibus qui sed, similique quis facere tempora, laudantium quae expedita ea, aperiam dolores. Aut deserunt soluta alias magnam. Consequatur, nisi, enim.</p>",
                "              <p>Eaque maiores ducimus, impedit unde culpa qui, explicabo accusamus, non vero corporis voluptatibus similique odit ab. Quaerat quasi consectetur quidem libero? Repudiandae adipisci vel voluptatum, autem libero minus dignissimos repellat.</p>",
                "              <p>Iusto, est corrupti! Totam minus voluptas natus esse possimus nobis, delectus veniam expedita sapiente ut cum reprehenderit aliquid odio amet praesentium vero temporibus obcaecati beatae aspernatur incidunt, perferendis voluptates doloribus?</p>",
                "              <p>Illum id laborum tempore, doloribus culpa labore ex iusto odit. Quibusdam consequuntur totam nam obcaecati, enim cumque nobis, accusamus, quos voluptates, voluptatibus sapiente repellendus nesciunt praesentium velit ipsa illo iusto.</p>",
                "            </Block>",
                "          </PageContent>",
                "        </Sheet>",
                "      </Page>",
                "    );",
                "  }",
                "  createSheet() {",
                "    const self = this;",
                "    const $ = self.$$;",
                "    // Create sheet modal",
                "    if (!self.sheet) {",
                "      self.sheet = self.$f7.sheet.create({",
                "        content: `",
                "          <div class=\"sheet-modal\">",
                "            <div class=\"toolbar\">",
                "              <div class=\"toolbar-inner justify-content-flex-end\">",
                "                <a href=\"#\" class=\"link sheet-close\">Close</a>",
                "              </div>",
                "            </div>",
                "            <div class=\"sheet-modal-inner\">",
                "              <div class=\"page-content\">",
                "                <div class=\"block\">",
                "                  <p>This sheet modal was created dynamically</p>",
                "                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse faucibus mauris leo, eu bibendum neque congue non. Ut leo mauris, eleifend eu commodo a, egestas ac urna. Maecenas in lacus faucibus, viverra ipsum pulvinar, molestie arcu. Etiam lacinia venenatis dignissim. Suspendisse non nisl semper tellus malesuada suscipit eu et eros. Nulla eu enim quis quam elementum vulputate. Mauris ornare consequat nunc viverra pellentesque. Aenean semper eu massa sit amet aliquam. Integer et neque sed libero mollis elementum at vitae ligula. Vestibulum pharetra sed libero sed porttitor. Suspendisse a faucibus lectus.</p>",
                "                </div>",
                "              </div>",
                "            </div>",
                "          </div>",
                "        `.trim(),",
                "      });",
                "    }",
                "    // Close inline sheet",
                "    if ($('.demo-sheet.modal-in').length > 0) self.$f7.sheet.close('.demo-sheet');",
                "    // Open it",
                "    self.sheet.open();",
                "  }",
                "  onPageBeforeOut() {",
                "    const self = this;",
                "    // Close opened sheets on page out",
                "    self.$f7.sheet.close();",
                "  }",
                "  onPageBeforeRemove() {",
                "    const self = this;",
                "    // Destroy sheet modal when page removed",
                "    if (self.sheet) self.sheet.destroy();",
                "  }",
                "};"
            ]
        }
    ],
    "skeleton": [
        {
            "prefix": "f7:skeleton",
            "description": "",
            "body": [
                "        class AppComponent extends React.Component {",
                "          constructor() {",
                "super();",
                "",
                "this.state = {",
                "  loading: false,",
                "  effect: null,",
                "};",
                "          }",
                "          load(effect) {",
                "var self = this;",
                "if (self.state.loading) return;",
                "self.setState({",
                "  effect: effect,",
                "  loading: true,",
                "});",
                "setTimeout(() => {",
                "  self.setState({ loading: false });",
                "}, 3000);",
                "          }",
                "          render() {",
                "return (",
                "  <App>",
                "    <View main>",
                "      <Page>",
                "        <Navbar title=\"Menu\" />",
                "",
                "        <BlockTitle>Skeleton List</BlockTitle>",
                "        <List mediaList className=\"skeleton-text\">",
                "          <ListItem",
                "            title=\"Title\"",
                "            subtitle=\"Subtitle\"",
                "            text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi lobortis et massa ac interdum.\"",
                "          >",
                "            <SkeletonBlock style={{ width: '40px', height: '40px', 'border-radius': '50%' }} slot=\"media\" />",
                "          </ListItem>",
                "          <ListItem",
                "            title=\"Title\"",
                "            subtitle=\"Subtitle\"",
                "            text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi lobortis et massa ac interdum.\"",
                "          >",
                "            <SkeletonBlock style={{ width: '40px', height: '40px', 'border-radius': '50%' }} slot=\"media\" />",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>Skeleton Card</BlockTitle>",
                "        <Card",
                "          className=\"skeleton-text\"",
                "          title=\"Card Header\"",
                "          content=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.\"",
                "          footer=\"Card Footer\"",
                "        ></Card>",
                "",
                "        <BlockTitle>Loading Effects</BlockTitle>",
                "        <Block strong>",
                "          <Row tag=\"p\">",
                "            <Button fill small round className=\"col\" onClick={() => this.load('fade')}>Fade</Button>",
                "            <Button fill small round className=\"col\" onClick={() => this.load('blink')}>Blink</Button>",
                "            <Button fill small round className=\"col\" onClick={() => this.load('pulse')}>Pulse</Button>",
                "          </Row>",
                "        </Block>",
                "        {this.state.loading",
                "          ? (",
                "            <List mediaList v-if=\"loading\">",
                "              {[1,2,3].map(n => (",
                "                <ListItem",
                "                  key={n}",
                "                  className={`skeleton-text skeleton-effect-${this.state.effect}`}",
                "                  title=\"Full Name\"",
                "                  subtitle=\"Position\"",
                "                  text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit. Aliquam vestibulum vitae lorem ac iaculis. Praesent nec pharetra massa, at blandit lectus. Sed tincidunt, lectus eu convallis elementum, nibh nisi aliquet urna, nec imperdiet felis sapien at enim.\"",
                "                >",
                "                  <SkeletonBlock style={{ width: '40px', height: '40px', 'border-radius': '50%' }} slot=\"media\" />",
                "                </ListItem>",
                "              ))}",
                "            </List>",
                "          )",
                "          : (",
                "            <List mediaList>",
                "              <ListItem",
                "                title=\"John Doe\"",
                "                subtitle=\"CEO\"",
                "                text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit. Aliquam vestibulum vitae lorem ac iaculis. Praesent nec pharetra massa, at blandit lectus. Sed tincidunt, lectus eu convallis elementum, nibh nisi aliquet urna, nec imperdiet felis sapien at enim.\"",
                "              >",
                "                <img src=\"https://placeimg.com/80/80/people/1\" style={{ width: '40px', height: '40px', 'border-radius': '50%' }} slot=\"media\" />",
                "              </ListItem>",
                "              <ListItem",
                "                title=\"Jane Doe\"",
                "                subtitle=\"Marketing\"",
                "                text=\"Cras consequat felis at consequat hendrerit. Aliquam vestibulum vitae lorem ac iaculis. Praesent nec pharetra massa, at blandit lectus. Sed tincidunt, lectus eu convallis elementum, nibh nisi aliquet urna, nec imperdiet felis sapien at enim.\"",
                "              >",
                "                <img src=\"https://placeimg.com/80/80/people/2\" style={{ width: '40px', height: '40px', 'border-radius': '50%' }} slot=\"media\" />",
                "              </ListItem>",
                "              <ListItem",
                "                title=\"Kate Johnson\"",
                "                subtitle=\"Admin\"",
                "                text=\"Sed tincidunt, lectus eu convallis elementum, nibh nisi aliquet urna, nec imperdiet felis sapien at enim.\"",
                "              >",
                "                <img src=\"https://placeimg.com/80/80/people/3\" style={{ width: '40px', height: '40px', 'border-radius': '50%' }} slot=\"media\" />",
                "              </ListItem>",
                "            </List>",
                "          )",
                "        }",
                "      </Page>",
                "    </View>",
                "  </App>",
                ")",
                "          }",
                "        }"
            ]
        }
    ],
    "smart-select": [
        {
            "prefix": "f7:smart-select",
            "description": "",
            "body": [
                "<List>",
                "",
                "  <ListItem",
                "    title=\"Fruit\"",
                "    smartSelect",
                "  >",
                "    <select name=\"fruits\" defaultValue=\"apple\">",
                "      <option value=\"apple\">Apple</option>",
                "      <option value=\"pineapple\">Pineapple</option>",
                "      <option value=\"pear\">Pear</option>",
                "      <option value=\"orange\">Orange</option>",
                "      <option value=\"melon\">Melon</option>",
                "      <option value=\"peach\">Peach</option>",
                "      <option value=\"banana\">Banana</option>",
                "    </select>",
                "  </ListItem>",
                "",
                "  <ListItem",
                "    title=\"Car\"",
                "    smartSelect",
                "    smartSelectParams={{openIn: 'popup', searchbar: true, searchbarPlaceholder: 'Search car'}}",
                "  >",
                "    <select name=\"car\" multiple defaultValue={['honda', 'audi', 'ford']}>",
                "      <optgroup label=\"Japanese\">",
                "        <option value=\"honda\">Honda</option>",
                "        <option value=\"lexus\">Lexus</option>",
                "        <option value=\"mazda\">Mazda</option>",
                "        <option value=\"nissan\">Nissan</option>",
                "        <option value=\"toyota\">Toyota</option>",
                "      </optgroup>",
                "      <optgroup label=\"German\">",
                "        <option value=\"audi\">Audi</option>",
                "        <option value=\"bmw\">BMW</option>",
                "        <option value=\"mercedes\">Mercedes</option>",
                "        <option value=\"vw\">Volkswagen</option>",
                "        <option value=\"volvo\">Volvo</option>",
                "      </optgroup>",
                "      <optgroup label=\"American\">",
                "        <option value=\"cadillac\">Cadillac</option>",
                "        <option value=\"chrysler\">Chrysler</option>",
                "        <option value=\"dodge\">Dodge</option>",
                "        <option value=\"ford\">Ford</option>",
                "      </optgroup>",
                "    </select>",
                "  </ListItem>",
                "",
                "  <ListItem",
                "    title=\"Mac or Windows\"",
                "    smartSelect",
                "    smartSelectParams={{openIn: 'sheet'}}",
                "  >",
                "    <select name=\"mac-windows\" defaultValue=\"mac\">",
                "      <option value=\"mac\">Mac</option>",
                "      <option value=\"windows\">Windows</option>",
                "    </select>",
                "  </ListItem>",
                "",
                "  <ListItem",
                "    title=\"Super Hero\"",
                "    smartSelect",
                "    smartSelectParams={{openIn: 'popover'}}",
                "  >",
                "    <select name=\"superhero\" multiple defaultValue={['Batman']}>",
                "      <option value=\"Batman\">Batman</option>",
                "      <option value=\"Superman\">Superman</option>",
                "      <option value=\"Hulk\">Hulk</option>",
                "      <option value=\"Spiderman\">Spiderman</option>",
                "      <option value=\"Ironman\">Ironman</option>",
                "      <option value=\"Thor\">Thor</option>",
                "      <option value=\"Wonder Woman\">Wonder Woman</option>",
                "    </select>",
                "  </ListItem>",
                "</List>"
            ]
        }
    ],
    "sortable": [
        {
            "prefix": "f7:sortable",
            "description": "",
            "body": [
                "export default () => (",
                "  <Page>",
                "    <Navbar title=\"Sortable List\">",
                "      <NavRight>",
                "        <Link sortableToggle=\".sortable\">Toggle</Link>",
                "      </NavRight>",
                "    </Navbar>",
                "",
                "    <Block>",
                "      <p>Just click \"Toggle\" button on navigation bar to enable/disable sorting</p>",
                "    </Block>",
                "    <List sortable>",
                "      <ListItem",
                "        title=\"1 Jenna Smith\"",
                "        after=\"CEO\">",
                "        <Icon icon=\"icon-f7\" slot=\"media\"></Icon>",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"2 John Doe\"",
                "        after=\"Director\">",
                "        <Icon icon=\"icon-f7\" slot=\"media\"></Icon>",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"3 John Doe\"",
                "        after=\"Developer\">",
                "        <Icon icon=\"icon-f7\" slot=\"media\"></Icon>",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"4 Aaron Darling\"",
                "        after=\"Manager\">",
                "        <Icon icon=\"icon-f7\" slot=\"media\"></Icon>",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"5 Calvin Johnson\"",
                "        after=\"Accounter\">",
                "        <Icon icon=\"icon-f7\" slot=\"media\"></Icon>",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"6 John Smith\"",
                "        after=\"SEO\">",
                "        <Icon icon=\"icon-f7\" slot=\"media\"></Icon>",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"7 Chloe\"",
                "        after=\"Manager\">",
                "        <Icon icon=\"icon-f7\" slot=\"media\"></Icon>",
                "      </ListItem>",
                "    </List>",
                "    <List mediaList sortable>",
                "      <ListItem",
                "        title=\"Yellow Submarine\"",
                "        after=\"$15\"",
                "        subtitle=\"Beatles\"",
                "        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "        >",
                "        <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-1.jpg\" width=\"80\" />",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"Don't Stop Me Now\"",
                "        after=\"$22\"",
                "        subtitle=\"Queen\"",
                "        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "        >",
                "        <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-2.jpg\" width=\"80\" />",
                "      </ListItem>",
                "      <ListItem",
                "        title=\"Billie Jean\"",
                "        after=\"$16\"",
                "        subtitle=\"Michael Jackson\"",
                "        text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "        >",
                "        <img slot=\"media\" src=\"https://cdn.framework7.io/placeholder/people-160x160-3.jpg\" width=\"80\" />",
                "      </ListItem>",
                "    </List>",
                "  </Page>",
                ");"
            ]
        }
    ],
    "statusbar": [
        {
            "prefix": "f7:statusbar",
            "description": "",
            "body": [
                "          &lt;App&gt;",
                "{/* Should be placed as the first child in the app root */}",
                "&lt;Statusbar&gt;&lt;/Statusbar&gt;",
                "...",
                "          &lt;/App&gt;",
                "    p Renders to:",
                "          &lt;div class=\"framework7-root\"&gt;",
                "&lt;div class=\"statusbar\"&gt;&lt;/div&gt;",
                "...",
                "          &lt;/div&gt;"
            ]
        }
    ],
    "stepper": [
        {
            "prefix": "f7:stepper",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    this.state = {",
                "      applesCount: 0,",
                "      orangesCount: 0,",
                "      meetingTime: 15,",
                "    };",
                "  }",
                "  get meetingTimeComputed() {",
                "    const self = this;",
                "    const value = self.state.meetingTime;",
                "",
                "    const hours = Math.floor(value / 60);",
                "    const minutes = value - (hours * 60);",
                "    const formatted = [];",
                "    if (hours > 0) {",
                "      formatted.push(hours + ' ' + (hours > 1 ? 'hours' : 'hour'));",
                "    }",
                "    if (minutes > 0) {",
                "      formatted.push(minutes + ' minutes');",
                "    }",
                "    return formatted.join(' ');",
                "  }",
                "  setApples(value) {",
                "    this.setState({ applesCount: value });",
                "  }",
                "  setOranges(value) {",
                "    this.setState({ orangesCount: value });",
                "  }",
                "  setMeetingTime(value) {",
                "    this.setState({ meetingTime: value });",
                "  }",
                "  render () {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Stepper\"></Navbar>",
                "",
                "        <BlockTitle>Shape and size</BlockTitle>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <small className=\"display-block\">Default</small>",
                "              <Stepper></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Round</small>",
                "              <Stepper round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Fill</small>",
                "              <Stepper fill></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Round Fill</small>",
                "              <Stepper fill round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Small</small>",
                "              <Stepper small></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Small Round</small>",
                "              <Stepper small round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Small Fill</small>",
                "              <Stepper small fill></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Small Round Fill</small>",
                "              <Stepper small round fill></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Large</small>",
                "              <Stepper large></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Large Round</small>",
                "              <Stepper large round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Large Fill</small>",
                "              <Stepper large fill></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Large Round Fill</small>",
                "              <Stepper large round fill></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "",
                "        <BlockTitle>Raised</BlockTitle>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <small className=\"display-block\">Default</small>",
                "              <Stepper raised></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Round</small>",
                "              <Stepper raised round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Fill</small>",
                "              <Stepper raised fill></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Round Fill</small>",
                "              <Stepper raised fill round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Small</small>",
                "              <Stepper raised small></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Small Round</small>",
                "              <Stepper raised small round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Small Fill</small>",
                "              <Stepper raised small fill></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Small Round Fill</small>",
                "              <Stepper raised small round fill></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Large</small>",
                "              <Stepper raised large></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Large Round</small>",
                "              <Stepper raised large round></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <small className=\"display-block\">Large Fill</small>",
                "              <Stepper raised large fill></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Large Round Fill</small>",
                "              <Stepper raised large round fill></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "        <BlockTitle>Colors</BlockTitle>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <Stepper fill color=\"red\"></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <Stepper fill round color=\"green\"></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <Stepper fill color=\"blue\"></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <Stepper fill round color=\"pink\"></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <Stepper fill small color=\"yellow\"></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <Stepper fill small round color=\"orange\"></Stepper>",
                "            </Col>",
                "          </Row>",
                "",
                "          <Row className=\"margin-top\">",
                "            <Col>",
                "              <Stepper fill small color=\"gray\"></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <Stepper fill small round color=\"black\"></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "        <BlockTitle>Without input element</BlockTitle>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <Stepper input={false}></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <Stepper input={false} round></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "        <BlockTitle>Min, max, step</BlockTitle>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <Stepper value={100} min={0} max={1000} step={100}></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <Stepper input={false} value={5} min={0} max={10} step={0.5}></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "",
                "        <BlockTitle>Autorepeat (Tap & hold)</BlockTitle>",
                "        <BlockHeader>Pressing and holding one of its buttons increments or decrements the stepper’s value repeatedly. With dynamic autorepeat, the rate of change depends on how long the user continues pressing the control.</BlockHeader>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <small className=\"display-block\">Default</small>",
                "              <Stepper value={0} min={0} max={100} step={1} autorepeat={true}></Stepper>",
                "            </Col>",
                "            <Col>",
                "              <small className=\"display-block\">Dynamic</small>",
                "              <Stepper value={0} min={0} max={100} step={1} autorepeat={true} autorepeatDynamic={true}></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "",
                "        <BlockTitle>Wraps</BlockTitle>",
                "        <BlockHeader>In wraps mode incrementing beyond maximum value sets value to minimum value, likewise, decrementing below minimum value sets value to maximum value</BlockHeader>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <Stepper value={0} min={0} max={10} step={1} autorepeat={true} wraps={true}></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "",
                "        <BlockTitle>Custom value element</BlockTitle>",
                "        <List>",
                "          <ListItem title={`Apples ${this.state.applesCount}`}>",
                "            <Stepper buttonsOnly={true} small raised slot=\"after\" onStepperChange={this.setApples.bind(this)}></Stepper>",
                "          </ListItem>",
                "          <ListItem title={`Oranges ${this.state.orangesCount}`}>",
                "            <Stepper buttonsOnly={true} small raised slot=\"after\" onStepperChange={this.setOranges.bind(this)}></Stepper>",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>Custom value format</BlockTitle>",
                "        <List>",
                "          <ListItem header=\"Meeting starts in\" title={this.meetingTimeComputed}>",
                "            <Stepper",
                "              min={15}",
                "              max={240}",
                "              step={15}",
                "              value={this.state.meetingTime}",
                "              buttonsOnly={true}",
                "              small",
                "              slot=\"after\"",
                "              onStepperChange={this.setMeetingTime.bind(this)}",
                "            ></Stepper>",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>Manual input</BlockTitle>",
                "        <BlockHeader>It is possible to enter value manually from keyboard or mobile keypad. When click on input field, stepper enter into manual input mode, which allow type value from keyboar and check fractional part with defined accurancy. Click outside or enter Return key, ending manual mode.</BlockHeader>",
                "        <Block strong className=\"text-align-center\">",
                "          <Row>",
                "            <Col>",
                "              <Stepper fill value={0} min={0} max={1000} step={1} autorepeat={true} wraps={true} manualInputMode={true} decimalPoint={2}></Stepper>",
                "            </Col>",
                "          </Row>",
                "        </Block>",
                "      </Page>",
                "    );",
                "  }",
                "}"
            ]
        }
    ],
    "subnavbar": [
        {
            "prefix": "f7:subnavbar",
            "description": "",
            "body": [
                "export default () => (",
                "  <Page pageContent={false}>",
                "    <Navbar title=\"Subnavbar\">",
                "      <Subnavbar>",
                "        <Segmented raised>",
                "          <Button tabLink=\"#tab1\" tabLinkActive>Tab 1</Button>",
                "          <Button tabLink=\"#tab2\">Tab 2</Button>",
                "        </Segmented>",
                "      </Subnavbar>",
                "    </Navbar>",
                "    <Tabs>",
                "      <Tab id=\"tab1\" tabActive className=\"page-content\">",
                "        <Block>",
                "          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nisi nisi, tincidunt ut eleifend non, sagittis a elit. Sed consequat odio at leo varius viverra...</p>",
                "        </Block>",
                "      </Tab>",
                "      <Tab id=\"tab2\" className=\"page-content\">",
                "        <Block>",
                "          <p>Donec iaculis posuere massa sed dignissim. Praesent id nibh nec massa mollis egestas. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas...</p>",
                "        </Block>",
                "      </Tab>",
                "    </Tabs>",
                "  </Page>",
                ")"
            ]
        }
    ],
    "swipeout": [
        {
            "prefix": "f7:swipeout",
            "description": "",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "  }",
                "  more() {",
                "    const self = this;",
                "    self.actions.open();",
                "  }",
                "  mark() {",
                "    const app = this.$f7;",
                "    app.dialog.alert('Mark');",
                "  }",
                "  reply() {",
                "    const app = this.$f7;",
                "    app.dialog.alert('Reply');",
                "  }",
                "  forward() {",
                "    const app = this.$f7;",
                "    app.dialog.alert('Forward');",
                "  }",
                "  onDeleted() {",
                "    const app = this.$f7;",
                "    app.dialog.alert('Thanks, item removed!');",
                "  }",
                "  onPageBeforeRemove() {",
                "    const self = this;",
                "    self.actions.destroy();",
                "  }",
                "  onPageInit() {",
                "    const self = this;",
                "    const app = self.$f7;",
                "    self.actions = app.actions.create({",
                "      buttons: [",
                "        [",
                "          {",
                "            text: 'Here comes some optional description or warning for actions below',",
                "            label: true,",
                "          },",
                "          {",
                "            text: 'Action 1',",
                "          },",
                "          {",
                "            text: 'Action 2',",
                "          },",
                "        ],",
                "        [",
                "          {",
                "            text: 'Cancel',",
                "            bold: true,",
                "          },",
                "        ],",
                "      ],",
                "    });",
                "  }",
                "  render () {",
                "    return (",
                "      <Page onPageBeforeRemove={this.onPageBeforeRemove.bind(this)} onPageInit={this.onPageInit.bind(this)}>",
                "        <Navbar title=\"Swipeout\"></Navbar>",
                "",
                "        <Block>",
                "          <p>",
                "            Swipe out actions on list elements is one of the most awesome F7 features. It allows you to call hidden menu for each list element where you can put default ready-to use delete button or any other buttons for some required actions.",
                "          </p>",
                "        </Block>",
                "",
                "        <BlockTitle>Swipe to delete with confirm modal</BlockTitle>",
                "        <List>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe left on me please\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton delete confirmText=\"Are you sure you want to delete this item?\">Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe left on me too\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton delete confirmText=\"Are you sure you want to delete this item?\">Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            title=\"I am not removable\">",
                "",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>Swipe to delete without confirm</BlockTitle>",
                "        <List>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe left on me please\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton delete>Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe left on me too\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton delete>Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            title=\"I am not removable\">",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>Swipe for actions</BlockTitle>",
                "        <List>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe left on me please\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton onClick={this.more.bind(this)}>More</SwipeoutButton>",
                "              <SwipeoutButton delete>Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe left on me too\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton onClick={this.more.bind(this)}>More</SwipeoutButton>",
                "              <SwipeoutButton delete>Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"You can't delete me\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton onClick={this.more.bind(this)}>More</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>With callback on remove</BlockTitle>",
                "        <List>",
                "          <ListItem",
                "            swipeout",
                "            onSwipeoutDeleted={this.onDeleted.bind(this)}",
                "            title=\"Swipe left on me please\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton delete>Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            onSwipeoutDeleted={this.onDeleted.bind(this)}",
                "            title=\"Swipe left on me too\">",
                "",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton delete>Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            title=\"I am not removable\">",
                "",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>With actions on left side (swipe to right)</BlockTitle>",
                "        <List>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe right on me please\">",
                "",
                "            <SwipeoutActions left>",
                "              <SwipeoutButton color=\"green\" onClick={this.reply.bind(this)}>Reply</SwipeoutButton>",
                "              <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>Forward</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Swipe right on me too\">",
                "",
                "            <SwipeoutActions left>",
                "              <SwipeoutButton color=\"green\" onClick={this.reply.bind(this)}>Reply</SwipeoutButton>",
                "              <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>Forward</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "        </List>",
                "",
                "        <BlockTitle>On both sides with overswipes</BlockTitle>",
                "        <List mediaList>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Facebook\"",
                "            after=\"17:14\"",
                "            subtitle=\"New messages from John Doe\"",
                "            text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "          >",
                "            <SwipeoutActions left>",
                "              <SwipeoutButton overswipe color=\"green\" onClick={this.reply.bind(this)}>Reply</SwipeoutButton>",
                "              <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>Forward</SwipeoutButton>",
                "            </SwipeoutActions>",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton onClick={this.more.bind(this)}>More</SwipeoutButton>",
                "              <SwipeoutButton color=\"orange\" onClick={this.mark.bind(this)}>Mark</SwipeoutButton>",
                "              <SwipeoutButton delete overswipe confirmText=\"Are you sure you want to delete this item?\">Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"John Doe (via Twitter)\"",
                "            after=\"17:11\"",
                "            subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "            text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "          >",
                "            <SwipeoutActions left>",
                "              <SwipeoutButton overswipe color=\"green\" onClick={this.reply.bind(this)}>Reply</SwipeoutButton>",
                "              <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>Forward</SwipeoutButton>",
                "            </SwipeoutActions>",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton onClick={this.more.bind(this)}>More</SwipeoutButton>",
                "              <SwipeoutButton color=\"orange\" onClick={this.mark.bind(this)}>Mark</SwipeoutButton>",
                "              <SwipeoutButton delete overswipe confirmText=\"Are you sure you want to delete this item?\">Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"Facebook\"",
                "            after=\"16:48\"",
                "            subtitle=\"New messages from John Doe\"",
                "            text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "          >",
                "            <SwipeoutActions left>",
                "              <SwipeoutButton overswipe color=\"green\" onClick={this.reply.bind(this)}>Reply</SwipeoutButton>",
                "              <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>Forward</SwipeoutButton>",
                "            </SwipeoutActions>",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton onClick={this.more.bind(this)}>More</SwipeoutButton>",
                "              <SwipeoutButton color=\"orange\" onClick={this.mark.bind(this)}>Mark</SwipeoutButton>",
                "              <SwipeoutButton delete overswipe confirmText=\"Are you sure you want to delete this item?\">Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "          <ListItem",
                "            swipeout",
                "            title=\"John Doe (via Twitter)\"",
                "            after=\"15:32\"",
                "            subtitle=\"John Doe (@_johndoe) mentioned you on Twitter!\"",
                "            text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sagittis tellus ut turpis condimentum, ut dignissim lacus tincidunt. Cras dolor metus, ultrices condimentum sodales sit amet, pharetra sodales eros. Phasellus vel felis tellus. Mauris rutrum ligula nec dapibus feugiat. In vel dui laoreet, commodo augue id, pulvinar lacus.\"",
                "          >",
                "            <SwipeoutActions left>",
                "              <SwipeoutButton overswipe color=\"green\" onClick={this.reply.bind(this)}>Reply</SwipeoutButton>",
                "              <SwipeoutButton color=\"blue\" onClick={this.forward.bind(this)}>Forward</SwipeoutButton>",
                "            </SwipeoutActions>",
                "            <SwipeoutActions right>",
                "              <SwipeoutButton onClick={this.more.bind(this)}>More</SwipeoutButton>",
                "              <SwipeoutButton color=\"orange\" onClick={this.mark.bind(this)}>Mark</SwipeoutButton>",
                "              <SwipeoutButton delete overswipe confirmText=\"Are you sure you want to delete this item?\">Delete</SwipeoutButton>",
                "            </SwipeoutActions>",
                "          </ListItem>",
                "        </List>",
                "      </Page>",
                "    );",
                "  }",
                "};"
            ]
        }
    ],
    "swiper": [
        {
            "prefix": "f7:swiper",
            "description": "Minimal layout",
            "body": [
                "<Swiper>",
                "  <SwiperSlide>Slide 1</SwiperSlide>",
                "  <SwiperSlide>Slide 2</SwiperSlide>",
                "  <SwiperSlide>Slide 3</SwiperSlide>",
                "</Swiper>"
            ]
        },
        {
            "prefix": "f7:swiper",
            "description": "With all controls",
            "body": [
                "<Swiper pagination navigation scrollbar>",
                "  <SwiperSlide>Slide 1</SwiperSlide>",
                "  <SwiperSlide>Slide 2</SwiperSlide>",
                "  <SwiperSlide>Slide 3</SwiperSlide>",
                "</Swiper>"
            ]
        },
        {
            "prefix": "f7:swiper",
            "description": "With additional parameters",
            "body": [
                "      p You can pass any additional <a href=\"http://idangero.us/swiper/api\" target=\"_blank\">Swiper API</a> parameters using <code>params</code> property:",
                "<Swiper navigation params={{speed:500, slidesPerView: 3, spaceBetween: 20}}>",
                "  <SwiperSlide>Slide 1</SwiperSlide>",
                "  <SwiperSlide>Slide 2</SwiperSlide>",
                "  <SwiperSlide>Slide 3</SwiperSlide>",
                "</Swiper>"
            ]
        }
    ],
    "tabs": [
        {
            "prefix": "f7:tabs",
            "description": "h3 Static Tabs",
            "body": [
                "<Page pageContent={false}>",
                "  <Navbar title=\"Static Tabs\" backLink=\"Back\"></Navbar>",
                "  <Toolbar tabbar bottom>",
                "    <Link tabLink=\"#tab-1\" tabLinkActive>Tab 1</Link>",
                "    <Link tabLink=\"#tab-2\">Tab 2</Link>",
                "    <Link tabLink=\"#tab-3\">Tab 3</Link>",
                "  </Toolbar>",
                "  <Tabs>",
                "    <Tab id=\"tab-1\" className=\"page-content\" tabActive>",
                "      <Block>",
                "        <p>Tab 1 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "    <Tab id=\"tab-2\" className=\"page-content\">",
                "      <Block>",
                "        <p>Tab 2 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "    <Tab id=\"tab-3\" className=\"page-content\">",
                "      <Block>",
                "        <p>Tab 3 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "  </Tabs>",
                "</Page>",
                "",
                "      h3 Animated Tabs",
                "<Page pageContent={false}>",
                "  <Navbar title=\"Animated Tabs\" backLink=\"Back\"></Navbar>",
                "  <Toolbar tabbar bottom>",
                "    <Link tabLink=\"#tab-1\" tabLinkActive>Tab 1</Link>",
                "    <Link tabLink=\"#tab-2\">Tab 2</Link>",
                "    <Link tabLink=\"#tab-3\">Tab 3</Link>",
                "  </Toolbar>",
                "  <Tabs animated>",
                "    <Tab id=\"tab-1\" className=\"page-content\" tabActive>",
                "      <Block>",
                "        <p>Tab 1 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "    <Tab id=\"tab-2\" className=\"page-content\">",
                "      <Block>",
                "        <p>Tab 2 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "    <Tab id=\"tab-3\" className=\"page-content\">",
                "      <Block>",
                "        <p>Tab 3 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "  </Tabs>",
                "</Page>",
                "",
                "      h3 Swipeable Tabs",
                "<Page pageContent={false}>",
                "  <Navbar title=\"Swipeable Tabs\" backLink=\"Back\"></Navbar>",
                "  <Toolbar tabbar bottom>",
                "    <Link tabLink=\"#tab-1\" tabLinkActive>Tab 1</Link>",
                "    <Link tabLink=\"#tab-2\">Tab 2</Link>",
                "    <Link tabLink=\"#tab-3\">Tab 3</Link>",
                "  </Toolbar>",
                "  <Tabs swipeable>",
                "    <Tab id=\"tab-1\" className=\"page-content\" tabActive>",
                "      <Block>",
                "        <p>Tab 1 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "    <Tab id=\"tab-2\" className=\"page-content\">",
                "      <Block>",
                "        <p>Tab 2 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "    <Tab id=\"tab-3\" className=\"page-content\">",
                "      <Block>",
                "        <p>Tab 3 content</p>",
                "        ...",
                "      </Block>",
                "    </Tab>",
                "  </Tabs>",
                "</Page>"
            ]
        }
    ],
    "toggle": [
        {
            "prefix": "f7:toggle",
            "description": "",
            "body": [
                "<BlockTitle>Super Heroes</BlockTitle>",
                "<List simpleList>",
                "  <ListItem>",
                "    <span>Batman</span>",
                "    <Toggle defaultChecked />",
                "  </ListItem>",
                "  <ListItem>",
                "    <span>Aquaman</span>",
                "    <Toggle defaultChecked color=\"blue\" />",
                "  </ListItem>",
                "  <ListItem>",
                "    <span>Superman</span>",
                "    <Toggle defaultChecked color=\"red\" />",
                "  </ListItem>",
                "  <ListItem>",
                "    <span>Hulk</span>",
                "    <Toggle color=\"green\" />",
                "  </ListItem>",
                "  <ListItem>",
                "    <span>Spiderman (Disabled)</span>",
                "    <Toggle disabled />",
                "  </ListItem>",
                "  <ListItem>",
                "    <span>Ironman (Disabled)</span>",
                "    <Toggle defaultChecked disabled />",
                "  </ListItem>",
                "  <ListItem>",
                "    <span>Thor</span>",
                "    <Toggle defaultChecked color=\"orange\" />",
                "  </ListItem>",
                "  <ListItem>",
                "    <span>Wonder Woman</span>",
                "    <Toggle color=\"pink\" />",
                "  </ListItem>",
                "</List>"
            ]
        }
    ],
    "toolbar-tabbar": [
        {
            "prefix": "f7:toolbar-tabbar",
            "description": "h3 Toolbar",
            "body": [
                "export default class extends React.Component{",
                "  constructor() {",
                "    this.state = {",
                "      isBottom: true,",
                "    };",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Toolbar\" backLink=\"Back\"></Navbar>",
                "",
                "        <Toolbar position={this.state.isBottom ? 'bottom' : 'top'}>",
                "          <Link>Left Link</Link>",
                "          <Link>Right Link</Link>",
                "        </Toolbar>",
                "",
                "        <BlockTitle>Toolbar Position</BlockTitle>",
                "        <Block>",
                "          <p>Toolbar supports both top and bottom positions. Click the following button to change its position.</p>",
                "          <p>",
                "            <Button raised onClick={() => this.setState({isBottom: !this.state.isBottom})}>Toggle Toolbar Position</Button>",
                "          </p>",
                "        </Block>",
                "",
                "        <Block>",
                "          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam enim quia molestiae facilis laudantium voluptates obcaecati officia cum, sit libero commodi...</p>",
                "        </Block>",
                "      </Page>",
                "    )",
                "  }",
                "}",
                "      h3 Tabbar",
                "export default class extends React.Component{",
                "  constructor() {",
                "    this.state = {",
                "      isBottom: true,",
                "    };",
                "  }",
                "  render() {",
                "    return (",
                "      <Page pageContent={false}>",
                "        <Navbar title=\"Tabbar\" backLink=\"Back\">",
                "          <NavRight>",
                "            <Link iconIos=\"f7:reload\" iconMd=\"material:compare_arrows\" onClick={() => this.setState({isBottom: !this.state.isBottom})}></Link>",
                "          </NavRight>",
                "        </Navbar>",
                "",
                "        <Toolbar tabbar position={this.state.isBottom ? 'bottom' : 'top'}>",
                "          <Link tabLink=\"#tab-1\" tabLinkActive>Tab 1</Link>",
                "          <Link tabLink=\"#tab-2\">Tab 2</Link>",
                "          <Link tabLink=\"#tab-3\">Tab 3</Link>",
                "        </Toolbar>",
                "",
                "        <Tabs>",
                "          <Tab id=\"tab-1\" className=\"page-content\" tabActive>",
                "            <Block>",
                "              <p>Tab 1 content</p>",
                "              ...",
                "            </Block>",
                "          </Tab>",
                "          <Tab id=\"tab-2\" className=\"page-content\">",
                "            <Block>",
                "              <p>Tab 2 content</p>",
                "              ...",
                "            </Block>",
                "          </Tab>",
                "          <Tab id=\"tab-3\" className=\"page-content\">",
                "            <Block>",
                "              <p>Tab 3 content</p>",
                "              ...",
                "            </Block>",
                "          </Tab>",
                "        </Tabs>",
                "      </Page>",
                "    )",
                "  }",
                "",
                "      h3 Tabbar Labels",
                "export default class extends React.Component{",
                "  constructor() {",
                "    this.state = {",
                "      isBottom: true,",
                "    };",
                "  }",
                "  render() {",
                "    return (",
                "      <Page pageContent={false}>",
                "        <Navbar title=\"Tabbar Labels\" backLink=\"Back\">",
                "          <NavRight>",
                "            <Link iconIos=\"f7:reload\" iconMd=\"material:compare_arrows\" onClick={() => this.setState({isBottom: !this.state.isBottom})}></Link>",
                "          </NavRight>",
                "        </Navbar>",
                "",
                "        <Toolbar tabbar labels position={this.state.isBottom ? 'bottom' : 'top'}>",
                "          <Link tabLink=\"#tab-1\" tabLinkActive text=\"Tab 1\" iconIos=\"f7:email_fill\" iconMd=\"material:email\"></Link>",
                "          <Link tabLink=\"#tab-2\" text=\"Tab 2\" iconIos=\"f7:today_fill\" iconMd=\"material:today\"></Link>",
                "          <Link tabLink=\"#tab-3\" text=\"Tab 3\" iconIos=\"f7:cloud_fill\" iconMd=\"material:file_upload\"></Link>",
                "        </Toolbar>",
                "",
                "        <Tabs>",
                "          <Tab id=\"tab-1\" className=\"page-content\" tabActive>",
                "            <Block>",
                "              <p>Tab 1 content</p>",
                "              ...",
                "            </Block>",
                "          </Tab>",
                "          <Tab id=\"tab-2\" className=\"page-content\">",
                "            <Block>",
                "              <p>Tab 2 content</p>",
                "              ...",
                "            </Block>",
                "          </Tab>",
                "          <Tab id=\"tab-3\" className=\"page-content\">",
                "            <Block>",
                "              <p>Tab 3 content</p>",
                "              ...",
                "            </Block>",
                "          </Tab>",
                "        </Tabs>",
                "      </Page>",
                "    )",
                "  }",
                "}",
                "",
                "      h3 Tabbar Scrollable",
                "export default class extends React.Component{",
                "  constructor() {",
                "    this.state = {",
                "      isBottom: true,",
                "    };",
                "  }",
                "  render() {",
                "    const tabs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];",
                "    return (",
                "      <Page pageContent={false}>",
                "        <Navbar title=\"Tabbar Scrollable\" backLink=\"Back\">",
                "          <NavRight>",
                "            <Link iconIos=\"f7:reload\" iconMd=\"material:compare_arrows\" onClick={() => this.setState({isBottom: !this.state.isBottom})}></Link>",
                "          </NavRight>",
                "        </Navbar>",
                "",
                "        <Toolbar tabbar scrollable position={this.state.isBottom ? 'bottom' : 'top'}>",
                "          {tabs.map((tab, index) => (",
                "            <Link",
                "              key={tab}",
                "              tabLink={`#tab-${tab}`}",
                "              tabLinkActive={index === 0}",
                "            >Tab {tab}</Link>",
                "          ))}",
                "        </Toolbar>",
                "",
                "        <Tabs>",
                "          {tabs.map((tab, index) => (",
                "            <Tab",
                "              key={tab}",
                "              id={`tab-${tab}`}",
                "              className=\"page-content\"",
                "              tabActive={index === 0}",
                "            >",
                "              <Block>",
                "                <p><b>Tab {tab} content</b></p>",
                "                ...",
                "              </Block>",
                "            </Tab>",
                "          ))}",
                "        </Tabs>",
                "      </Page>",
                "    )",
                "  }",
                "}",
                "",
                "      h3 Hide Toolbar On Scroll",
                "export default () => (",
                "  <Page hideToolbarOnScroll>",
                "    <Navbar title=\"Hide Toolbar On Scroll\" backLink=\"Back\"></Navbar>",
                "",
                "    <Toolbar bottom-md>",
                "      <Link>Left Link</Link>",
                "      <Link>Right Link</Link>",
                "    </Toolbar>",
                "",
                "    <Block strong>",
                "      <p>Toolbar will be hidden if you scroll bottom</p>",
                "    </Block>",
                "    <Block>",
                "      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos maxime incidunt id ab culpa ipsa omnis eos, vel excepturi officiis neque illum perferendis dolorum magnam rerum natus dolore nulla ex.</p>",
                "      ...",
                "    </Block>",
                "  </Page>",
                ");"
            ]
        }
    ],
    "view": [
        {
            "prefix": "f7:view",
            "description": "Minimal layout",
            "body": [
                "          <View main>",
                "...",
                "          </View>",
                "",
                "          {/* Renders to: */}",
                "",
                "          <div class=\"view view-main\">",
                "...",
                "          </div>"
            ]
        },
        {
            "prefix": "f7:view",
            "description": "Views As Tabs",
            "body": [
                "          <App>",
                "...",
                "<Views tabs>",
                "  <View id=\"tab-1\" main tab tabActive>...</View>",
                "  <View id=\"tab-2\" tab>...</View>",
                "</Views>",
                "...",
                "          </App>",
                "",
                "          {/* Renders to: */}",
                "          <div class=\"framework7-root\">",
                "<div class=\"views tabs\">",
                "  <div class=\"view view-main tab tab-active\" id=\"tab-1\">...</div>",
                "  <div class=\"view tab\" id=\"tab-2\">...</div>",
                "</div>",
                "          </div>"
            ]
        },
        {
            "prefix": "f7:view",
            "description": "With parameters",
            "body": [
                "          <View",
                "url=\"/home/\"",
                "animate={false}",
                "iosDynamicNavbar={false}",
                "pushState={true}",
                "          >",
                "...",
                "          </View>"
            ]
        }
    ],
    "virtual-list": [
        {
            "prefix": "f7:virtual-list",
            "description": "p Here is the full page example with Virtual List and Searchbar to search through Virtual List items:",
            "body": [
                "export default class extends React.Component {",
                "  constructor(props) {",
                "    super(props);",
                "",
                "    const items = [];",
                "    for (let i = 1; i <= 10000; i += 1) {",
                "      items.push({",
                "        title: `Item ${i}`,",
                "        subtitle: `Subtitle ${i}`,",
                "      });",
                "    }",
                "    this.state = {",
                "      items,",
                "      vlData: {",
                "        items: [],",
                "      },",
                "    };",
                "  }",
                "  searchAll(query, items) {",
                "    const found = [];",
                "    for (let i = 0; i < items.length; i += 1) {",
                "      if (items[i].title.toLowerCase().indexOf(query.toLowerCase()) >= 0 || query.trim() === '') found.push(i);",
                "    }",
                "    return found; // return array with mathced indexes",
                "  }",
                "  renderExternal(vl, vlData) {",
                "    this.setState({ vlData });",
                "  }",
                "  render() {",
                "    return (",
                "      <Page>",
                "        <Navbar title=\"Virtual List\" backLink=\"Back\">",
                "          <Subnavbar inner={false}>",
                "            <Searchbar",
                "              searchContainer=\".virtual-list\"",
                "              searchItem=\"li\"",
                "              searchIn=\".item-title\"",
                "            ></Searchbar>",
                "          </Subnavbar>",
                "        </Navbar>",
                "        <Block>",
                "          <p>Virtual List allows to render lists with huge amount of elements without loss of performance. And it is fully compatible with all Framework7 list components such as Search Bar, Infinite Scroll, Pull To Refresh, Swipeouts (swipe-to-delete) and Sortable.</p>",
                "          <p>Here is the example of virtual list with 10 000 items:</p>",
                "        </Block>",
                "        <List className=\"searchbar-not-found\">",
                "          <ListItem title=\"Nothing found\"></ListItem>",
                "        </List>",
                "        <List",
                "          className=\"searchbar-found\"",
                "          medialList",
                "          virtualList",
                "          virtualListParams={{ items: this.state.items, searchAll: this.searchAll, renderExternal: this.renderExternal.bind(this), height: this.$theme.ios ? 63 : 73}}",
                "        >",
                "          <ul>",
                "            {this.state.vlData.items.map((item, index) => (",
                "              <ListItem",
                "                key={index}",
                "                mediaItem",
                "                link=\"#\"",
                "                title={item.title}",
                "                subtitle={item.subtitle}",
                "                style={{top: `${this.state.vlData.topPosition}px`}}",
                "              ></ListItem>",
                "            ))}",
                "          </ul>",
                "        </List>",
                "      </Page>",
                "    )",
                "  }",
                "}"
            ]
        }
    ]
}